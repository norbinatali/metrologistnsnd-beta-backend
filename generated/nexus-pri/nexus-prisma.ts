/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Post: PostObject
      User: UserObject
      MyDevice: MyDeviceObject
      Appointments: AppointmentsObject
      Team: TeamObject
      TeamMembers: TeamMembersObject
      PostConnection: PostConnectionObject
      PageInfo: PageInfoObject
      PostEdge: PostEdgeObject
      AggregatePost: AggregatePostObject
      UserConnection: UserConnectionObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      Device: DeviceObject
      TR: TRObject
      DTC: DTCObject
      DeviceConnection: DeviceConnectionObject
      DeviceEdge: DeviceEdgeObject
      AggregateDevice: AggregateDeviceObject
      DTCConnection: DTCConnectionObject
      DTCEdge: DTCEdgeObject
      AggregateDTC: AggregateDTCObject
      TRConnection: TRConnectionObject
      TREdge: TREdgeObject
      AggregateTR: AggregateTRObject
      LetterEmail: LetterEmailObject
      LetterEmailConnection: LetterEmailConnectionObject
      LetterEmailEdge: LetterEmailEdgeObject
      AggregateLetterEmail: AggregateLetterEmailObject
      MyDeviceConnection: MyDeviceConnectionObject
      MyDeviceEdge: MyDeviceEdgeObject
      AggregateMyDevice: AggregateMyDeviceObject
      TeamConnection: TeamConnectionObject
      TeamEdge: TeamEdgeObject
      AggregateTeam: AggregateTeamObject
      TeamMembersConnection: TeamMembersConnectionObject
      TeamMembersEdge: TeamMembersEdgeObject
      AggregateTeamMembers: AggregateTeamMembersObject
      AppointmentsConnection: AppointmentsConnectionObject
      AppointmentsEdge: AppointmentsEdgeObject
      AggregateAppointments: AggregateAppointmentsObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      PostSubscriptionPayload: PostSubscriptionPayloadObject
      PostPreviousValues: PostPreviousValuesObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      DeviceSubscriptionPayload: DeviceSubscriptionPayloadObject
      DevicePreviousValues: DevicePreviousValuesObject
      DTCSubscriptionPayload: DTCSubscriptionPayloadObject
      DTCPreviousValues: DTCPreviousValuesObject
      TRSubscriptionPayload: TRSubscriptionPayloadObject
      TRPreviousValues: TRPreviousValuesObject
      LetterEmailSubscriptionPayload: LetterEmailSubscriptionPayloadObject
      LetterEmailPreviousValues: LetterEmailPreviousValuesObject
      MyDeviceSubscriptionPayload: MyDeviceSubscriptionPayloadObject
      MyDevicePreviousValues: MyDevicePreviousValuesObject
      TeamSubscriptionPayload: TeamSubscriptionPayloadObject
      TeamPreviousValues: TeamPreviousValuesObject
      TeamMembersSubscriptionPayload: TeamMembersSubscriptionPayloadObject
      TeamMembersPreviousValues: TeamMembersPreviousValuesObject
      AppointmentsSubscriptionPayload: AppointmentsSubscriptionPayloadObject
      AppointmentsPreviousValues: AppointmentsPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Post: PostFieldDetails
      User: UserFieldDetails
      MyDevice: MyDeviceFieldDetails
      Appointments: AppointmentsFieldDetails
      Team: TeamFieldDetails
      TeamMembers: TeamMembersFieldDetails
      PostConnection: PostConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      PostEdge: PostEdgeFieldDetails
      AggregatePost: AggregatePostFieldDetails
      UserConnection: UserConnectionFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      Device: DeviceFieldDetails
      TR: TRFieldDetails
      DTC: DTCFieldDetails
      DeviceConnection: DeviceConnectionFieldDetails
      DeviceEdge: DeviceEdgeFieldDetails
      AggregateDevice: AggregateDeviceFieldDetails
      DTCConnection: DTCConnectionFieldDetails
      DTCEdge: DTCEdgeFieldDetails
      AggregateDTC: AggregateDTCFieldDetails
      TRConnection: TRConnectionFieldDetails
      TREdge: TREdgeFieldDetails
      AggregateTR: AggregateTRFieldDetails
      LetterEmail: LetterEmailFieldDetails
      LetterEmailConnection: LetterEmailConnectionFieldDetails
      LetterEmailEdge: LetterEmailEdgeFieldDetails
      AggregateLetterEmail: AggregateLetterEmailFieldDetails
      MyDeviceConnection: MyDeviceConnectionFieldDetails
      MyDeviceEdge: MyDeviceEdgeFieldDetails
      AggregateMyDevice: AggregateMyDeviceFieldDetails
      TeamConnection: TeamConnectionFieldDetails
      TeamEdge: TeamEdgeFieldDetails
      AggregateTeam: AggregateTeamFieldDetails
      TeamMembersConnection: TeamMembersConnectionFieldDetails
      TeamMembersEdge: TeamMembersEdgeFieldDetails
      AggregateTeamMembers: AggregateTeamMembersFieldDetails
      AppointmentsConnection: AppointmentsConnectionFieldDetails
      AppointmentsEdge: AppointmentsEdgeFieldDetails
      AggregateAppointments: AggregateAppointmentsFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      PostSubscriptionPayload: PostSubscriptionPayloadFieldDetails
      PostPreviousValues: PostPreviousValuesFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      DeviceSubscriptionPayload: DeviceSubscriptionPayloadFieldDetails
      DevicePreviousValues: DevicePreviousValuesFieldDetails
      DTCSubscriptionPayload: DTCSubscriptionPayloadFieldDetails
      DTCPreviousValues: DTCPreviousValuesFieldDetails
      TRSubscriptionPayload: TRSubscriptionPayloadFieldDetails
      TRPreviousValues: TRPreviousValuesFieldDetails
      LetterEmailSubscriptionPayload: LetterEmailSubscriptionPayloadFieldDetails
      LetterEmailPreviousValues: LetterEmailPreviousValuesFieldDetails
      MyDeviceSubscriptionPayload: MyDeviceSubscriptionPayloadFieldDetails
      MyDevicePreviousValues: MyDevicePreviousValuesFieldDetails
      TeamSubscriptionPayload: TeamSubscriptionPayloadFieldDetails
      TeamPreviousValues: TeamPreviousValuesFieldDetails
      TeamMembersSubscriptionPayload: TeamMembersSubscriptionPayloadFieldDetails
      TeamMembersPreviousValues: TeamMembersPreviousValuesFieldDetails
      AppointmentsSubscriptionPayload: AppointmentsSubscriptionPayloadFieldDetails
      AppointmentsPreviousValues: AppointmentsPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      PostWhereUniqueInput: PostWhereUniqueInputInputObject
      PostWhereInput: PostWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      MyDeviceWhereInput: MyDeviceWhereInputInputObject
      AppointmentsWhereInput: AppointmentsWhereInputInputObject
      TeamWhereInput: TeamWhereInputInputObject
      TeamMembersWhereInput: TeamMembersWhereInputInputObject
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      DeviceWhereUniqueInput: DeviceWhereUniqueInputInputObject
      DeviceWhereInput: DeviceWhereInputInputObject
      TRWhereInput: TRWhereInputInputObject
      DTCWhereInput: DTCWhereInputInputObject
      DTCWhereUniqueInput: DTCWhereUniqueInputInputObject
      TRWhereUniqueInput: TRWhereUniqueInputInputObject
      LetterEmailWhereUniqueInput: LetterEmailWhereUniqueInputInputObject
      LetterEmailWhereInput: LetterEmailWhereInputInputObject
      MyDeviceWhereUniqueInput: MyDeviceWhereUniqueInputInputObject
      TeamWhereUniqueInput: TeamWhereUniqueInputInputObject
      TeamMembersWhereUniqueInput: TeamMembersWhereUniqueInputInputObject
      AppointmentsWhereUniqueInput: AppointmentsWhereUniqueInputInputObject
      PostCreateInput: PostCreateInputInputObject
      UserCreateOneWithoutPostsInput: UserCreateOneWithoutPostsInputInputObject
      UserCreateWithoutPostsInput: UserCreateWithoutPostsInputInputObject
      MyDeviceCreateManyWithoutAuthorInput: MyDeviceCreateManyWithoutAuthorInputInputObject
      MyDeviceCreateWithoutAuthorInput: MyDeviceCreateWithoutAuthorInputInputObject
      AppointmentsCreateManyWithoutAuthorInput: AppointmentsCreateManyWithoutAuthorInputInputObject
      AppointmentsCreateWithoutAuthorInput: AppointmentsCreateWithoutAuthorInputInputObject
      TeamCreateManyWithoutAuthorInput: TeamCreateManyWithoutAuthorInputInputObject
      TeamCreateWithoutAuthorInput: TeamCreateWithoutAuthorInputInputObject
      TeamMembersCreateManyWithoutTeamInput: TeamMembersCreateManyWithoutTeamInputInputObject
      TeamMembersCreateWithoutTeamInput: TeamMembersCreateWithoutTeamInputInputObject
      PostUpdateInput: PostUpdateInputInputObject
      UserUpdateOneRequiredWithoutPostsInput: UserUpdateOneRequiredWithoutPostsInputInputObject
      UserUpdateWithoutPostsDataInput: UserUpdateWithoutPostsDataInputInputObject
      MyDeviceUpdateManyWithoutAuthorInput: MyDeviceUpdateManyWithoutAuthorInputInputObject
      MyDeviceUpdateWithWhereUniqueWithoutAuthorInput: MyDeviceUpdateWithWhereUniqueWithoutAuthorInputInputObject
      MyDeviceUpdateWithoutAuthorDataInput: MyDeviceUpdateWithoutAuthorDataInputInputObject
      MyDeviceUpsertWithWhereUniqueWithoutAuthorInput: MyDeviceUpsertWithWhereUniqueWithoutAuthorInputInputObject
      MyDeviceScalarWhereInput: MyDeviceScalarWhereInputInputObject
      MyDeviceUpdateManyWithWhereNestedInput: MyDeviceUpdateManyWithWhereNestedInputInputObject
      MyDeviceUpdateManyDataInput: MyDeviceUpdateManyDataInputInputObject
      AppointmentsUpdateManyWithoutAuthorInput: AppointmentsUpdateManyWithoutAuthorInputInputObject
      AppointmentsUpdateWithWhereUniqueWithoutAuthorInput: AppointmentsUpdateWithWhereUniqueWithoutAuthorInputInputObject
      AppointmentsUpdateWithoutAuthorDataInput: AppointmentsUpdateWithoutAuthorDataInputInputObject
      AppointmentsUpsertWithWhereUniqueWithoutAuthorInput: AppointmentsUpsertWithWhereUniqueWithoutAuthorInputInputObject
      AppointmentsScalarWhereInput: AppointmentsScalarWhereInputInputObject
      AppointmentsUpdateManyWithWhereNestedInput: AppointmentsUpdateManyWithWhereNestedInputInputObject
      AppointmentsUpdateManyDataInput: AppointmentsUpdateManyDataInputInputObject
      TeamUpdateManyWithoutAuthorInput: TeamUpdateManyWithoutAuthorInputInputObject
      TeamUpdateWithWhereUniqueWithoutAuthorInput: TeamUpdateWithWhereUniqueWithoutAuthorInputInputObject
      TeamUpdateWithoutAuthorDataInput: TeamUpdateWithoutAuthorDataInputInputObject
      TeamMembersUpdateManyWithoutTeamInput: TeamMembersUpdateManyWithoutTeamInputInputObject
      TeamMembersUpdateWithWhereUniqueWithoutTeamInput: TeamMembersUpdateWithWhereUniqueWithoutTeamInputInputObject
      TeamMembersUpdateWithoutTeamDataInput: TeamMembersUpdateWithoutTeamDataInputInputObject
      TeamMembersUpsertWithWhereUniqueWithoutTeamInput: TeamMembersUpsertWithWhereUniqueWithoutTeamInputInputObject
      TeamMembersScalarWhereInput: TeamMembersScalarWhereInputInputObject
      TeamMembersUpdateManyWithWhereNestedInput: TeamMembersUpdateManyWithWhereNestedInputInputObject
      TeamMembersUpdateManyDataInput: TeamMembersUpdateManyDataInputInputObject
      TeamUpsertWithWhereUniqueWithoutAuthorInput: TeamUpsertWithWhereUniqueWithoutAuthorInputInputObject
      TeamScalarWhereInput: TeamScalarWhereInputInputObject
      TeamUpdateManyWithWhereNestedInput: TeamUpdateManyWithWhereNestedInputInputObject
      TeamUpdateManyDataInput: TeamUpdateManyDataInputInputObject
      UserUpsertWithoutPostsInput: UserUpsertWithoutPostsInputInputObject
      PostUpdateManyMutationInput: PostUpdateManyMutationInputInputObject
      UserCreateInput: UserCreateInputInputObject
      PostCreateManyWithoutAuthorInput: PostCreateManyWithoutAuthorInputInputObject
      PostCreateWithoutAuthorInput: PostCreateWithoutAuthorInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      PostUpdateManyWithoutAuthorInput: PostUpdateManyWithoutAuthorInputInputObject
      PostUpdateWithWhereUniqueWithoutAuthorInput: PostUpdateWithWhereUniqueWithoutAuthorInputInputObject
      PostUpdateWithoutAuthorDataInput: PostUpdateWithoutAuthorDataInputInputObject
      PostUpsertWithWhereUniqueWithoutAuthorInput: PostUpsertWithWhereUniqueWithoutAuthorInputInputObject
      PostScalarWhereInput: PostScalarWhereInputInputObject
      PostUpdateManyWithWhereNestedInput: PostUpdateManyWithWhereNestedInputInputObject
      PostUpdateManyDataInput: PostUpdateManyDataInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      DeviceCreateInput: DeviceCreateInputInputObject
      TRCreateOneWithoutDevice_idInput: TRCreateOneWithoutDevice_idInputInputObject
      TRCreateWithoutDevice_idInput: TRCreateWithoutDevice_idInputInputObject
      DTCCreateOneWithoutDevice_idInput: DTCCreateOneWithoutDevice_idInputInputObject
      DTCCreateWithoutDevice_idInput: DTCCreateWithoutDevice_idInputInputObject
      DeviceUpdateInput: DeviceUpdateInputInputObject
      TRUpdateOneRequiredWithoutDevice_idInput: TRUpdateOneRequiredWithoutDevice_idInputInputObject
      TRUpdateWithoutDevice_idDataInput: TRUpdateWithoutDevice_idDataInputInputObject
      TRUpsertWithoutDevice_idInput: TRUpsertWithoutDevice_idInputInputObject
      DTCUpdateOneRequiredWithoutDevice_idInput: DTCUpdateOneRequiredWithoutDevice_idInputInputObject
      DTCUpdateWithoutDevice_idDataInput: DTCUpdateWithoutDevice_idDataInputInputObject
      DTCUpsertWithoutDevice_idInput: DTCUpsertWithoutDevice_idInputInputObject
      DeviceUpdateManyMutationInput: DeviceUpdateManyMutationInputInputObject
      DTCCreateInput: DTCCreateInputInputObject
      DeviceCreateManyWithoutDtcInput: DeviceCreateManyWithoutDtcInputInputObject
      DeviceCreateWithoutDtcInput: DeviceCreateWithoutDtcInputInputObject
      DTCUpdateInput: DTCUpdateInputInputObject
      DeviceUpdateManyWithoutDtcInput: DeviceUpdateManyWithoutDtcInputInputObject
      DeviceUpdateWithWhereUniqueWithoutDtcInput: DeviceUpdateWithWhereUniqueWithoutDtcInputInputObject
      DeviceUpdateWithoutDtcDataInput: DeviceUpdateWithoutDtcDataInputInputObject
      DeviceUpsertWithWhereUniqueWithoutDtcInput: DeviceUpsertWithWhereUniqueWithoutDtcInputInputObject
      DeviceScalarWhereInput: DeviceScalarWhereInputInputObject
      DeviceUpdateManyWithWhereNestedInput: DeviceUpdateManyWithWhereNestedInputInputObject
      DeviceUpdateManyDataInput: DeviceUpdateManyDataInputInputObject
      DTCUpdateManyMutationInput: DTCUpdateManyMutationInputInputObject
      TRCreateInput: TRCreateInputInputObject
      DeviceCreateManyWithoutTrInput: DeviceCreateManyWithoutTrInputInputObject
      DeviceCreateWithoutTrInput: DeviceCreateWithoutTrInputInputObject
      TRUpdateInput: TRUpdateInputInputObject
      DeviceUpdateManyWithoutTrInput: DeviceUpdateManyWithoutTrInputInputObject
      DeviceUpdateWithWhereUniqueWithoutTrInput: DeviceUpdateWithWhereUniqueWithoutTrInputInputObject
      DeviceUpdateWithoutTrDataInput: DeviceUpdateWithoutTrDataInputInputObject
      DeviceUpsertWithWhereUniqueWithoutTrInput: DeviceUpsertWithWhereUniqueWithoutTrInputInputObject
      TRUpdateManyMutationInput: TRUpdateManyMutationInputInputObject
      LetterEmailCreateInput: LetterEmailCreateInputInputObject
      LetterEmailUpdateInput: LetterEmailUpdateInputInputObject
      LetterEmailUpdateManyMutationInput: LetterEmailUpdateManyMutationInputInputObject
      MyDeviceCreateInput: MyDeviceCreateInputInputObject
      UserCreateOneWithoutMydevicesInput: UserCreateOneWithoutMydevicesInputInputObject
      UserCreateWithoutMydevicesInput: UserCreateWithoutMydevicesInputInputObject
      MyDeviceUpdateInput: MyDeviceUpdateInputInputObject
      UserUpdateOneRequiredWithoutMydevicesInput: UserUpdateOneRequiredWithoutMydevicesInputInputObject
      UserUpdateWithoutMydevicesDataInput: UserUpdateWithoutMydevicesDataInputInputObject
      UserUpsertWithoutMydevicesInput: UserUpsertWithoutMydevicesInputInputObject
      MyDeviceUpdateManyMutationInput: MyDeviceUpdateManyMutationInputInputObject
      TeamCreateInput: TeamCreateInputInputObject
      UserCreateOneWithoutTeamsInput: UserCreateOneWithoutTeamsInputInputObject
      UserCreateWithoutTeamsInput: UserCreateWithoutTeamsInputInputObject
      TeamUpdateInput: TeamUpdateInputInputObject
      UserUpdateOneWithoutTeamsInput: UserUpdateOneWithoutTeamsInputInputObject
      UserUpdateWithoutTeamsDataInput: UserUpdateWithoutTeamsDataInputInputObject
      UserUpsertWithoutTeamsInput: UserUpsertWithoutTeamsInputInputObject
      TeamUpdateManyMutationInput: TeamUpdateManyMutationInputInputObject
      TeamMembersCreateInput: TeamMembersCreateInputInputObject
      TeamCreateOneWithoutTeamMembersInput: TeamCreateOneWithoutTeamMembersInputInputObject
      TeamCreateWithoutTeamMembersInput: TeamCreateWithoutTeamMembersInputInputObject
      TeamMembersUpdateInput: TeamMembersUpdateInputInputObject
      TeamUpdateOneRequiredWithoutTeamMembersInput: TeamUpdateOneRequiredWithoutTeamMembersInputInputObject
      TeamUpdateWithoutTeamMembersDataInput: TeamUpdateWithoutTeamMembersDataInputInputObject
      TeamUpsertWithoutTeamMembersInput: TeamUpsertWithoutTeamMembersInputInputObject
      TeamMembersUpdateManyMutationInput: TeamMembersUpdateManyMutationInputInputObject
      AppointmentsCreateInput: AppointmentsCreateInputInputObject
      UserCreateOneWithoutAppointmentsInput: UserCreateOneWithoutAppointmentsInputInputObject
      UserCreateWithoutAppointmentsInput: UserCreateWithoutAppointmentsInputInputObject
      AppointmentsUpdateInput: AppointmentsUpdateInputInputObject
      UserUpdateOneRequiredWithoutAppointmentsInput: UserUpdateOneRequiredWithoutAppointmentsInputInputObject
      UserUpdateWithoutAppointmentsDataInput: UserUpdateWithoutAppointmentsDataInputInputObject
      UserUpsertWithoutAppointmentsInput: UserUpsertWithoutAppointmentsInputInputObject
      AppointmentsUpdateManyMutationInput: AppointmentsUpdateManyMutationInputInputObject
      PostSubscriptionWhereInput: PostSubscriptionWhereInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      DeviceSubscriptionWhereInput: DeviceSubscriptionWhereInputInputObject
      DTCSubscriptionWhereInput: DTCSubscriptionWhereInputInputObject
      TRSubscriptionWhereInput: TRSubscriptionWhereInputInputObject
      LetterEmailSubscriptionWhereInput: LetterEmailSubscriptionWhereInputInputObject
      MyDeviceSubscriptionWhereInput: MyDeviceSubscriptionWhereInputInputObject
      TeamSubscriptionWhereInput: TeamSubscriptionWhereInputInputObject
      TeamMembersSubscriptionWhereInput: TeamMembersSubscriptionWhereInputInputObject
      AppointmentsSubscriptionWhereInput: AppointmentsSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    Role: RoleValues,
    Members: MembersValues,
    PostOrderByInput: PostOrderByInputValues,
    MyDeviceOrderByInput: MyDeviceOrderByInputValues,
    AppointmentsOrderByInput: AppointmentsOrderByInputValues,
    TeamOrderByInput: TeamOrderByInputValues,
    TeamMembersOrderByInput: TeamMembersOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    DeviceOrderByInput: DeviceOrderByInputValues,
    DTCOrderByInput: DTCOrderByInputValues,
    TROrderByInput: TROrderByInputValues,
    LetterEmailOrderByInput: LetterEmailOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'post', args?: QueryPostArgs[] | false, alias?: string  } 
  | { name: 'posts', args?: QueryPostsArgs[] | false, alias?: string  } 
  | { name: 'postsConnection', args?: QueryPostsConnectionArgs[] | false, alias?: string  } 
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'device', args?: QueryDeviceArgs[] | false, alias?: string  } 
  | { name: 'devices', args?: QueryDevicesArgs[] | false, alias?: string  } 
  | { name: 'devicesConnection', args?: QueryDevicesConnectionArgs[] | false, alias?: string  } 
  | { name: 'dTC', args?: QueryDTCArgs[] | false, alias?: string  } 
  | { name: 'dTCs', args?: QueryDTCsArgs[] | false, alias?: string  } 
  | { name: 'dTCsConnection', args?: QueryDTCsConnectionArgs[] | false, alias?: string  } 
  | { name: 'tR', args?: QueryTRArgs[] | false, alias?: string  } 
  | { name: 'tRs', args?: QueryTRsArgs[] | false, alias?: string  } 
  | { name: 'tRsConnection', args?: QueryTRsConnectionArgs[] | false, alias?: string  } 
  | { name: 'letterEmail', args?: QueryLetterEmailArgs[] | false, alias?: string  } 
  | { name: 'letterEmails', args?: QueryLetterEmailsArgs[] | false, alias?: string  } 
  | { name: 'letterEmailsConnection', args?: QueryLetterEmailsConnectionArgs[] | false, alias?: string  } 
  | { name: 'myDevice', args?: QueryMyDeviceArgs[] | false, alias?: string  } 
  | { name: 'myDevices', args?: QueryMyDevicesArgs[] | false, alias?: string  } 
  | { name: 'myDevicesConnection', args?: QueryMyDevicesConnectionArgs[] | false, alias?: string  } 
  | { name: 'team', args?: QueryTeamArgs[] | false, alias?: string  } 
  | { name: 'teams', args?: QueryTeamsArgs[] | false, alias?: string  } 
  | { name: 'teamsConnection', args?: QueryTeamsConnectionArgs[] | false, alias?: string  } 
  | { name: 'teamMembers', args?: QueryTeamMembersArgs[] | false, alias?: string  } 
  | { name: 'teamMemberses', args?: QueryTeamMembersesArgs[] | false, alias?: string  } 
  | { name: 'teamMembersesConnection', args?: QueryTeamMembersesConnectionArgs[] | false, alias?: string  } 
  | { name: 'appointments', args?: QueryAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'appointmentses', args?: QueryAppointmentsesArgs[] | false, alias?: string  } 
  | { name: 'appointmentsesConnection', args?: QueryAppointmentsesConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'post'
  | 'posts'
  | 'postsConnection'
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'device'
  | 'devices'
  | 'devicesConnection'
  | 'dTC'
  | 'dTCs'
  | 'dTCsConnection'
  | 'tR'
  | 'tRs'
  | 'tRsConnection'
  | 'letterEmail'
  | 'letterEmails'
  | 'letterEmailsConnection'
  | 'myDevice'
  | 'myDevices'
  | 'myDevicesConnection'
  | 'team'
  | 'teams'
  | 'teamsConnection'
  | 'teamMembers'
  | 'teamMemberses'
  | 'teamMembersesConnection'
  | 'appointments'
  | 'appointmentses'
  | 'appointmentsesConnection'


type QueryPostArgs =
  | 'where'
type QueryPostsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPostsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDeviceArgs =
  | 'where'
type QueryDevicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDevicesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDTCArgs =
  | 'where'
type QueryDTCsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryDTCsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTRArgs =
  | 'where'
type QueryTRsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTRsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryLetterEmailArgs =
  | 'where'
type QueryLetterEmailsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryLetterEmailsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMyDeviceArgs =
  | 'where'
type QueryMyDevicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMyDevicesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTeamArgs =
  | 'where'
type QueryTeamsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTeamsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTeamMembersArgs =
  | 'where'
type QueryTeamMembersesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTeamMembersesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAppointmentsArgs =
  | 'where'
type QueryAppointmentsesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAppointmentsesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  post: {
    type: 'Post'
    args: Record<QueryPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PostWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post | null> | prisma.Post | null
  }
  posts: {
    type: 'Post'
    args: Record<QueryPostsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PostWhereInput | null, orderBy?: prisma.PostOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post[]> | prisma.Post[]
  }
  postsConnection: {
    type: 'PostConnection'
    args: Record<QueryPostsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PostWhereInput | null, orderBy?: prisma.PostOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostConnection> | prisma.PostConnection
  }
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  device: {
    type: 'Device'
    args: Record<QueryDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DeviceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device | null> | prisma.Device | null
  }
  devices: {
    type: 'Device'
    args: Record<QueryDevicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DeviceWhereInput | null, orderBy?: prisma.DeviceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device[]> | prisma.Device[]
  }
  devicesConnection: {
    type: 'DeviceConnection'
    args: Record<QueryDevicesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DeviceWhereInput | null, orderBy?: prisma.DeviceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DeviceConnection> | prisma.DeviceConnection
  }
  dTC: {
    type: 'DTC'
    args: Record<QueryDTCArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: DTCWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTC | null> | prisma.DTC | null
  }
  dTCs: {
    type: 'DTC'
    args: Record<QueryDTCsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DTCWhereInput | null, orderBy?: prisma.DTCOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTC[]> | prisma.DTC[]
  }
  dTCsConnection: {
    type: 'DTCConnection'
    args: Record<QueryDTCsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: DTCWhereInput | null, orderBy?: prisma.DTCOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTCConnection> | prisma.DTCConnection
  }
  tR: {
    type: 'TR'
    args: Record<QueryTRArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: TRWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TR | null> | prisma.TR | null
  }
  tRs: {
    type: 'TR'
    args: Record<QueryTRsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TRWhereInput | null, orderBy?: prisma.TROrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TR[]> | prisma.TR[]
  }
  tRsConnection: {
    type: 'TRConnection'
    args: Record<QueryTRsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TRWhereInput | null, orderBy?: prisma.TROrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TRConnection> | prisma.TRConnection
  }
  letterEmail: {
    type: 'LetterEmail'
    args: Record<QueryLetterEmailArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: LetterEmailWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmail | null> | prisma.LetterEmail | null
  }
  letterEmails: {
    type: 'LetterEmail'
    args: Record<QueryLetterEmailsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: LetterEmailWhereInput | null, orderBy?: prisma.LetterEmailOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmail[]> | prisma.LetterEmail[]
  }
  letterEmailsConnection: {
    type: 'LetterEmailConnection'
    args: Record<QueryLetterEmailsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: LetterEmailWhereInput | null, orderBy?: prisma.LetterEmailOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmailConnection> | prisma.LetterEmailConnection
  }
  myDevice: {
    type: 'MyDevice'
    args: Record<QueryMyDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MyDeviceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevice | null> | prisma.MyDevice | null
  }
  myDevices: {
    type: 'MyDevice'
    args: Record<QueryMyDevicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MyDeviceWhereInput | null, orderBy?: prisma.MyDeviceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevice[]> | prisma.MyDevice[]
  }
  myDevicesConnection: {
    type: 'MyDeviceConnection'
    args: Record<QueryMyDevicesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MyDeviceWhereInput | null, orderBy?: prisma.MyDeviceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDeviceConnection> | prisma.MyDeviceConnection
  }
  team: {
    type: 'Team'
    args: Record<QueryTeamArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: TeamWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team | null> | prisma.Team | null
  }
  teams: {
    type: 'Team'
    args: Record<QueryTeamsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TeamWhereInput | null, orderBy?: prisma.TeamOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team[]> | prisma.Team[]
  }
  teamsConnection: {
    type: 'TeamConnection'
    args: Record<QueryTeamsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TeamWhereInput | null, orderBy?: prisma.TeamOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamConnection> | prisma.TeamConnection
  }
  teamMembers: {
    type: 'TeamMembers'
    args: Record<QueryTeamMembersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: TeamMembersWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembers | null> | prisma.TeamMembers | null
  }
  teamMemberses: {
    type: 'TeamMembers'
    args: Record<QueryTeamMembersesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TeamMembersWhereInput | null, orderBy?: prisma.TeamMembersOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembers[]> | prisma.TeamMembers[]
  }
  teamMembersesConnection: {
    type: 'TeamMembersConnection'
    args: Record<QueryTeamMembersesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TeamMembersWhereInput | null, orderBy?: prisma.TeamMembersOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembersConnection> | prisma.TeamMembersConnection
  }
  appointments: {
    type: 'Appointments'
    args: Record<QueryAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: AppointmentsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointments | null> | prisma.Appointments | null
  }
  appointmentses: {
    type: 'Appointments'
    args: Record<QueryAppointmentsesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AppointmentsWhereInput | null, orderBy?: prisma.AppointmentsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointments[]> | prisma.Appointments[]
  }
  appointmentsesConnection: {
    type: 'AppointmentsConnection'
    args: Record<QueryAppointmentsesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AppointmentsWhereInput | null, orderBy?: prisma.AppointmentsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AppointmentsConnection> | prisma.AppointmentsConnection
  }
}
  

// Types for Post

type PostObject =
  | PostFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 
  | { name: 'author', args?: [] | false, alias?: string  } 

type PostFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'published'
  | 'title'
  | 'content'
  | 'author'



  

export interface PostFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  author: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Post">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'companyName', args?: [] | false, alias?: string  } 
  | { name: 'country', args?: [] | false, alias?: string  } 
  | { name: 'posts', args?: UserPostsArgs[] | false, alias?: string  } 
  | { name: 'mydevices', args?: UserMydevicesArgs[] | false, alias?: string  } 
  | { name: 'appointments', args?: UserAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'emailConfirmed', args?: [] | false, alias?: string  } 
  | { name: 'emailConfirmToken', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 
  | { name: 'resetToken', args?: [] | false, alias?: string  } 
  | { name: 'resetExpires', args?: [] | false, alias?: string  } 
  | { name: 'lastLogin', args?: [] | false, alias?: string  } 
  | { name: 'joinedAt', args?: [] | false, alias?: string  } 
  | { name: 'teams', args?: UserTeamsArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'email'
  | 'password'
  | 'name'
  | 'companyName'
  | 'country'
  | 'posts'
  | 'mydevices'
  | 'appointments'
  | 'emailConfirmed'
  | 'emailConfirmToken'
  | 'role'
  | 'resetToken'
  | 'resetExpires'
  | 'lastLogin'
  | 'joinedAt'
  | 'teams'


type UserPostsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserMydevicesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserAppointmentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type UserTeamsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  companyName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  country: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  posts: {
    type: 'Post'
    args: Record<UserPostsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: PostWhereInput | null, orderBy?: prisma.PostOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post[]> | prisma.Post[]
  }
  mydevices: {
    type: 'MyDevice'
    args: Record<UserMydevicesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: MyDeviceWhereInput | null, orderBy?: prisma.MyDeviceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevice[]> | prisma.MyDevice[]
  }
  appointments: {
    type: 'Appointments'
    args: Record<UserAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: AppointmentsWhereInput | null, orderBy?: prisma.AppointmentsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointments[]> | prisma.Appointments[]
  }
  emailConfirmed: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailConfirmToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  role: {
    type: 'Role'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Role> | prisma.Role
  }
  resetToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  resetExpires: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  lastLogin: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  joinedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  teams: {
    type: 'Team'
    args: Record<UserTeamsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: TeamWhereInput | null, orderBy?: prisma.TeamOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team[]> | prisma.Team[]
  }
}
  

// Types for MyDevice

type MyDeviceObject =
  | MyDeviceFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name_device', args?: [] | false, alias?: string  } 
  | { name: 'brand_device', args?: [] | false, alias?: string  } 
  | { name: 'series_device', args?: [] | false, alias?: string  } 
  | { name: 'kind_device', args?: [] | false, alias?: string  } 
  | { name: 'certificate_calibration', args?: [] | false, alias?: string  } 
  | { name: 'certificate_verification', args?: [] | false, alias?: string  } 
  | { name: 'certificate_conformity', args?: [] | false, alias?: string  } 
  | { name: 'module_device', args?: [] | false, alias?: string  } 
  | { name: 'tr_device', args?: [] | false, alias?: string  } 
  | { name: 'certificate_assessment_number', args?: [] | false, alias?: string  } 
  | { name: 'certificate_verification_number', args?: [] | false, alias?: string  } 
  | { name: 'certificate_calibration_number', args?: [] | false, alias?: string  } 
  | { name: 'department_assessment_center', args?: [] | false, alias?: string  } 
  | { name: 'department_verification_center', args?: [] | false, alias?: string  } 
  | { name: 'department_calibration_center', args?: [] | false, alias?: string  } 
  | { name: 'conformity_data', args?: [] | false, alias?: string  } 
  | { name: 'calibration_data', args?: [] | false, alias?: string  } 
  | { name: 'valid_verification', args?: [] | false, alias?: string  } 
  | { name: 'notes', args?: [] | false, alias?: string  } 
  | { name: 'author', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 

type MyDeviceFields =
  | 'id'
  | 'name_device'
  | 'brand_device'
  | 'series_device'
  | 'kind_device'
  | 'certificate_calibration'
  | 'certificate_verification'
  | 'certificate_conformity'
  | 'module_device'
  | 'tr_device'
  | 'certificate_assessment_number'
  | 'certificate_verification_number'
  | 'certificate_calibration_number'
  | 'department_assessment_center'
  | 'department_verification_center'
  | 'department_calibration_center'
  | 'conformity_data'
  | 'calibration_data'
  | 'valid_verification'
  | 'notes'
  | 'author'
  | 'createdAt'



  

export interface MyDeviceFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  brand_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  series_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  kind_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_calibration: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_verification: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_conformity: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  module_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  tr_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_assessment_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_verification_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_calibration_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  department_assessment_center: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  department_verification_center: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  department_calibration_center: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  conformity_data: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  calibration_data: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  valid_verification: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  notes: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  author: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MyDevice">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Appointments

type AppointmentsObject =
  | AppointmentsFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'start_date', args?: [] | false, alias?: string  } 
  | { name: 'end_date', args?: [] | false, alias?: string  } 
  | { name: 'location', args?: [] | false, alias?: string  } 
  | { name: 'notes', args?: [] | false, alias?: string  } 
  | { name: 'author', args?: [] | false, alias?: string  } 

type AppointmentsFields =
  | 'id'
  | 'title'
  | 'start_date'
  | 'end_date'
  | 'location'
  | 'notes'
  | 'author'



  

export interface AppointmentsFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  start_date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  end_date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  location: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  notes: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  author: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Appointments">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
}
  

// Types for Team

type TeamObject =
  | TeamFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'author', args?: [] | false, alias?: string  } 
  | { name: 'teamMembers', args?: TeamTeamMembersArgs[] | false, alias?: string  } 
  | { name: 'payment', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 

type TeamFields =
  | 'id'
  | 'name'
  | 'author'
  | 'teamMembers'
  | 'payment'
  | 'role'


type TeamTeamMembersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface TeamFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  author: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Team">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  teamMembers: {
    type: 'TeamMembers'
    args: Record<TeamTeamMembersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Team">,
      args: { where?: TeamMembersWhereInput | null, orderBy?: prisma.TeamMembersOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembers[]> | prisma.TeamMembers[]
  }
  payment: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  role: {
    type: 'Role'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Team">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Role> | prisma.Role
  }
}
  

// Types for TeamMembers

type TeamMembersObject =
  | TeamMembersFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'emailMembers', args?: [] | false, alias?: string  } 
  | { name: 'member', args?: [] | false, alias?: string  } 
  | { name: 'memberConfirmed', args?: [] | false, alias?: string  } 
  | { name: 'memberConfirmToken', args?: [] | false, alias?: string  } 
  | { name: 'team', args?: [] | false, alias?: string  } 

type TeamMembersFields =
  | 'id'
  | 'emailMembers'
  | 'member'
  | 'memberConfirmed'
  | 'memberConfirmToken'
  | 'team'



  

export interface TeamMembersFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailMembers: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  member: {
    type: 'Members'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamMembers">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Members> | prisma.Members
  }
  memberConfirmed: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  memberConfirmToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  team: {
    type: 'Team'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamMembers">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team> | prisma.Team
  }
}
  

// Types for PostConnection

type PostConnectionObject =
  | PostConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PostConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PostConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PostEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PostConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostEdge[]> | prisma.PostEdge[]
  }
  aggregate: {
    type: 'AggregatePost'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePost> | prisma.AggregatePost
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PostEdge

type PostEdgeObject =
  | PostEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PostEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PostEdgeFieldDetails {
  node: {
    type: 'Post'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post> | prisma.Post
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePost

type AggregatePostObject =
  | AggregatePostFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePostFields =
  | 'count'



  

export interface AggregatePostFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Device

type DeviceObject =
  | DeviceFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'name_EN', args?: [] | false, alias?: string  } 
  | { name: 'name_UA', args?: [] | false, alias?: string  } 
  | { name: 'name_RUS', args?: [] | false, alias?: string  } 
  | { name: 'module', args?: [] | false, alias?: string  } 
  | { name: 'tr', args?: [] | false, alias?: string  } 
  | { name: 'dtc', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DeviceFields =
  | 'id'
  | 'published'
  | 'name_EN'
  | 'name_UA'
  | 'name_RUS'
  | 'module'
  | 'tr'
  | 'dtc'
  | 'createdAt'
  | 'updatedAt'



  

export interface DeviceFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_EN: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_UA: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_RUS: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  module: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  tr: {
    type: 'TR'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Device">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TR> | prisma.TR
  }
  dtc: {
    type: 'DTC'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Device">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTC> | prisma.DTC
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TR

type TRObject =
  | TRFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name_TR_UA', args?: [] | false, alias?: string  } 
  | { name: 'name_TR_EN', args?: [] | false, alias?: string  } 
  | { name: 'device_id', args?: TRDevice_idArgs[] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type TRFields =
  | 'id'
  | 'name_TR_UA'
  | 'name_TR_EN'
  | 'device_id'
  | 'createdAt'
  | 'updatedAt'


type TRDevice_idArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface TRFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_TR_UA: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_TR_EN: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  device_id: {
    type: 'Device'
    args: Record<TRDevice_idArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"TR">,
      args: { where?: DeviceWhereInput | null, orderBy?: prisma.DeviceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device[]> | prisma.Device[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DTC

type DTCObject =
  | DTCFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name_UA', args?: [] | false, alias?: string  } 
  | { name: 'name_EN', args?: [] | false, alias?: string  } 
  | { name: 'device_id', args?: DTCDevice_idArgs[] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DTCFields =
  | 'id'
  | 'name_UA'
  | 'name_EN'
  | 'device_id'
  | 'createdAt'
  | 'updatedAt'


type DTCDevice_idArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface DTCFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_UA: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_EN: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  device_id: {
    type: 'Device'
    args: Record<DTCDevice_idArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DTC">,
      args: { where?: DeviceWhereInput | null, orderBy?: prisma.DeviceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device[]> | prisma.Device[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DeviceConnection

type DeviceConnectionObject =
  | DeviceConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DeviceConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DeviceConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DeviceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DeviceEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DeviceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DeviceEdge[]> | prisma.DeviceEdge[]
  }
  aggregate: {
    type: 'AggregateDevice'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DeviceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDevice> | prisma.AggregateDevice
  }
}
  

// Types for DeviceEdge

type DeviceEdgeObject =
  | DeviceEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DeviceEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DeviceEdgeFieldDetails {
  node: {
    type: 'Device'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DeviceEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device> | prisma.Device
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDevice

type AggregateDeviceObject =
  | AggregateDeviceFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDeviceFields =
  | 'count'



  

export interface AggregateDeviceFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DTCConnection

type DTCConnectionObject =
  | DTCConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type DTCConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface DTCConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DTCConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'DTCEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"DTCConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTCEdge[]> | prisma.DTCEdge[]
  }
  aggregate: {
    type: 'AggregateDTC'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DTCConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateDTC> | prisma.AggregateDTC
  }
}
  

// Types for DTCEdge

type DTCEdgeObject =
  | DTCEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type DTCEdgeFields =
  | 'node'
  | 'cursor'



  

export interface DTCEdgeFieldDetails {
  node: {
    type: 'DTC'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DTCEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTC> | prisma.DTC
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateDTC

type AggregateDTCObject =
  | AggregateDTCFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateDTCFields =
  | 'count'



  

export interface AggregateDTCFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TRConnection

type TRConnectionObject =
  | TRConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type TRConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface TRConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TRConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'TREdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"TRConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TREdge[]> | prisma.TREdge[]
  }
  aggregate: {
    type: 'AggregateTR'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TRConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateTR> | prisma.AggregateTR
  }
}
  

// Types for TREdge

type TREdgeObject =
  | TREdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type TREdgeFields =
  | 'node'
  | 'cursor'



  

export interface TREdgeFieldDetails {
  node: {
    type: 'TR'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TREdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TR> | prisma.TR
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateTR

type AggregateTRObject =
  | AggregateTRFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateTRFields =
  | 'count'



  

export interface AggregateTRFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for LetterEmail

type LetterEmailObject =
  | LetterEmailFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'from', args?: [] | false, alias?: string  } 
  | { name: 'subject', args?: [] | false, alias?: string  } 
  | { name: 'text', args?: [] | false, alias?: string  } 

type LetterEmailFields =
  | 'id'
  | 'from'
  | 'subject'
  | 'text'



  

export interface LetterEmailFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  from: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  subject: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  text: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for LetterEmailConnection

type LetterEmailConnectionObject =
  | LetterEmailConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type LetterEmailConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface LetterEmailConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LetterEmailConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'LetterEmailEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"LetterEmailConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmailEdge[]> | prisma.LetterEmailEdge[]
  }
  aggregate: {
    type: 'AggregateLetterEmail'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LetterEmailConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateLetterEmail> | prisma.AggregateLetterEmail
  }
}
  

// Types for LetterEmailEdge

type LetterEmailEdgeObject =
  | LetterEmailEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type LetterEmailEdgeFields =
  | 'node'
  | 'cursor'



  

export interface LetterEmailEdgeFieldDetails {
  node: {
    type: 'LetterEmail'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LetterEmailEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmail> | prisma.LetterEmail
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateLetterEmail

type AggregateLetterEmailObject =
  | AggregateLetterEmailFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateLetterEmailFields =
  | 'count'



  

export interface AggregateLetterEmailFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MyDeviceConnection

type MyDeviceConnectionObject =
  | MyDeviceConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MyDeviceConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MyDeviceConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MyDeviceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MyDeviceEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MyDeviceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDeviceEdge[]> | prisma.MyDeviceEdge[]
  }
  aggregate: {
    type: 'AggregateMyDevice'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MyDeviceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMyDevice> | prisma.AggregateMyDevice
  }
}
  

// Types for MyDeviceEdge

type MyDeviceEdgeObject =
  | MyDeviceEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MyDeviceEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MyDeviceEdgeFieldDetails {
  node: {
    type: 'MyDevice'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MyDeviceEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevice> | prisma.MyDevice
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMyDevice

type AggregateMyDeviceObject =
  | AggregateMyDeviceFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMyDeviceFields =
  | 'count'



  

export interface AggregateMyDeviceFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TeamConnection

type TeamConnectionObject =
  | TeamConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type TeamConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface TeamConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'TeamEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"TeamConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamEdge[]> | prisma.TeamEdge[]
  }
  aggregate: {
    type: 'AggregateTeam'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateTeam> | prisma.AggregateTeam
  }
}
  

// Types for TeamEdge

type TeamEdgeObject =
  | TeamEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type TeamEdgeFields =
  | 'node'
  | 'cursor'



  

export interface TeamEdgeFieldDetails {
  node: {
    type: 'Team'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team> | prisma.Team
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateTeam

type AggregateTeamObject =
  | AggregateTeamFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateTeamFields =
  | 'count'



  

export interface AggregateTeamFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TeamMembersConnection

type TeamMembersConnectionObject =
  | TeamMembersConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type TeamMembersConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface TeamMembersConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamMembersConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'TeamMembersEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"TeamMembersConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembersEdge[]> | prisma.TeamMembersEdge[]
  }
  aggregate: {
    type: 'AggregateTeamMembers'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamMembersConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateTeamMembers> | prisma.AggregateTeamMembers
  }
}
  

// Types for TeamMembersEdge

type TeamMembersEdgeObject =
  | TeamMembersEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type TeamMembersEdgeFields =
  | 'node'
  | 'cursor'



  

export interface TeamMembersEdgeFieldDetails {
  node: {
    type: 'TeamMembers'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamMembersEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembers> | prisma.TeamMembers
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateTeamMembers

type AggregateTeamMembersObject =
  | AggregateTeamMembersFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateTeamMembersFields =
  | 'count'



  

export interface AggregateTeamMembersFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AppointmentsConnection

type AppointmentsConnectionObject =
  | AppointmentsConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type AppointmentsConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface AppointmentsConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'AppointmentsEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AppointmentsEdge[]> | prisma.AppointmentsEdge[]
  }
  aggregate: {
    type: 'AggregateAppointments'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateAppointments> | prisma.AggregateAppointments
  }
}
  

// Types for AppointmentsEdge

type AppointmentsEdgeObject =
  | AppointmentsEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type AppointmentsEdgeFields =
  | 'node'
  | 'cursor'



  

export interface AppointmentsEdgeFieldDetails {
  node: {
    type: 'Appointments'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentsEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointments> | prisma.Appointments
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateAppointments

type AggregateAppointmentsObject =
  | AggregateAppointmentsFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateAppointmentsFields =
  | 'count'



  

export interface AggregateAppointmentsFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createPost', args?: MutationCreatePostArgs[] | false, alias?: string  } 
  | { name: 'updatePost', args?: MutationUpdatePostArgs[] | false, alias?: string  } 
  | { name: 'updateManyPosts', args?: MutationUpdateManyPostsArgs[] | false, alias?: string  } 
  | { name: 'upsertPost', args?: MutationUpsertPostArgs[] | false, alias?: string  } 
  | { name: 'deletePost', args?: MutationDeletePostArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPosts', args?: MutationDeleteManyPostsArgs[] | false, alias?: string  } 
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createDevice', args?: MutationCreateDeviceArgs[] | false, alias?: string  } 
  | { name: 'updateDevice', args?: MutationUpdateDeviceArgs[] | false, alias?: string  } 
  | { name: 'updateManyDevices', args?: MutationUpdateManyDevicesArgs[] | false, alias?: string  } 
  | { name: 'upsertDevice', args?: MutationUpsertDeviceArgs[] | false, alias?: string  } 
  | { name: 'deleteDevice', args?: MutationDeleteDeviceArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDevices', args?: MutationDeleteManyDevicesArgs[] | false, alias?: string  } 
  | { name: 'createDTC', args?: MutationCreateDTCArgs[] | false, alias?: string  } 
  | { name: 'updateDTC', args?: MutationUpdateDTCArgs[] | false, alias?: string  } 
  | { name: 'updateManyDTCs', args?: MutationUpdateManyDTCsArgs[] | false, alias?: string  } 
  | { name: 'upsertDTC', args?: MutationUpsertDTCArgs[] | false, alias?: string  } 
  | { name: 'deleteDTC', args?: MutationDeleteDTCArgs[] | false, alias?: string  } 
  | { name: 'deleteManyDTCs', args?: MutationDeleteManyDTCsArgs[] | false, alias?: string  } 
  | { name: 'createTR', args?: MutationCreateTRArgs[] | false, alias?: string  } 
  | { name: 'updateTR', args?: MutationUpdateTRArgs[] | false, alias?: string  } 
  | { name: 'updateManyTRs', args?: MutationUpdateManyTRsArgs[] | false, alias?: string  } 
  | { name: 'upsertTR', args?: MutationUpsertTRArgs[] | false, alias?: string  } 
  | { name: 'deleteTR', args?: MutationDeleteTRArgs[] | false, alias?: string  } 
  | { name: 'deleteManyTRs', args?: MutationDeleteManyTRsArgs[] | false, alias?: string  } 
  | { name: 'createLetterEmail', args?: MutationCreateLetterEmailArgs[] | false, alias?: string  } 
  | { name: 'updateLetterEmail', args?: MutationUpdateLetterEmailArgs[] | false, alias?: string  } 
  | { name: 'updateManyLetterEmails', args?: MutationUpdateManyLetterEmailsArgs[] | false, alias?: string  } 
  | { name: 'upsertLetterEmail', args?: MutationUpsertLetterEmailArgs[] | false, alias?: string  } 
  | { name: 'deleteLetterEmail', args?: MutationDeleteLetterEmailArgs[] | false, alias?: string  } 
  | { name: 'deleteManyLetterEmails', args?: MutationDeleteManyLetterEmailsArgs[] | false, alias?: string  } 
  | { name: 'createMyDevice', args?: MutationCreateMyDeviceArgs[] | false, alias?: string  } 
  | { name: 'updateMyDevice', args?: MutationUpdateMyDeviceArgs[] | false, alias?: string  } 
  | { name: 'updateManyMyDevices', args?: MutationUpdateManyMyDevicesArgs[] | false, alias?: string  } 
  | { name: 'upsertMyDevice', args?: MutationUpsertMyDeviceArgs[] | false, alias?: string  } 
  | { name: 'deleteMyDevice', args?: MutationDeleteMyDeviceArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMyDevices', args?: MutationDeleteManyMyDevicesArgs[] | false, alias?: string  } 
  | { name: 'createTeam', args?: MutationCreateTeamArgs[] | false, alias?: string  } 
  | { name: 'updateTeam', args?: MutationUpdateTeamArgs[] | false, alias?: string  } 
  | { name: 'updateManyTeams', args?: MutationUpdateManyTeamsArgs[] | false, alias?: string  } 
  | { name: 'upsertTeam', args?: MutationUpsertTeamArgs[] | false, alias?: string  } 
  | { name: 'deleteTeam', args?: MutationDeleteTeamArgs[] | false, alias?: string  } 
  | { name: 'deleteManyTeams', args?: MutationDeleteManyTeamsArgs[] | false, alias?: string  } 
  | { name: 'createTeamMembers', args?: MutationCreateTeamMembersArgs[] | false, alias?: string  } 
  | { name: 'updateTeamMembers', args?: MutationUpdateTeamMembersArgs[] | false, alias?: string  } 
  | { name: 'updateManyTeamMemberses', args?: MutationUpdateManyTeamMembersesArgs[] | false, alias?: string  } 
  | { name: 'upsertTeamMembers', args?: MutationUpsertTeamMembersArgs[] | false, alias?: string  } 
  | { name: 'deleteTeamMembers', args?: MutationDeleteTeamMembersArgs[] | false, alias?: string  } 
  | { name: 'deleteManyTeamMemberses', args?: MutationDeleteManyTeamMembersesArgs[] | false, alias?: string  } 
  | { name: 'createAppointments', args?: MutationCreateAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'updateAppointments', args?: MutationUpdateAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'updateManyAppointmentses', args?: MutationUpdateManyAppointmentsesArgs[] | false, alias?: string  } 
  | { name: 'upsertAppointments', args?: MutationUpsertAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'deleteAppointments', args?: MutationDeleteAppointmentsArgs[] | false, alias?: string  } 
  | { name: 'deleteManyAppointmentses', args?: MutationDeleteManyAppointmentsesArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createPost'
  | 'updatePost'
  | 'updateManyPosts'
  | 'upsertPost'
  | 'deletePost'
  | 'deleteManyPosts'
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createDevice'
  | 'updateDevice'
  | 'updateManyDevices'
  | 'upsertDevice'
  | 'deleteDevice'
  | 'deleteManyDevices'
  | 'createDTC'
  | 'updateDTC'
  | 'updateManyDTCs'
  | 'upsertDTC'
  | 'deleteDTC'
  | 'deleteManyDTCs'
  | 'createTR'
  | 'updateTR'
  | 'updateManyTRs'
  | 'upsertTR'
  | 'deleteTR'
  | 'deleteManyTRs'
  | 'createLetterEmail'
  | 'updateLetterEmail'
  | 'updateManyLetterEmails'
  | 'upsertLetterEmail'
  | 'deleteLetterEmail'
  | 'deleteManyLetterEmails'
  | 'createMyDevice'
  | 'updateMyDevice'
  | 'updateManyMyDevices'
  | 'upsertMyDevice'
  | 'deleteMyDevice'
  | 'deleteManyMyDevices'
  | 'createTeam'
  | 'updateTeam'
  | 'updateManyTeams'
  | 'upsertTeam'
  | 'deleteTeam'
  | 'deleteManyTeams'
  | 'createTeamMembers'
  | 'updateTeamMembers'
  | 'updateManyTeamMemberses'
  | 'upsertTeamMembers'
  | 'deleteTeamMembers'
  | 'deleteManyTeamMemberses'
  | 'createAppointments'
  | 'updateAppointments'
  | 'updateManyAppointmentses'
  | 'upsertAppointments'
  | 'deleteAppointments'
  | 'deleteManyAppointmentses'


type MutationCreatePostArgs =
  | 'data'
type MutationUpdatePostArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPostsArgs =
  | 'data'
  | 'where'
type MutationUpsertPostArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePostArgs =
  | 'where'
type MutationDeleteManyPostsArgs =
  | 'where'
type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateDeviceArgs =
  | 'data'
type MutationUpdateDeviceArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDevicesArgs =
  | 'data'
  | 'where'
type MutationUpsertDeviceArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDeviceArgs =
  | 'where'
type MutationDeleteManyDevicesArgs =
  | 'where'
type MutationCreateDTCArgs =
  | 'data'
type MutationUpdateDTCArgs =
  | 'data'
  | 'where'
type MutationUpdateManyDTCsArgs =
  | 'data'
  | 'where'
type MutationUpsertDTCArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteDTCArgs =
  | 'where'
type MutationDeleteManyDTCsArgs =
  | 'where'
type MutationCreateTRArgs =
  | 'data'
type MutationUpdateTRArgs =
  | 'data'
  | 'where'
type MutationUpdateManyTRsArgs =
  | 'data'
  | 'where'
type MutationUpsertTRArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteTRArgs =
  | 'where'
type MutationDeleteManyTRsArgs =
  | 'where'
type MutationCreateLetterEmailArgs =
  | 'data'
type MutationUpdateLetterEmailArgs =
  | 'data'
  | 'where'
type MutationUpdateManyLetterEmailsArgs =
  | 'data'
  | 'where'
type MutationUpsertLetterEmailArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteLetterEmailArgs =
  | 'where'
type MutationDeleteManyLetterEmailsArgs =
  | 'where'
type MutationCreateMyDeviceArgs =
  | 'data'
type MutationUpdateMyDeviceArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMyDevicesArgs =
  | 'data'
  | 'where'
type MutationUpsertMyDeviceArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMyDeviceArgs =
  | 'where'
type MutationDeleteManyMyDevicesArgs =
  | 'where'
type MutationCreateTeamArgs =
  | 'data'
type MutationUpdateTeamArgs =
  | 'data'
  | 'where'
type MutationUpdateManyTeamsArgs =
  | 'data'
  | 'where'
type MutationUpsertTeamArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteTeamArgs =
  | 'where'
type MutationDeleteManyTeamsArgs =
  | 'where'
type MutationCreateTeamMembersArgs =
  | 'data'
type MutationUpdateTeamMembersArgs =
  | 'data'
  | 'where'
type MutationUpdateManyTeamMembersesArgs =
  | 'data'
  | 'where'
type MutationUpsertTeamMembersArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteTeamMembersArgs =
  | 'where'
type MutationDeleteManyTeamMembersesArgs =
  | 'where'
type MutationCreateAppointmentsArgs =
  | 'data'
type MutationUpdateAppointmentsArgs =
  | 'data'
  | 'where'
type MutationUpdateManyAppointmentsesArgs =
  | 'data'
  | 'where'
type MutationUpsertAppointmentsArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteAppointmentsArgs =
  | 'where'
type MutationDeleteManyAppointmentsesArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createPost: {
    type: 'Post'
    args: Record<MutationCreatePostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PostCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post> | prisma.Post
  }
  updatePost: {
    type: 'Post'
    args: Record<MutationUpdatePostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PostUpdateInput, where: PostWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post | null> | prisma.Post | null
  }
  updateManyPosts: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPostsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PostUpdateManyMutationInput, where?: PostWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPost: {
    type: 'Post'
    args: Record<MutationUpsertPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PostWhereUniqueInput, create: PostCreateInput, update: PostUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post> | prisma.Post
  }
  deletePost: {
    type: 'Post'
    args: Record<MutationDeletePostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PostWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post | null> | prisma.Post | null
  }
  deleteManyPosts: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPostsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PostWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDevice: {
    type: 'Device'
    args: Record<MutationCreateDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DeviceCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device> | prisma.Device
  }
  updateDevice: {
    type: 'Device'
    args: Record<MutationUpdateDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DeviceUpdateInput, where: DeviceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device | null> | prisma.Device | null
  }
  updateManyDevices: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDevicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DeviceUpdateManyMutationInput, where?: DeviceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDevice: {
    type: 'Device'
    args: Record<MutationUpsertDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DeviceWhereUniqueInput, create: DeviceCreateInput, update: DeviceUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device> | prisma.Device
  }
  deleteDevice: {
    type: 'Device'
    args: Record<MutationDeleteDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DeviceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device | null> | prisma.Device | null
  }
  deleteManyDevices: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDevicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DeviceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createDTC: {
    type: 'DTC'
    args: Record<MutationCreateDTCArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DTCCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTC> | prisma.DTC
  }
  updateDTC: {
    type: 'DTC'
    args: Record<MutationUpdateDTCArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DTCUpdateInput, where: DTCWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTC | null> | prisma.DTC | null
  }
  updateManyDTCs: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyDTCsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: DTCUpdateManyMutationInput, where?: DTCWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertDTC: {
    type: 'DTC'
    args: Record<MutationUpsertDTCArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DTCWhereUniqueInput, create: DTCCreateInput, update: DTCUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTC> | prisma.DTC
  }
  deleteDTC: {
    type: 'DTC'
    args: Record<MutationDeleteDTCArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: DTCWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTC | null> | prisma.DTC | null
  }
  deleteManyDTCs: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyDTCsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: DTCWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createTR: {
    type: 'TR'
    args: Record<MutationCreateTRArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TRCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TR> | prisma.TR
  }
  updateTR: {
    type: 'TR'
    args: Record<MutationUpdateTRArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TRUpdateInput, where: TRWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TR | null> | prisma.TR | null
  }
  updateManyTRs: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyTRsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TRUpdateManyMutationInput, where?: TRWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertTR: {
    type: 'TR'
    args: Record<MutationUpsertTRArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TRWhereUniqueInput, create: TRCreateInput, update: TRUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TR> | prisma.TR
  }
  deleteTR: {
    type: 'TR'
    args: Record<MutationDeleteTRArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TRWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TR | null> | prisma.TR | null
  }
  deleteManyTRs: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyTRsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: TRWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createLetterEmail: {
    type: 'LetterEmail'
    args: Record<MutationCreateLetterEmailArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LetterEmailCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmail> | prisma.LetterEmail
  }
  updateLetterEmail: {
    type: 'LetterEmail'
    args: Record<MutationUpdateLetterEmailArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LetterEmailUpdateInput, where: LetterEmailWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmail | null> | prisma.LetterEmail | null
  }
  updateManyLetterEmails: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyLetterEmailsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: LetterEmailUpdateManyMutationInput, where?: LetterEmailWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertLetterEmail: {
    type: 'LetterEmail'
    args: Record<MutationUpsertLetterEmailArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: LetterEmailWhereUniqueInput, create: LetterEmailCreateInput, update: LetterEmailUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmail> | prisma.LetterEmail
  }
  deleteLetterEmail: {
    type: 'LetterEmail'
    args: Record<MutationDeleteLetterEmailArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: LetterEmailWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmail | null> | prisma.LetterEmail | null
  }
  deleteManyLetterEmails: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyLetterEmailsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: LetterEmailWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMyDevice: {
    type: 'MyDevice'
    args: Record<MutationCreateMyDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MyDeviceCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevice> | prisma.MyDevice
  }
  updateMyDevice: {
    type: 'MyDevice'
    args: Record<MutationUpdateMyDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MyDeviceUpdateInput, where: MyDeviceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevice | null> | prisma.MyDevice | null
  }
  updateManyMyDevices: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMyDevicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MyDeviceUpdateManyMutationInput, where?: MyDeviceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMyDevice: {
    type: 'MyDevice'
    args: Record<MutationUpsertMyDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MyDeviceWhereUniqueInput, create: MyDeviceCreateInput, update: MyDeviceUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevice> | prisma.MyDevice
  }
  deleteMyDevice: {
    type: 'MyDevice'
    args: Record<MutationDeleteMyDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MyDeviceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevice | null> | prisma.MyDevice | null
  }
  deleteManyMyDevices: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMyDevicesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MyDeviceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createTeam: {
    type: 'Team'
    args: Record<MutationCreateTeamArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TeamCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team> | prisma.Team
  }
  updateTeam: {
    type: 'Team'
    args: Record<MutationUpdateTeamArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TeamUpdateInput, where: TeamWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team | null> | prisma.Team | null
  }
  updateManyTeams: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyTeamsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TeamUpdateManyMutationInput, where?: TeamWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertTeam: {
    type: 'Team'
    args: Record<MutationUpsertTeamArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TeamWhereUniqueInput, create: TeamCreateInput, update: TeamUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team> | prisma.Team
  }
  deleteTeam: {
    type: 'Team'
    args: Record<MutationDeleteTeamArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TeamWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team | null> | prisma.Team | null
  }
  deleteManyTeams: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyTeamsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: TeamWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createTeamMembers: {
    type: 'TeamMembers'
    args: Record<MutationCreateTeamMembersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TeamMembersCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembers> | prisma.TeamMembers
  }
  updateTeamMembers: {
    type: 'TeamMembers'
    args: Record<MutationUpdateTeamMembersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TeamMembersUpdateInput, where: TeamMembersWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembers | null> | prisma.TeamMembers | null
  }
  updateManyTeamMemberses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyTeamMembersesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TeamMembersUpdateManyMutationInput, where?: TeamMembersWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertTeamMembers: {
    type: 'TeamMembers'
    args: Record<MutationUpsertTeamMembersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TeamMembersWhereUniqueInput, create: TeamMembersCreateInput, update: TeamMembersUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembers> | prisma.TeamMembers
  }
  deleteTeamMembers: {
    type: 'TeamMembers'
    args: Record<MutationDeleteTeamMembersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TeamMembersWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembers | null> | prisma.TeamMembers | null
  }
  deleteManyTeamMemberses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyTeamMembersesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: TeamMembersWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createAppointments: {
    type: 'Appointments'
    args: Record<MutationCreateAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AppointmentsCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointments> | prisma.Appointments
  }
  updateAppointments: {
    type: 'Appointments'
    args: Record<MutationUpdateAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AppointmentsUpdateInput, where: AppointmentsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointments | null> | prisma.Appointments | null
  }
  updateManyAppointmentses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyAppointmentsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AppointmentsUpdateManyMutationInput, where?: AppointmentsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertAppointments: {
    type: 'Appointments'
    args: Record<MutationUpsertAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AppointmentsWhereUniqueInput, create: AppointmentsCreateInput, update: AppointmentsUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointments> | prisma.Appointments
  }
  deleteAppointments: {
    type: 'Appointments'
    args: Record<MutationDeleteAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AppointmentsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointments | null> | prisma.Appointments | null
  }
  deleteManyAppointmentses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyAppointmentsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: AppointmentsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'post', args?: SubscriptionPostArgs[] | false, alias?: string  } 
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'device', args?: SubscriptionDeviceArgs[] | false, alias?: string  } 
  | { name: 'dTC', args?: SubscriptionDTCArgs[] | false, alias?: string  } 
  | { name: 'tR', args?: SubscriptionTRArgs[] | false, alias?: string  } 
  | { name: 'letterEmail', args?: SubscriptionLetterEmailArgs[] | false, alias?: string  } 
  | { name: 'myDevice', args?: SubscriptionMyDeviceArgs[] | false, alias?: string  } 
  | { name: 'team', args?: SubscriptionTeamArgs[] | false, alias?: string  } 
  | { name: 'teamMembers', args?: SubscriptionTeamMembersArgs[] | false, alias?: string  } 
  | { name: 'appointments', args?: SubscriptionAppointmentsArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'post'
  | 'user'
  | 'device'
  | 'dTC'
  | 'tR'
  | 'letterEmail'
  | 'myDevice'
  | 'team'
  | 'teamMembers'
  | 'appointments'


type SubscriptionPostArgs =
  | 'where'
type SubscriptionUserArgs =
  | 'where'
type SubscriptionDeviceArgs =
  | 'where'
type SubscriptionDTCArgs =
  | 'where'
type SubscriptionTRArgs =
  | 'where'
type SubscriptionLetterEmailArgs =
  | 'where'
type SubscriptionMyDeviceArgs =
  | 'where'
type SubscriptionTeamArgs =
  | 'where'
type SubscriptionTeamMembersArgs =
  | 'where'
type SubscriptionAppointmentsArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  post: {
    type: 'PostSubscriptionPayload'
    args: Record<SubscriptionPostArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PostSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostSubscriptionPayload | null> | prisma.PostSubscriptionPayload | null
  }
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  device: {
    type: 'DeviceSubscriptionPayload'
    args: Record<SubscriptionDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DeviceSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DeviceSubscriptionPayload | null> | prisma.DeviceSubscriptionPayload | null
  }
  dTC: {
    type: 'DTCSubscriptionPayload'
    args: Record<SubscriptionDTCArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: DTCSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTCSubscriptionPayload | null> | prisma.DTCSubscriptionPayload | null
  }
  tR: {
    type: 'TRSubscriptionPayload'
    args: Record<SubscriptionTRArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: TRSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TRSubscriptionPayload | null> | prisma.TRSubscriptionPayload | null
  }
  letterEmail: {
    type: 'LetterEmailSubscriptionPayload'
    args: Record<SubscriptionLetterEmailArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: LetterEmailSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmailSubscriptionPayload | null> | prisma.LetterEmailSubscriptionPayload | null
  }
  myDevice: {
    type: 'MyDeviceSubscriptionPayload'
    args: Record<SubscriptionMyDeviceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MyDeviceSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDeviceSubscriptionPayload | null> | prisma.MyDeviceSubscriptionPayload | null
  }
  team: {
    type: 'TeamSubscriptionPayload'
    args: Record<SubscriptionTeamArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: TeamSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamSubscriptionPayload | null> | prisma.TeamSubscriptionPayload | null
  }
  teamMembers: {
    type: 'TeamMembersSubscriptionPayload'
    args: Record<SubscriptionTeamMembersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: TeamMembersSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembersSubscriptionPayload | null> | prisma.TeamMembersSubscriptionPayload | null
  }
  appointments: {
    type: 'AppointmentsSubscriptionPayload'
    args: Record<SubscriptionAppointmentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: AppointmentsSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AppointmentsSubscriptionPayload | null> | prisma.AppointmentsSubscriptionPayload | null
  }
}
  

// Types for PostSubscriptionPayload

type PostSubscriptionPayloadObject =
  | PostSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PostSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PostSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PostSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Post'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PostSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Post | null> | prisma.Post | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PostPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PostSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PostPreviousValues | null> | prisma.PostPreviousValues | null
  }
}
  

// Types for PostPreviousValues

type PostPreviousValuesObject =
  | PostPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'content', args?: [] | false, alias?: string  } 

type PostPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'published'
  | 'title'
  | 'content'



  

export interface PostPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  content: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'companyName', args?: [] | false, alias?: string  } 
  | { name: 'country', args?: [] | false, alias?: string  } 
  | { name: 'emailConfirmed', args?: [] | false, alias?: string  } 
  | { name: 'emailConfirmToken', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 
  | { name: 'resetToken', args?: [] | false, alias?: string  } 
  | { name: 'resetExpires', args?: [] | false, alias?: string  } 
  | { name: 'lastLogin', args?: [] | false, alias?: string  } 
  | { name: 'joinedAt', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'email'
  | 'password'
  | 'name'
  | 'companyName'
  | 'country'
  | 'emailConfirmed'
  | 'emailConfirmToken'
  | 'role'
  | 'resetToken'
  | 'resetExpires'
  | 'lastLogin'
  | 'joinedAt'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  companyName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  country: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  emailConfirmed: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailConfirmToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  role: {
    type: 'Role'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Role> | prisma.Role
  }
  resetToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  resetExpires: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  lastLogin: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  joinedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DeviceSubscriptionPayload

type DeviceSubscriptionPayloadObject =
  | DeviceSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DeviceSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DeviceSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DeviceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Device'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DeviceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Device | null> | prisma.Device | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DevicePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DeviceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DevicePreviousValues | null> | prisma.DevicePreviousValues | null
  }
}
  

// Types for DevicePreviousValues

type DevicePreviousValuesObject =
  | DevicePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'published', args?: [] | false, alias?: string  } 
  | { name: 'name_EN', args?: [] | false, alias?: string  } 
  | { name: 'name_UA', args?: [] | false, alias?: string  } 
  | { name: 'name_RUS', args?: [] | false, alias?: string  } 
  | { name: 'module', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DevicePreviousValuesFields =
  | 'id'
  | 'published'
  | 'name_EN'
  | 'name_UA'
  | 'name_RUS'
  | 'module'
  | 'createdAt'
  | 'updatedAt'



  

export interface DevicePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  published: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_EN: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_UA: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_RUS: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  module: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for DTCSubscriptionPayload

type DTCSubscriptionPayloadObject =
  | DTCSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type DTCSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface DTCSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"DTCSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'DTC'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DTCSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTC | null> | prisma.DTC | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'DTCPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"DTCSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.DTCPreviousValues | null> | prisma.DTCPreviousValues | null
  }
}
  

// Types for DTCPreviousValues

type DTCPreviousValuesObject =
  | DTCPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name_UA', args?: [] | false, alias?: string  } 
  | { name: 'name_EN', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type DTCPreviousValuesFields =
  | 'id'
  | 'name_UA'
  | 'name_EN'
  | 'createdAt'
  | 'updatedAt'



  

export interface DTCPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_UA: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_EN: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TRSubscriptionPayload

type TRSubscriptionPayloadObject =
  | TRSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type TRSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface TRSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TRSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'TR'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TRSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TR | null> | prisma.TR | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'TRPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TRSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TRPreviousValues | null> | prisma.TRPreviousValues | null
  }
}
  

// Types for TRPreviousValues

type TRPreviousValuesObject =
  | TRPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name_TR_UA', args?: [] | false, alias?: string  } 
  | { name: 'name_TR_EN', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type TRPreviousValuesFields =
  | 'id'
  | 'name_TR_UA'
  | 'name_TR_EN'
  | 'createdAt'
  | 'updatedAt'



  

export interface TRPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_TR_UA: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_TR_EN: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for LetterEmailSubscriptionPayload

type LetterEmailSubscriptionPayloadObject =
  | LetterEmailSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type LetterEmailSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface LetterEmailSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"LetterEmailSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'LetterEmail'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"LetterEmailSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmail | null> | prisma.LetterEmail | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'LetterEmailPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"LetterEmailSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.LetterEmailPreviousValues | null> | prisma.LetterEmailPreviousValues | null
  }
}
  

// Types for LetterEmailPreviousValues

type LetterEmailPreviousValuesObject =
  | LetterEmailPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'from', args?: [] | false, alias?: string  } 
  | { name: 'subject', args?: [] | false, alias?: string  } 
  | { name: 'text', args?: [] | false, alias?: string  } 

type LetterEmailPreviousValuesFields =
  | 'id'
  | 'from'
  | 'subject'
  | 'text'



  

export interface LetterEmailPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  from: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  subject: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  text: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MyDeviceSubscriptionPayload

type MyDeviceSubscriptionPayloadObject =
  | MyDeviceSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MyDeviceSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MyDeviceSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MyDeviceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'MyDevice'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MyDeviceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevice | null> | prisma.MyDevice | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MyDevicePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MyDeviceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MyDevicePreviousValues | null> | prisma.MyDevicePreviousValues | null
  }
}
  

// Types for MyDevicePreviousValues

type MyDevicePreviousValuesObject =
  | MyDevicePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name_device', args?: [] | false, alias?: string  } 
  | { name: 'brand_device', args?: [] | false, alias?: string  } 
  | { name: 'series_device', args?: [] | false, alias?: string  } 
  | { name: 'kind_device', args?: [] | false, alias?: string  } 
  | { name: 'certificate_calibration', args?: [] | false, alias?: string  } 
  | { name: 'certificate_verification', args?: [] | false, alias?: string  } 
  | { name: 'certificate_conformity', args?: [] | false, alias?: string  } 
  | { name: 'module_device', args?: [] | false, alias?: string  } 
  | { name: 'tr_device', args?: [] | false, alias?: string  } 
  | { name: 'certificate_assessment_number', args?: [] | false, alias?: string  } 
  | { name: 'certificate_verification_number', args?: [] | false, alias?: string  } 
  | { name: 'certificate_calibration_number', args?: [] | false, alias?: string  } 
  | { name: 'department_assessment_center', args?: [] | false, alias?: string  } 
  | { name: 'department_verification_center', args?: [] | false, alias?: string  } 
  | { name: 'department_calibration_center', args?: [] | false, alias?: string  } 
  | { name: 'conformity_data', args?: [] | false, alias?: string  } 
  | { name: 'calibration_data', args?: [] | false, alias?: string  } 
  | { name: 'valid_verification', args?: [] | false, alias?: string  } 
  | { name: 'notes', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 

type MyDevicePreviousValuesFields =
  | 'id'
  | 'name_device'
  | 'brand_device'
  | 'series_device'
  | 'kind_device'
  | 'certificate_calibration'
  | 'certificate_verification'
  | 'certificate_conformity'
  | 'module_device'
  | 'tr_device'
  | 'certificate_assessment_number'
  | 'certificate_verification_number'
  | 'certificate_calibration_number'
  | 'department_assessment_center'
  | 'department_verification_center'
  | 'department_calibration_center'
  | 'conformity_data'
  | 'calibration_data'
  | 'valid_verification'
  | 'notes'
  | 'createdAt'



  

export interface MyDevicePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  brand_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  series_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  kind_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_calibration: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_verification: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_conformity: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  module_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  tr_device: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_assessment_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_verification_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  certificate_calibration_number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  department_assessment_center: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  department_verification_center: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  department_calibration_center: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  conformity_data: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  calibration_data: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  valid_verification: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  notes: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TeamSubscriptionPayload

type TeamSubscriptionPayloadObject =
  | TeamSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type TeamSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface TeamSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Team'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TeamSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Team | null> | prisma.Team | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'TeamPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TeamSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamPreviousValues | null> | prisma.TeamPreviousValues | null
  }
}
  

// Types for TeamPreviousValues

type TeamPreviousValuesObject =
  | TeamPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'payment', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 

type TeamPreviousValuesFields =
  | 'id'
  | 'name'
  | 'payment'
  | 'role'



  

export interface TeamPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  payment: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  role: {
    type: 'Role'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Role> | prisma.Role
  }
}
  

// Types for TeamMembersSubscriptionPayload

type TeamMembersSubscriptionPayloadObject =
  | TeamMembersSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type TeamMembersSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface TeamMembersSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamMembersSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'TeamMembers'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TeamMembersSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembers | null> | prisma.TeamMembers | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'TeamMembersPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TeamMembersSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TeamMembersPreviousValues | null> | prisma.TeamMembersPreviousValues | null
  }
}
  

// Types for TeamMembersPreviousValues

type TeamMembersPreviousValuesObject =
  | TeamMembersPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'emailMembers', args?: [] | false, alias?: string  } 
  | { name: 'member', args?: [] | false, alias?: string  } 
  | { name: 'memberConfirmed', args?: [] | false, alias?: string  } 
  | { name: 'memberConfirmToken', args?: [] | false, alias?: string  } 

type TeamMembersPreviousValuesFields =
  | 'id'
  | 'emailMembers'
  | 'member'
  | 'memberConfirmed'
  | 'memberConfirmToken'



  

export interface TeamMembersPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  emailMembers: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  member: {
    type: 'Members'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TeamMembersPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Members> | prisma.Members
  }
  memberConfirmed: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  memberConfirmToken: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for AppointmentsSubscriptionPayload

type AppointmentsSubscriptionPayloadObject =
  | AppointmentsSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type AppointmentsSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface AppointmentsSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AppointmentsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Appointments'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AppointmentsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Appointments | null> | prisma.Appointments | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'AppointmentsPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AppointmentsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AppointmentsPreviousValues | null> | prisma.AppointmentsPreviousValues | null
  }
}
  

// Types for AppointmentsPreviousValues

type AppointmentsPreviousValuesObject =
  | AppointmentsPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'start_date', args?: [] | false, alias?: string  } 
  | { name: 'end_date', args?: [] | false, alias?: string  } 
  | { name: 'location', args?: [] | false, alias?: string  } 
  | { name: 'notes', args?: [] | false, alias?: string  } 

type AppointmentsPreviousValuesFields =
  | 'id'
  | 'title'
  | 'start_date'
  | 'end_date'
  | 'location'
  | 'notes'



  

export interface AppointmentsPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  start_date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  end_date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  location: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  notes: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface PostWhereUniqueInput {
  id?: string | null
}
export type PostWhereUniqueInputInputObject =
  | Extract<keyof PostWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PostWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  published?: boolean | null
  published_not?: boolean | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  content?: string | null
  content_not?: string | null
  content_in?: string[]
  content_not_in?: string[]
  content_lt?: string | null
  content_lte?: string | null
  content_gt?: string | null
  content_gte?: string | null
  content_contains?: string | null
  content_not_contains?: string | null
  content_starts_with?: string | null
  content_not_starts_with?: string | null
  content_ends_with?: string | null
  content_not_ends_with?: string | null
  author?: UserWhereInput | null
  AND?: PostWhereInput[]
  OR?: PostWhereInput[]
  NOT?: PostWhereInput[]
}
export type PostWhereInputInputObject =
  | Extract<keyof PostWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_not', alias?: string  } 
  | { name: 'content_in', alias?: string  } 
  | { name: 'content_not_in', alias?: string  } 
  | { name: 'content_lt', alias?: string  } 
  | { name: 'content_lte', alias?: string  } 
  | { name: 'content_gt', alias?: string  } 
  | { name: 'content_gte', alias?: string  } 
  | { name: 'content_contains', alias?: string  } 
  | { name: 'content_not_contains', alias?: string  } 
  | { name: 'content_starts_with', alias?: string  } 
  | { name: 'content_not_starts_with', alias?: string  } 
  | { name: 'content_ends_with', alias?: string  } 
  | { name: 'content_not_ends_with', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  companyName?: string | null
  companyName_not?: string | null
  companyName_in?: string[]
  companyName_not_in?: string[]
  companyName_lt?: string | null
  companyName_lte?: string | null
  companyName_gt?: string | null
  companyName_gte?: string | null
  companyName_contains?: string | null
  companyName_not_contains?: string | null
  companyName_starts_with?: string | null
  companyName_not_starts_with?: string | null
  companyName_ends_with?: string | null
  companyName_not_ends_with?: string | null
  country?: string | null
  country_not?: string | null
  country_in?: string[]
  country_not_in?: string[]
  country_lt?: string | null
  country_lte?: string | null
  country_gt?: string | null
  country_gte?: string | null
  country_contains?: string | null
  country_not_contains?: string | null
  country_starts_with?: string | null
  country_not_starts_with?: string | null
  country_ends_with?: string | null
  country_not_ends_with?: string | null
  posts_every?: PostWhereInput | null
  posts_some?: PostWhereInput | null
  posts_none?: PostWhereInput | null
  mydevices_every?: MyDeviceWhereInput | null
  mydevices_some?: MyDeviceWhereInput | null
  mydevices_none?: MyDeviceWhereInput | null
  appointments_every?: AppointmentsWhereInput | null
  appointments_some?: AppointmentsWhereInput | null
  appointments_none?: AppointmentsWhereInput | null
  emailConfirmed?: boolean | null
  emailConfirmed_not?: boolean | null
  emailConfirmToken?: string | null
  emailConfirmToken_not?: string | null
  emailConfirmToken_in?: string[]
  emailConfirmToken_not_in?: string[]
  emailConfirmToken_lt?: string | null
  emailConfirmToken_lte?: string | null
  emailConfirmToken_gt?: string | null
  emailConfirmToken_gte?: string | null
  emailConfirmToken_contains?: string | null
  emailConfirmToken_not_contains?: string | null
  emailConfirmToken_starts_with?: string | null
  emailConfirmToken_not_starts_with?: string | null
  emailConfirmToken_ends_with?: string | null
  emailConfirmToken_not_ends_with?: string | null
  role?: prisma.Role | null
  role_not?: prisma.Role | null
  role_in?: prisma.Role[]
  role_not_in?: prisma.Role[]
  resetToken?: string | null
  resetToken_not?: string | null
  resetToken_in?: string[]
  resetToken_not_in?: string[]
  resetToken_lt?: string | null
  resetToken_lte?: string | null
  resetToken_gt?: string | null
  resetToken_gte?: string | null
  resetToken_contains?: string | null
  resetToken_not_contains?: string | null
  resetToken_starts_with?: string | null
  resetToken_not_starts_with?: string | null
  resetToken_ends_with?: string | null
  resetToken_not_ends_with?: string | null
  resetExpires?: string | null
  resetExpires_not?: string | null
  resetExpires_in?: string[]
  resetExpires_not_in?: string[]
  resetExpires_lt?: string | null
  resetExpires_lte?: string | null
  resetExpires_gt?: string | null
  resetExpires_gte?: string | null
  lastLogin?: string | null
  lastLogin_not?: string | null
  lastLogin_in?: string[]
  lastLogin_not_in?: string[]
  lastLogin_lt?: string | null
  lastLogin_lte?: string | null
  lastLogin_gt?: string | null
  lastLogin_gte?: string | null
  joinedAt?: string | null
  joinedAt_not?: string | null
  joinedAt_in?: string[]
  joinedAt_not_in?: string[]
  joinedAt_lt?: string | null
  joinedAt_lte?: string | null
  joinedAt_gt?: string | null
  joinedAt_gte?: string | null
  teams_every?: TeamWhereInput | null
  teams_some?: TeamWhereInput | null
  teams_none?: TeamWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'companyName_not', alias?: string  } 
  | { name: 'companyName_in', alias?: string  } 
  | { name: 'companyName_not_in', alias?: string  } 
  | { name: 'companyName_lt', alias?: string  } 
  | { name: 'companyName_lte', alias?: string  } 
  | { name: 'companyName_gt', alias?: string  } 
  | { name: 'companyName_gte', alias?: string  } 
  | { name: 'companyName_contains', alias?: string  } 
  | { name: 'companyName_not_contains', alias?: string  } 
  | { name: 'companyName_starts_with', alias?: string  } 
  | { name: 'companyName_not_starts_with', alias?: string  } 
  | { name: 'companyName_ends_with', alias?: string  } 
  | { name: 'companyName_not_ends_with', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'country_not', alias?: string  } 
  | { name: 'country_in', alias?: string  } 
  | { name: 'country_not_in', alias?: string  } 
  | { name: 'country_lt', alias?: string  } 
  | { name: 'country_lte', alias?: string  } 
  | { name: 'country_gt', alias?: string  } 
  | { name: 'country_gte', alias?: string  } 
  | { name: 'country_contains', alias?: string  } 
  | { name: 'country_not_contains', alias?: string  } 
  | { name: 'country_starts_with', alias?: string  } 
  | { name: 'country_not_starts_with', alias?: string  } 
  | { name: 'country_ends_with', alias?: string  } 
  | { name: 'country_not_ends_with', alias?: string  } 
  | { name: 'posts_every', alias?: string  } 
  | { name: 'posts_some', alias?: string  } 
  | { name: 'posts_none', alias?: string  } 
  | { name: 'mydevices_every', alias?: string  } 
  | { name: 'mydevices_some', alias?: string  } 
  | { name: 'mydevices_none', alias?: string  } 
  | { name: 'appointments_every', alias?: string  } 
  | { name: 'appointments_some', alias?: string  } 
  | { name: 'appointments_none', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmed_not', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'emailConfirmToken_not', alias?: string  } 
  | { name: 'emailConfirmToken_in', alias?: string  } 
  | { name: 'emailConfirmToken_not_in', alias?: string  } 
  | { name: 'emailConfirmToken_lt', alias?: string  } 
  | { name: 'emailConfirmToken_lte', alias?: string  } 
  | { name: 'emailConfirmToken_gt', alias?: string  } 
  | { name: 'emailConfirmToken_gte', alias?: string  } 
  | { name: 'emailConfirmToken_contains', alias?: string  } 
  | { name: 'emailConfirmToken_not_contains', alias?: string  } 
  | { name: 'emailConfirmToken_starts_with', alias?: string  } 
  | { name: 'emailConfirmToken_not_starts_with', alias?: string  } 
  | { name: 'emailConfirmToken_ends_with', alias?: string  } 
  | { name: 'emailConfirmToken_not_ends_with', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'role_not', alias?: string  } 
  | { name: 'role_in', alias?: string  } 
  | { name: 'role_not_in', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetToken_not', alias?: string  } 
  | { name: 'resetToken_in', alias?: string  } 
  | { name: 'resetToken_not_in', alias?: string  } 
  | { name: 'resetToken_lt', alias?: string  } 
  | { name: 'resetToken_lte', alias?: string  } 
  | { name: 'resetToken_gt', alias?: string  } 
  | { name: 'resetToken_gte', alias?: string  } 
  | { name: 'resetToken_contains', alias?: string  } 
  | { name: 'resetToken_not_contains', alias?: string  } 
  | { name: 'resetToken_starts_with', alias?: string  } 
  | { name: 'resetToken_not_starts_with', alias?: string  } 
  | { name: 'resetToken_ends_with', alias?: string  } 
  | { name: 'resetToken_not_ends_with', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'resetExpires_not', alias?: string  } 
  | { name: 'resetExpires_in', alias?: string  } 
  | { name: 'resetExpires_not_in', alias?: string  } 
  | { name: 'resetExpires_lt', alias?: string  } 
  | { name: 'resetExpires_lte', alias?: string  } 
  | { name: 'resetExpires_gt', alias?: string  } 
  | { name: 'resetExpires_gte', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'lastLogin_not', alias?: string  } 
  | { name: 'lastLogin_in', alias?: string  } 
  | { name: 'lastLogin_not_in', alias?: string  } 
  | { name: 'lastLogin_lt', alias?: string  } 
  | { name: 'lastLogin_lte', alias?: string  } 
  | { name: 'lastLogin_gt', alias?: string  } 
  | { name: 'lastLogin_gte', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  | { name: 'joinedAt_not', alias?: string  } 
  | { name: 'joinedAt_in', alias?: string  } 
  | { name: 'joinedAt_not_in', alias?: string  } 
  | { name: 'joinedAt_lt', alias?: string  } 
  | { name: 'joinedAt_lte', alias?: string  } 
  | { name: 'joinedAt_gt', alias?: string  } 
  | { name: 'joinedAt_gte', alias?: string  } 
  | { name: 'teams_every', alias?: string  } 
  | { name: 'teams_some', alias?: string  } 
  | { name: 'teams_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MyDeviceWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name_device?: string | null
  name_device_not?: string | null
  name_device_in?: string[]
  name_device_not_in?: string[]
  name_device_lt?: string | null
  name_device_lte?: string | null
  name_device_gt?: string | null
  name_device_gte?: string | null
  name_device_contains?: string | null
  name_device_not_contains?: string | null
  name_device_starts_with?: string | null
  name_device_not_starts_with?: string | null
  name_device_ends_with?: string | null
  name_device_not_ends_with?: string | null
  brand_device?: string | null
  brand_device_not?: string | null
  brand_device_in?: string[]
  brand_device_not_in?: string[]
  brand_device_lt?: string | null
  brand_device_lte?: string | null
  brand_device_gt?: string | null
  brand_device_gte?: string | null
  brand_device_contains?: string | null
  brand_device_not_contains?: string | null
  brand_device_starts_with?: string | null
  brand_device_not_starts_with?: string | null
  brand_device_ends_with?: string | null
  brand_device_not_ends_with?: string | null
  series_device?: string | null
  series_device_not?: string | null
  series_device_in?: string[]
  series_device_not_in?: string[]
  series_device_lt?: string | null
  series_device_lte?: string | null
  series_device_gt?: string | null
  series_device_gte?: string | null
  series_device_contains?: string | null
  series_device_not_contains?: string | null
  series_device_starts_with?: string | null
  series_device_not_starts_with?: string | null
  series_device_ends_with?: string | null
  series_device_not_ends_with?: string | null
  kind_device?: string | null
  kind_device_not?: string | null
  kind_device_in?: string[]
  kind_device_not_in?: string[]
  kind_device_lt?: string | null
  kind_device_lte?: string | null
  kind_device_gt?: string | null
  kind_device_gte?: string | null
  kind_device_contains?: string | null
  kind_device_not_contains?: string | null
  kind_device_starts_with?: string | null
  kind_device_not_starts_with?: string | null
  kind_device_ends_with?: string | null
  kind_device_not_ends_with?: string | null
  certificate_calibration?: boolean | null
  certificate_calibration_not?: boolean | null
  certificate_verification?: boolean | null
  certificate_verification_not?: boolean | null
  certificate_conformity?: boolean | null
  certificate_conformity_not?: boolean | null
  module_device?: string | null
  module_device_not?: string | null
  module_device_in?: string[]
  module_device_not_in?: string[]
  module_device_lt?: string | null
  module_device_lte?: string | null
  module_device_gt?: string | null
  module_device_gte?: string | null
  module_device_contains?: string | null
  module_device_not_contains?: string | null
  module_device_starts_with?: string | null
  module_device_not_starts_with?: string | null
  module_device_ends_with?: string | null
  module_device_not_ends_with?: string | null
  tr_device?: string | null
  tr_device_not?: string | null
  tr_device_in?: string[]
  tr_device_not_in?: string[]
  tr_device_lt?: string | null
  tr_device_lte?: string | null
  tr_device_gt?: string | null
  tr_device_gte?: string | null
  tr_device_contains?: string | null
  tr_device_not_contains?: string | null
  tr_device_starts_with?: string | null
  tr_device_not_starts_with?: string | null
  tr_device_ends_with?: string | null
  tr_device_not_ends_with?: string | null
  certificate_assessment_number?: string | null
  certificate_assessment_number_not?: string | null
  certificate_assessment_number_in?: string[]
  certificate_assessment_number_not_in?: string[]
  certificate_assessment_number_lt?: string | null
  certificate_assessment_number_lte?: string | null
  certificate_assessment_number_gt?: string | null
  certificate_assessment_number_gte?: string | null
  certificate_assessment_number_contains?: string | null
  certificate_assessment_number_not_contains?: string | null
  certificate_assessment_number_starts_with?: string | null
  certificate_assessment_number_not_starts_with?: string | null
  certificate_assessment_number_ends_with?: string | null
  certificate_assessment_number_not_ends_with?: string | null
  certificate_verification_number?: string | null
  certificate_verification_number_not?: string | null
  certificate_verification_number_in?: string[]
  certificate_verification_number_not_in?: string[]
  certificate_verification_number_lt?: string | null
  certificate_verification_number_lte?: string | null
  certificate_verification_number_gt?: string | null
  certificate_verification_number_gte?: string | null
  certificate_verification_number_contains?: string | null
  certificate_verification_number_not_contains?: string | null
  certificate_verification_number_starts_with?: string | null
  certificate_verification_number_not_starts_with?: string | null
  certificate_verification_number_ends_with?: string | null
  certificate_verification_number_not_ends_with?: string | null
  certificate_calibration_number?: string | null
  certificate_calibration_number_not?: string | null
  certificate_calibration_number_in?: string[]
  certificate_calibration_number_not_in?: string[]
  certificate_calibration_number_lt?: string | null
  certificate_calibration_number_lte?: string | null
  certificate_calibration_number_gt?: string | null
  certificate_calibration_number_gte?: string | null
  certificate_calibration_number_contains?: string | null
  certificate_calibration_number_not_contains?: string | null
  certificate_calibration_number_starts_with?: string | null
  certificate_calibration_number_not_starts_with?: string | null
  certificate_calibration_number_ends_with?: string | null
  certificate_calibration_number_not_ends_with?: string | null
  department_assessment_center?: string | null
  department_assessment_center_not?: string | null
  department_assessment_center_in?: string[]
  department_assessment_center_not_in?: string[]
  department_assessment_center_lt?: string | null
  department_assessment_center_lte?: string | null
  department_assessment_center_gt?: string | null
  department_assessment_center_gte?: string | null
  department_assessment_center_contains?: string | null
  department_assessment_center_not_contains?: string | null
  department_assessment_center_starts_with?: string | null
  department_assessment_center_not_starts_with?: string | null
  department_assessment_center_ends_with?: string | null
  department_assessment_center_not_ends_with?: string | null
  department_verification_center?: string | null
  department_verification_center_not?: string | null
  department_verification_center_in?: string[]
  department_verification_center_not_in?: string[]
  department_verification_center_lt?: string | null
  department_verification_center_lte?: string | null
  department_verification_center_gt?: string | null
  department_verification_center_gte?: string | null
  department_verification_center_contains?: string | null
  department_verification_center_not_contains?: string | null
  department_verification_center_starts_with?: string | null
  department_verification_center_not_starts_with?: string | null
  department_verification_center_ends_with?: string | null
  department_verification_center_not_ends_with?: string | null
  department_calibration_center?: string | null
  department_calibration_center_not?: string | null
  department_calibration_center_in?: string[]
  department_calibration_center_not_in?: string[]
  department_calibration_center_lt?: string | null
  department_calibration_center_lte?: string | null
  department_calibration_center_gt?: string | null
  department_calibration_center_gte?: string | null
  department_calibration_center_contains?: string | null
  department_calibration_center_not_contains?: string | null
  department_calibration_center_starts_with?: string | null
  department_calibration_center_not_starts_with?: string | null
  department_calibration_center_ends_with?: string | null
  department_calibration_center_not_ends_with?: string | null
  conformity_data?: string | null
  conformity_data_not?: string | null
  conformity_data_in?: string[]
  conformity_data_not_in?: string[]
  conformity_data_lt?: string | null
  conformity_data_lte?: string | null
  conformity_data_gt?: string | null
  conformity_data_gte?: string | null
  calibration_data?: string | null
  calibration_data_not?: string | null
  calibration_data_in?: string[]
  calibration_data_not_in?: string[]
  calibration_data_lt?: string | null
  calibration_data_lte?: string | null
  calibration_data_gt?: string | null
  calibration_data_gte?: string | null
  valid_verification?: string | null
  valid_verification_not?: string | null
  valid_verification_in?: string[]
  valid_verification_not_in?: string[]
  valid_verification_lt?: string | null
  valid_verification_lte?: string | null
  valid_verification_gt?: string | null
  valid_verification_gte?: string | null
  notes?: string | null
  notes_not?: string | null
  notes_in?: string[]
  notes_not_in?: string[]
  notes_lt?: string | null
  notes_lte?: string | null
  notes_gt?: string | null
  notes_gte?: string | null
  notes_contains?: string | null
  notes_not_contains?: string | null
  notes_starts_with?: string | null
  notes_not_starts_with?: string | null
  notes_ends_with?: string | null
  notes_not_ends_with?: string | null
  author?: UserWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  AND?: MyDeviceWhereInput[]
  OR?: MyDeviceWhereInput[]
  NOT?: MyDeviceWhereInput[]
}
export type MyDeviceWhereInputInputObject =
  | Extract<keyof MyDeviceWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name_device', alias?: string  } 
  | { name: 'name_device_not', alias?: string  } 
  | { name: 'name_device_in', alias?: string  } 
  | { name: 'name_device_not_in', alias?: string  } 
  | { name: 'name_device_lt', alias?: string  } 
  | { name: 'name_device_lte', alias?: string  } 
  | { name: 'name_device_gt', alias?: string  } 
  | { name: 'name_device_gte', alias?: string  } 
  | { name: 'name_device_contains', alias?: string  } 
  | { name: 'name_device_not_contains', alias?: string  } 
  | { name: 'name_device_starts_with', alias?: string  } 
  | { name: 'name_device_not_starts_with', alias?: string  } 
  | { name: 'name_device_ends_with', alias?: string  } 
  | { name: 'name_device_not_ends_with', alias?: string  } 
  | { name: 'brand_device', alias?: string  } 
  | { name: 'brand_device_not', alias?: string  } 
  | { name: 'brand_device_in', alias?: string  } 
  | { name: 'brand_device_not_in', alias?: string  } 
  | { name: 'brand_device_lt', alias?: string  } 
  | { name: 'brand_device_lte', alias?: string  } 
  | { name: 'brand_device_gt', alias?: string  } 
  | { name: 'brand_device_gte', alias?: string  } 
  | { name: 'brand_device_contains', alias?: string  } 
  | { name: 'brand_device_not_contains', alias?: string  } 
  | { name: 'brand_device_starts_with', alias?: string  } 
  | { name: 'brand_device_not_starts_with', alias?: string  } 
  | { name: 'brand_device_ends_with', alias?: string  } 
  | { name: 'brand_device_not_ends_with', alias?: string  } 
  | { name: 'series_device', alias?: string  } 
  | { name: 'series_device_not', alias?: string  } 
  | { name: 'series_device_in', alias?: string  } 
  | { name: 'series_device_not_in', alias?: string  } 
  | { name: 'series_device_lt', alias?: string  } 
  | { name: 'series_device_lte', alias?: string  } 
  | { name: 'series_device_gt', alias?: string  } 
  | { name: 'series_device_gte', alias?: string  } 
  | { name: 'series_device_contains', alias?: string  } 
  | { name: 'series_device_not_contains', alias?: string  } 
  | { name: 'series_device_starts_with', alias?: string  } 
  | { name: 'series_device_not_starts_with', alias?: string  } 
  | { name: 'series_device_ends_with', alias?: string  } 
  | { name: 'series_device_not_ends_with', alias?: string  } 
  | { name: 'kind_device', alias?: string  } 
  | { name: 'kind_device_not', alias?: string  } 
  | { name: 'kind_device_in', alias?: string  } 
  | { name: 'kind_device_not_in', alias?: string  } 
  | { name: 'kind_device_lt', alias?: string  } 
  | { name: 'kind_device_lte', alias?: string  } 
  | { name: 'kind_device_gt', alias?: string  } 
  | { name: 'kind_device_gte', alias?: string  } 
  | { name: 'kind_device_contains', alias?: string  } 
  | { name: 'kind_device_not_contains', alias?: string  } 
  | { name: 'kind_device_starts_with', alias?: string  } 
  | { name: 'kind_device_not_starts_with', alias?: string  } 
  | { name: 'kind_device_ends_with', alias?: string  } 
  | { name: 'kind_device_not_ends_with', alias?: string  } 
  | { name: 'certificate_calibration', alias?: string  } 
  | { name: 'certificate_calibration_not', alias?: string  } 
  | { name: 'certificate_verification', alias?: string  } 
  | { name: 'certificate_verification_not', alias?: string  } 
  | { name: 'certificate_conformity', alias?: string  } 
  | { name: 'certificate_conformity_not', alias?: string  } 
  | { name: 'module_device', alias?: string  } 
  | { name: 'module_device_not', alias?: string  } 
  | { name: 'module_device_in', alias?: string  } 
  | { name: 'module_device_not_in', alias?: string  } 
  | { name: 'module_device_lt', alias?: string  } 
  | { name: 'module_device_lte', alias?: string  } 
  | { name: 'module_device_gt', alias?: string  } 
  | { name: 'module_device_gte', alias?: string  } 
  | { name: 'module_device_contains', alias?: string  } 
  | { name: 'module_device_not_contains', alias?: string  } 
  | { name: 'module_device_starts_with', alias?: string  } 
  | { name: 'module_device_not_starts_with', alias?: string  } 
  | { name: 'module_device_ends_with', alias?: string  } 
  | { name: 'module_device_not_ends_with', alias?: string  } 
  | { name: 'tr_device', alias?: string  } 
  | { name: 'tr_device_not', alias?: string  } 
  | { name: 'tr_device_in', alias?: string  } 
  | { name: 'tr_device_not_in', alias?: string  } 
  | { name: 'tr_device_lt', alias?: string  } 
  | { name: 'tr_device_lte', alias?: string  } 
  | { name: 'tr_device_gt', alias?: string  } 
  | { name: 'tr_device_gte', alias?: string  } 
  | { name: 'tr_device_contains', alias?: string  } 
  | { name: 'tr_device_not_contains', alias?: string  } 
  | { name: 'tr_device_starts_with', alias?: string  } 
  | { name: 'tr_device_not_starts_with', alias?: string  } 
  | { name: 'tr_device_ends_with', alias?: string  } 
  | { name: 'tr_device_not_ends_with', alias?: string  } 
  | { name: 'certificate_assessment_number', alias?: string  } 
  | { name: 'certificate_assessment_number_not', alias?: string  } 
  | { name: 'certificate_assessment_number_in', alias?: string  } 
  | { name: 'certificate_assessment_number_not_in', alias?: string  } 
  | { name: 'certificate_assessment_number_lt', alias?: string  } 
  | { name: 'certificate_assessment_number_lte', alias?: string  } 
  | { name: 'certificate_assessment_number_gt', alias?: string  } 
  | { name: 'certificate_assessment_number_gte', alias?: string  } 
  | { name: 'certificate_assessment_number_contains', alias?: string  } 
  | { name: 'certificate_assessment_number_not_contains', alias?: string  } 
  | { name: 'certificate_assessment_number_starts_with', alias?: string  } 
  | { name: 'certificate_assessment_number_not_starts_with', alias?: string  } 
  | { name: 'certificate_assessment_number_ends_with', alias?: string  } 
  | { name: 'certificate_assessment_number_not_ends_with', alias?: string  } 
  | { name: 'certificate_verification_number', alias?: string  } 
  | { name: 'certificate_verification_number_not', alias?: string  } 
  | { name: 'certificate_verification_number_in', alias?: string  } 
  | { name: 'certificate_verification_number_not_in', alias?: string  } 
  | { name: 'certificate_verification_number_lt', alias?: string  } 
  | { name: 'certificate_verification_number_lte', alias?: string  } 
  | { name: 'certificate_verification_number_gt', alias?: string  } 
  | { name: 'certificate_verification_number_gte', alias?: string  } 
  | { name: 'certificate_verification_number_contains', alias?: string  } 
  | { name: 'certificate_verification_number_not_contains', alias?: string  } 
  | { name: 'certificate_verification_number_starts_with', alias?: string  } 
  | { name: 'certificate_verification_number_not_starts_with', alias?: string  } 
  | { name: 'certificate_verification_number_ends_with', alias?: string  } 
  | { name: 'certificate_verification_number_not_ends_with', alias?: string  } 
  | { name: 'certificate_calibration_number', alias?: string  } 
  | { name: 'certificate_calibration_number_not', alias?: string  } 
  | { name: 'certificate_calibration_number_in', alias?: string  } 
  | { name: 'certificate_calibration_number_not_in', alias?: string  } 
  | { name: 'certificate_calibration_number_lt', alias?: string  } 
  | { name: 'certificate_calibration_number_lte', alias?: string  } 
  | { name: 'certificate_calibration_number_gt', alias?: string  } 
  | { name: 'certificate_calibration_number_gte', alias?: string  } 
  | { name: 'certificate_calibration_number_contains', alias?: string  } 
  | { name: 'certificate_calibration_number_not_contains', alias?: string  } 
  | { name: 'certificate_calibration_number_starts_with', alias?: string  } 
  | { name: 'certificate_calibration_number_not_starts_with', alias?: string  } 
  | { name: 'certificate_calibration_number_ends_with', alias?: string  } 
  | { name: 'certificate_calibration_number_not_ends_with', alias?: string  } 
  | { name: 'department_assessment_center', alias?: string  } 
  | { name: 'department_assessment_center_not', alias?: string  } 
  | { name: 'department_assessment_center_in', alias?: string  } 
  | { name: 'department_assessment_center_not_in', alias?: string  } 
  | { name: 'department_assessment_center_lt', alias?: string  } 
  | { name: 'department_assessment_center_lte', alias?: string  } 
  | { name: 'department_assessment_center_gt', alias?: string  } 
  | { name: 'department_assessment_center_gte', alias?: string  } 
  | { name: 'department_assessment_center_contains', alias?: string  } 
  | { name: 'department_assessment_center_not_contains', alias?: string  } 
  | { name: 'department_assessment_center_starts_with', alias?: string  } 
  | { name: 'department_assessment_center_not_starts_with', alias?: string  } 
  | { name: 'department_assessment_center_ends_with', alias?: string  } 
  | { name: 'department_assessment_center_not_ends_with', alias?: string  } 
  | { name: 'department_verification_center', alias?: string  } 
  | { name: 'department_verification_center_not', alias?: string  } 
  | { name: 'department_verification_center_in', alias?: string  } 
  | { name: 'department_verification_center_not_in', alias?: string  } 
  | { name: 'department_verification_center_lt', alias?: string  } 
  | { name: 'department_verification_center_lte', alias?: string  } 
  | { name: 'department_verification_center_gt', alias?: string  } 
  | { name: 'department_verification_center_gte', alias?: string  } 
  | { name: 'department_verification_center_contains', alias?: string  } 
  | { name: 'department_verification_center_not_contains', alias?: string  } 
  | { name: 'department_verification_center_starts_with', alias?: string  } 
  | { name: 'department_verification_center_not_starts_with', alias?: string  } 
  | { name: 'department_verification_center_ends_with', alias?: string  } 
  | { name: 'department_verification_center_not_ends_with', alias?: string  } 
  | { name: 'department_calibration_center', alias?: string  } 
  | { name: 'department_calibration_center_not', alias?: string  } 
  | { name: 'department_calibration_center_in', alias?: string  } 
  | { name: 'department_calibration_center_not_in', alias?: string  } 
  | { name: 'department_calibration_center_lt', alias?: string  } 
  | { name: 'department_calibration_center_lte', alias?: string  } 
  | { name: 'department_calibration_center_gt', alias?: string  } 
  | { name: 'department_calibration_center_gte', alias?: string  } 
  | { name: 'department_calibration_center_contains', alias?: string  } 
  | { name: 'department_calibration_center_not_contains', alias?: string  } 
  | { name: 'department_calibration_center_starts_with', alias?: string  } 
  | { name: 'department_calibration_center_not_starts_with', alias?: string  } 
  | { name: 'department_calibration_center_ends_with', alias?: string  } 
  | { name: 'department_calibration_center_not_ends_with', alias?: string  } 
  | { name: 'conformity_data', alias?: string  } 
  | { name: 'conformity_data_not', alias?: string  } 
  | { name: 'conformity_data_in', alias?: string  } 
  | { name: 'conformity_data_not_in', alias?: string  } 
  | { name: 'conformity_data_lt', alias?: string  } 
  | { name: 'conformity_data_lte', alias?: string  } 
  | { name: 'conformity_data_gt', alias?: string  } 
  | { name: 'conformity_data_gte', alias?: string  } 
  | { name: 'calibration_data', alias?: string  } 
  | { name: 'calibration_data_not', alias?: string  } 
  | { name: 'calibration_data_in', alias?: string  } 
  | { name: 'calibration_data_not_in', alias?: string  } 
  | { name: 'calibration_data_lt', alias?: string  } 
  | { name: 'calibration_data_lte', alias?: string  } 
  | { name: 'calibration_data_gt', alias?: string  } 
  | { name: 'calibration_data_gte', alias?: string  } 
  | { name: 'valid_verification', alias?: string  } 
  | { name: 'valid_verification_not', alias?: string  } 
  | { name: 'valid_verification_in', alias?: string  } 
  | { name: 'valid_verification_not_in', alias?: string  } 
  | { name: 'valid_verification_lt', alias?: string  } 
  | { name: 'valid_verification_lte', alias?: string  } 
  | { name: 'valid_verification_gt', alias?: string  } 
  | { name: 'valid_verification_gte', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'notes_not', alias?: string  } 
  | { name: 'notes_in', alias?: string  } 
  | { name: 'notes_not_in', alias?: string  } 
  | { name: 'notes_lt', alias?: string  } 
  | { name: 'notes_lte', alias?: string  } 
  | { name: 'notes_gt', alias?: string  } 
  | { name: 'notes_gte', alias?: string  } 
  | { name: 'notes_contains', alias?: string  } 
  | { name: 'notes_not_contains', alias?: string  } 
  | { name: 'notes_starts_with', alias?: string  } 
  | { name: 'notes_not_starts_with', alias?: string  } 
  | { name: 'notes_ends_with', alias?: string  } 
  | { name: 'notes_not_ends_with', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AppointmentsWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  start_date?: string | null
  start_date_not?: string | null
  start_date_in?: string[]
  start_date_not_in?: string[]
  start_date_lt?: string | null
  start_date_lte?: string | null
  start_date_gt?: string | null
  start_date_gte?: string | null
  end_date?: string | null
  end_date_not?: string | null
  end_date_in?: string[]
  end_date_not_in?: string[]
  end_date_lt?: string | null
  end_date_lte?: string | null
  end_date_gt?: string | null
  end_date_gte?: string | null
  location?: string | null
  location_not?: string | null
  location_in?: string[]
  location_not_in?: string[]
  location_lt?: string | null
  location_lte?: string | null
  location_gt?: string | null
  location_gte?: string | null
  location_contains?: string | null
  location_not_contains?: string | null
  location_starts_with?: string | null
  location_not_starts_with?: string | null
  location_ends_with?: string | null
  location_not_ends_with?: string | null
  notes?: string | null
  notes_not?: string | null
  notes_in?: string[]
  notes_not_in?: string[]
  notes_lt?: string | null
  notes_lte?: string | null
  notes_gt?: string | null
  notes_gte?: string | null
  notes_contains?: string | null
  notes_not_contains?: string | null
  notes_starts_with?: string | null
  notes_not_starts_with?: string | null
  notes_ends_with?: string | null
  notes_not_ends_with?: string | null
  author?: UserWhereInput | null
  AND?: AppointmentsWhereInput[]
  OR?: AppointmentsWhereInput[]
  NOT?: AppointmentsWhereInput[]
}
export type AppointmentsWhereInputInputObject =
  | Extract<keyof AppointmentsWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'start_date', alias?: string  } 
  | { name: 'start_date_not', alias?: string  } 
  | { name: 'start_date_in', alias?: string  } 
  | { name: 'start_date_not_in', alias?: string  } 
  | { name: 'start_date_lt', alias?: string  } 
  | { name: 'start_date_lte', alias?: string  } 
  | { name: 'start_date_gt', alias?: string  } 
  | { name: 'start_date_gte', alias?: string  } 
  | { name: 'end_date', alias?: string  } 
  | { name: 'end_date_not', alias?: string  } 
  | { name: 'end_date_in', alias?: string  } 
  | { name: 'end_date_not_in', alias?: string  } 
  | { name: 'end_date_lt', alias?: string  } 
  | { name: 'end_date_lte', alias?: string  } 
  | { name: 'end_date_gt', alias?: string  } 
  | { name: 'end_date_gte', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'location_not', alias?: string  } 
  | { name: 'location_in', alias?: string  } 
  | { name: 'location_not_in', alias?: string  } 
  | { name: 'location_lt', alias?: string  } 
  | { name: 'location_lte', alias?: string  } 
  | { name: 'location_gt', alias?: string  } 
  | { name: 'location_gte', alias?: string  } 
  | { name: 'location_contains', alias?: string  } 
  | { name: 'location_not_contains', alias?: string  } 
  | { name: 'location_starts_with', alias?: string  } 
  | { name: 'location_not_starts_with', alias?: string  } 
  | { name: 'location_ends_with', alias?: string  } 
  | { name: 'location_not_ends_with', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'notes_not', alias?: string  } 
  | { name: 'notes_in', alias?: string  } 
  | { name: 'notes_not_in', alias?: string  } 
  | { name: 'notes_lt', alias?: string  } 
  | { name: 'notes_lte', alias?: string  } 
  | { name: 'notes_gt', alias?: string  } 
  | { name: 'notes_gte', alias?: string  } 
  | { name: 'notes_contains', alias?: string  } 
  | { name: 'notes_not_contains', alias?: string  } 
  | { name: 'notes_starts_with', alias?: string  } 
  | { name: 'notes_not_starts_with', alias?: string  } 
  | { name: 'notes_ends_with', alias?: string  } 
  | { name: 'notes_not_ends_with', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TeamWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  author?: UserWhereInput | null
  teamMembers_every?: TeamMembersWhereInput | null
  teamMembers_some?: TeamMembersWhereInput | null
  teamMembers_none?: TeamMembersWhereInput | null
  payment?: boolean | null
  payment_not?: boolean | null
  role?: prisma.Role | null
  role_not?: prisma.Role | null
  role_in?: prisma.Role[]
  role_not_in?: prisma.Role[]
  AND?: TeamWhereInput[]
  OR?: TeamWhereInput[]
  NOT?: TeamWhereInput[]
}
export type TeamWhereInputInputObject =
  | Extract<keyof TeamWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'teamMembers_every', alias?: string  } 
  | { name: 'teamMembers_some', alias?: string  } 
  | { name: 'teamMembers_none', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'payment_not', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'role_not', alias?: string  } 
  | { name: 'role_in', alias?: string  } 
  | { name: 'role_not_in', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TeamMembersWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  emailMembers?: string | null
  emailMembers_not?: string | null
  emailMembers_in?: string[]
  emailMembers_not_in?: string[]
  emailMembers_lt?: string | null
  emailMembers_lte?: string | null
  emailMembers_gt?: string | null
  emailMembers_gte?: string | null
  emailMembers_contains?: string | null
  emailMembers_not_contains?: string | null
  emailMembers_starts_with?: string | null
  emailMembers_not_starts_with?: string | null
  emailMembers_ends_with?: string | null
  emailMembers_not_ends_with?: string | null
  member?: prisma.Members | null
  member_not?: prisma.Members | null
  member_in?: prisma.Members[]
  member_not_in?: prisma.Members[]
  memberConfirmed?: boolean | null
  memberConfirmed_not?: boolean | null
  memberConfirmToken?: string | null
  memberConfirmToken_not?: string | null
  memberConfirmToken_in?: string[]
  memberConfirmToken_not_in?: string[]
  memberConfirmToken_lt?: string | null
  memberConfirmToken_lte?: string | null
  memberConfirmToken_gt?: string | null
  memberConfirmToken_gte?: string | null
  memberConfirmToken_contains?: string | null
  memberConfirmToken_not_contains?: string | null
  memberConfirmToken_starts_with?: string | null
  memberConfirmToken_not_starts_with?: string | null
  memberConfirmToken_ends_with?: string | null
  memberConfirmToken_not_ends_with?: string | null
  team?: TeamWhereInput | null
  AND?: TeamMembersWhereInput[]
  OR?: TeamMembersWhereInput[]
  NOT?: TeamMembersWhereInput[]
}
export type TeamMembersWhereInputInputObject =
  | Extract<keyof TeamMembersWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'emailMembers', alias?: string  } 
  | { name: 'emailMembers_not', alias?: string  } 
  | { name: 'emailMembers_in', alias?: string  } 
  | { name: 'emailMembers_not_in', alias?: string  } 
  | { name: 'emailMembers_lt', alias?: string  } 
  | { name: 'emailMembers_lte', alias?: string  } 
  | { name: 'emailMembers_gt', alias?: string  } 
  | { name: 'emailMembers_gte', alias?: string  } 
  | { name: 'emailMembers_contains', alias?: string  } 
  | { name: 'emailMembers_not_contains', alias?: string  } 
  | { name: 'emailMembers_starts_with', alias?: string  } 
  | { name: 'emailMembers_not_starts_with', alias?: string  } 
  | { name: 'emailMembers_ends_with', alias?: string  } 
  | { name: 'emailMembers_not_ends_with', alias?: string  } 
  | { name: 'member', alias?: string  } 
  | { name: 'member_not', alias?: string  } 
  | { name: 'member_in', alias?: string  } 
  | { name: 'member_not_in', alias?: string  } 
  | { name: 'memberConfirmed', alias?: string  } 
  | { name: 'memberConfirmed_not', alias?: string  } 
  | { name: 'memberConfirmToken', alias?: string  } 
  | { name: 'memberConfirmToken_not', alias?: string  } 
  | { name: 'memberConfirmToken_in', alias?: string  } 
  | { name: 'memberConfirmToken_not_in', alias?: string  } 
  | { name: 'memberConfirmToken_lt', alias?: string  } 
  | { name: 'memberConfirmToken_lte', alias?: string  } 
  | { name: 'memberConfirmToken_gt', alias?: string  } 
  | { name: 'memberConfirmToken_gte', alias?: string  } 
  | { name: 'memberConfirmToken_contains', alias?: string  } 
  | { name: 'memberConfirmToken_not_contains', alias?: string  } 
  | { name: 'memberConfirmToken_starts_with', alias?: string  } 
  | { name: 'memberConfirmToken_not_starts_with', alias?: string  } 
  | { name: 'memberConfirmToken_ends_with', alias?: string  } 
  | { name: 'memberConfirmToken_not_ends_with', alias?: string  } 
  | { name: 'team', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface DeviceWhereUniqueInput {
  id?: string | null
}
export type DeviceWhereUniqueInputInputObject =
  | Extract<keyof DeviceWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface DeviceWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  published?: boolean | null
  published_not?: boolean | null
  name_EN?: string | null
  name_EN_not?: string | null
  name_EN_in?: string[]
  name_EN_not_in?: string[]
  name_EN_lt?: string | null
  name_EN_lte?: string | null
  name_EN_gt?: string | null
  name_EN_gte?: string | null
  name_EN_contains?: string | null
  name_EN_not_contains?: string | null
  name_EN_starts_with?: string | null
  name_EN_not_starts_with?: string | null
  name_EN_ends_with?: string | null
  name_EN_not_ends_with?: string | null
  name_UA?: string | null
  name_UA_not?: string | null
  name_UA_in?: string[]
  name_UA_not_in?: string[]
  name_UA_lt?: string | null
  name_UA_lte?: string | null
  name_UA_gt?: string | null
  name_UA_gte?: string | null
  name_UA_contains?: string | null
  name_UA_not_contains?: string | null
  name_UA_starts_with?: string | null
  name_UA_not_starts_with?: string | null
  name_UA_ends_with?: string | null
  name_UA_not_ends_with?: string | null
  name_RUS?: string | null
  name_RUS_not?: string | null
  name_RUS_in?: string[]
  name_RUS_not_in?: string[]
  name_RUS_lt?: string | null
  name_RUS_lte?: string | null
  name_RUS_gt?: string | null
  name_RUS_gte?: string | null
  name_RUS_contains?: string | null
  name_RUS_not_contains?: string | null
  name_RUS_starts_with?: string | null
  name_RUS_not_starts_with?: string | null
  name_RUS_ends_with?: string | null
  name_RUS_not_ends_with?: string | null
  module?: string | null
  module_not?: string | null
  module_in?: string[]
  module_not_in?: string[]
  module_lt?: string | null
  module_lte?: string | null
  module_gt?: string | null
  module_gte?: string | null
  module_contains?: string | null
  module_not_contains?: string | null
  module_starts_with?: string | null
  module_not_starts_with?: string | null
  module_ends_with?: string | null
  module_not_ends_with?: string | null
  tr?: TRWhereInput | null
  dtc?: DTCWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DeviceWhereInput[]
  OR?: DeviceWhereInput[]
  NOT?: DeviceWhereInput[]
}
export type DeviceWhereInputInputObject =
  | Extract<keyof DeviceWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_EN_not', alias?: string  } 
  | { name: 'name_EN_in', alias?: string  } 
  | { name: 'name_EN_not_in', alias?: string  } 
  | { name: 'name_EN_lt', alias?: string  } 
  | { name: 'name_EN_lte', alias?: string  } 
  | { name: 'name_EN_gt', alias?: string  } 
  | { name: 'name_EN_gte', alias?: string  } 
  | { name: 'name_EN_contains', alias?: string  } 
  | { name: 'name_EN_not_contains', alias?: string  } 
  | { name: 'name_EN_starts_with', alias?: string  } 
  | { name: 'name_EN_not_starts_with', alias?: string  } 
  | { name: 'name_EN_ends_with', alias?: string  } 
  | { name: 'name_EN_not_ends_with', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_UA_not', alias?: string  } 
  | { name: 'name_UA_in', alias?: string  } 
  | { name: 'name_UA_not_in', alias?: string  } 
  | { name: 'name_UA_lt', alias?: string  } 
  | { name: 'name_UA_lte', alias?: string  } 
  | { name: 'name_UA_gt', alias?: string  } 
  | { name: 'name_UA_gte', alias?: string  } 
  | { name: 'name_UA_contains', alias?: string  } 
  | { name: 'name_UA_not_contains', alias?: string  } 
  | { name: 'name_UA_starts_with', alias?: string  } 
  | { name: 'name_UA_not_starts_with', alias?: string  } 
  | { name: 'name_UA_ends_with', alias?: string  } 
  | { name: 'name_UA_not_ends_with', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'name_RUS_not', alias?: string  } 
  | { name: 'name_RUS_in', alias?: string  } 
  | { name: 'name_RUS_not_in', alias?: string  } 
  | { name: 'name_RUS_lt', alias?: string  } 
  | { name: 'name_RUS_lte', alias?: string  } 
  | { name: 'name_RUS_gt', alias?: string  } 
  | { name: 'name_RUS_gte', alias?: string  } 
  | { name: 'name_RUS_contains', alias?: string  } 
  | { name: 'name_RUS_not_contains', alias?: string  } 
  | { name: 'name_RUS_starts_with', alias?: string  } 
  | { name: 'name_RUS_not_starts_with', alias?: string  } 
  | { name: 'name_RUS_ends_with', alias?: string  } 
  | { name: 'name_RUS_not_ends_with', alias?: string  } 
  | { name: 'module', alias?: string  } 
  | { name: 'module_not', alias?: string  } 
  | { name: 'module_in', alias?: string  } 
  | { name: 'module_not_in', alias?: string  } 
  | { name: 'module_lt', alias?: string  } 
  | { name: 'module_lte', alias?: string  } 
  | { name: 'module_gt', alias?: string  } 
  | { name: 'module_gte', alias?: string  } 
  | { name: 'module_contains', alias?: string  } 
  | { name: 'module_not_contains', alias?: string  } 
  | { name: 'module_starts_with', alias?: string  } 
  | { name: 'module_not_starts_with', alias?: string  } 
  | { name: 'module_ends_with', alias?: string  } 
  | { name: 'module_not_ends_with', alias?: string  } 
  | { name: 'tr', alias?: string  } 
  | { name: 'dtc', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TRWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name_TR_UA?: string | null
  name_TR_UA_not?: string | null
  name_TR_UA_in?: string[]
  name_TR_UA_not_in?: string[]
  name_TR_UA_lt?: string | null
  name_TR_UA_lte?: string | null
  name_TR_UA_gt?: string | null
  name_TR_UA_gte?: string | null
  name_TR_UA_contains?: string | null
  name_TR_UA_not_contains?: string | null
  name_TR_UA_starts_with?: string | null
  name_TR_UA_not_starts_with?: string | null
  name_TR_UA_ends_with?: string | null
  name_TR_UA_not_ends_with?: string | null
  name_TR_EN?: string | null
  name_TR_EN_not?: string | null
  name_TR_EN_in?: string[]
  name_TR_EN_not_in?: string[]
  name_TR_EN_lt?: string | null
  name_TR_EN_lte?: string | null
  name_TR_EN_gt?: string | null
  name_TR_EN_gte?: string | null
  name_TR_EN_contains?: string | null
  name_TR_EN_not_contains?: string | null
  name_TR_EN_starts_with?: string | null
  name_TR_EN_not_starts_with?: string | null
  name_TR_EN_ends_with?: string | null
  name_TR_EN_not_ends_with?: string | null
  device_id_every?: DeviceWhereInput | null
  device_id_some?: DeviceWhereInput | null
  device_id_none?: DeviceWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: TRWhereInput[]
  OR?: TRWhereInput[]
  NOT?: TRWhereInput[]
}
export type TRWhereInputInputObject =
  | Extract<keyof TRWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name_TR_UA', alias?: string  } 
  | { name: 'name_TR_UA_not', alias?: string  } 
  | { name: 'name_TR_UA_in', alias?: string  } 
  | { name: 'name_TR_UA_not_in', alias?: string  } 
  | { name: 'name_TR_UA_lt', alias?: string  } 
  | { name: 'name_TR_UA_lte', alias?: string  } 
  | { name: 'name_TR_UA_gt', alias?: string  } 
  | { name: 'name_TR_UA_gte', alias?: string  } 
  | { name: 'name_TR_UA_contains', alias?: string  } 
  | { name: 'name_TR_UA_not_contains', alias?: string  } 
  | { name: 'name_TR_UA_starts_with', alias?: string  } 
  | { name: 'name_TR_UA_not_starts_with', alias?: string  } 
  | { name: 'name_TR_UA_ends_with', alias?: string  } 
  | { name: 'name_TR_UA_not_ends_with', alias?: string  } 
  | { name: 'name_TR_EN', alias?: string  } 
  | { name: 'name_TR_EN_not', alias?: string  } 
  | { name: 'name_TR_EN_in', alias?: string  } 
  | { name: 'name_TR_EN_not_in', alias?: string  } 
  | { name: 'name_TR_EN_lt', alias?: string  } 
  | { name: 'name_TR_EN_lte', alias?: string  } 
  | { name: 'name_TR_EN_gt', alias?: string  } 
  | { name: 'name_TR_EN_gte', alias?: string  } 
  | { name: 'name_TR_EN_contains', alias?: string  } 
  | { name: 'name_TR_EN_not_contains', alias?: string  } 
  | { name: 'name_TR_EN_starts_with', alias?: string  } 
  | { name: 'name_TR_EN_not_starts_with', alias?: string  } 
  | { name: 'name_TR_EN_ends_with', alias?: string  } 
  | { name: 'name_TR_EN_not_ends_with', alias?: string  } 
  | { name: 'device_id_every', alias?: string  } 
  | { name: 'device_id_some', alias?: string  } 
  | { name: 'device_id_none', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DTCWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name_UA?: string | null
  name_UA_not?: string | null
  name_UA_in?: string[]
  name_UA_not_in?: string[]
  name_UA_lt?: string | null
  name_UA_lte?: string | null
  name_UA_gt?: string | null
  name_UA_gte?: string | null
  name_UA_contains?: string | null
  name_UA_not_contains?: string | null
  name_UA_starts_with?: string | null
  name_UA_not_starts_with?: string | null
  name_UA_ends_with?: string | null
  name_UA_not_ends_with?: string | null
  name_EN?: string | null
  name_EN_not?: string | null
  name_EN_in?: string[]
  name_EN_not_in?: string[]
  name_EN_lt?: string | null
  name_EN_lte?: string | null
  name_EN_gt?: string | null
  name_EN_gte?: string | null
  name_EN_contains?: string | null
  name_EN_not_contains?: string | null
  name_EN_starts_with?: string | null
  name_EN_not_starts_with?: string | null
  name_EN_ends_with?: string | null
  name_EN_not_ends_with?: string | null
  device_id_every?: DeviceWhereInput | null
  device_id_some?: DeviceWhereInput | null
  device_id_none?: DeviceWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DTCWhereInput[]
  OR?: DTCWhereInput[]
  NOT?: DTCWhereInput[]
}
export type DTCWhereInputInputObject =
  | Extract<keyof DTCWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_UA_not', alias?: string  } 
  | { name: 'name_UA_in', alias?: string  } 
  | { name: 'name_UA_not_in', alias?: string  } 
  | { name: 'name_UA_lt', alias?: string  } 
  | { name: 'name_UA_lte', alias?: string  } 
  | { name: 'name_UA_gt', alias?: string  } 
  | { name: 'name_UA_gte', alias?: string  } 
  | { name: 'name_UA_contains', alias?: string  } 
  | { name: 'name_UA_not_contains', alias?: string  } 
  | { name: 'name_UA_starts_with', alias?: string  } 
  | { name: 'name_UA_not_starts_with', alias?: string  } 
  | { name: 'name_UA_ends_with', alias?: string  } 
  | { name: 'name_UA_not_ends_with', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_EN_not', alias?: string  } 
  | { name: 'name_EN_in', alias?: string  } 
  | { name: 'name_EN_not_in', alias?: string  } 
  | { name: 'name_EN_lt', alias?: string  } 
  | { name: 'name_EN_lte', alias?: string  } 
  | { name: 'name_EN_gt', alias?: string  } 
  | { name: 'name_EN_gte', alias?: string  } 
  | { name: 'name_EN_contains', alias?: string  } 
  | { name: 'name_EN_not_contains', alias?: string  } 
  | { name: 'name_EN_starts_with', alias?: string  } 
  | { name: 'name_EN_not_starts_with', alias?: string  } 
  | { name: 'name_EN_ends_with', alias?: string  } 
  | { name: 'name_EN_not_ends_with', alias?: string  } 
  | { name: 'device_id_every', alias?: string  } 
  | { name: 'device_id_some', alias?: string  } 
  | { name: 'device_id_none', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DTCWhereUniqueInput {
  id?: string | null
}
export type DTCWhereUniqueInputInputObject =
  | Extract<keyof DTCWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface TRWhereUniqueInput {
  id?: string | null
}
export type TRWhereUniqueInputInputObject =
  | Extract<keyof TRWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface LetterEmailWhereUniqueInput {
  id?: string | null
}
export type LetterEmailWhereUniqueInputInputObject =
  | Extract<keyof LetterEmailWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface LetterEmailWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  from?: string | null
  from_not?: string | null
  from_in?: string[]
  from_not_in?: string[]
  from_lt?: string | null
  from_lte?: string | null
  from_gt?: string | null
  from_gte?: string | null
  from_contains?: string | null
  from_not_contains?: string | null
  from_starts_with?: string | null
  from_not_starts_with?: string | null
  from_ends_with?: string | null
  from_not_ends_with?: string | null
  subject?: string | null
  subject_not?: string | null
  subject_in?: string[]
  subject_not_in?: string[]
  subject_lt?: string | null
  subject_lte?: string | null
  subject_gt?: string | null
  subject_gte?: string | null
  subject_contains?: string | null
  subject_not_contains?: string | null
  subject_starts_with?: string | null
  subject_not_starts_with?: string | null
  subject_ends_with?: string | null
  subject_not_ends_with?: string | null
  text?: string | null
  text_not?: string | null
  text_in?: string[]
  text_not_in?: string[]
  text_lt?: string | null
  text_lte?: string | null
  text_gt?: string | null
  text_gte?: string | null
  text_contains?: string | null
  text_not_contains?: string | null
  text_starts_with?: string | null
  text_not_starts_with?: string | null
  text_ends_with?: string | null
  text_not_ends_with?: string | null
  AND?: LetterEmailWhereInput[]
  OR?: LetterEmailWhereInput[]
  NOT?: LetterEmailWhereInput[]
}
export type LetterEmailWhereInputInputObject =
  | Extract<keyof LetterEmailWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'from', alias?: string  } 
  | { name: 'from_not', alias?: string  } 
  | { name: 'from_in', alias?: string  } 
  | { name: 'from_not_in', alias?: string  } 
  | { name: 'from_lt', alias?: string  } 
  | { name: 'from_lte', alias?: string  } 
  | { name: 'from_gt', alias?: string  } 
  | { name: 'from_gte', alias?: string  } 
  | { name: 'from_contains', alias?: string  } 
  | { name: 'from_not_contains', alias?: string  } 
  | { name: 'from_starts_with', alias?: string  } 
  | { name: 'from_not_starts_with', alias?: string  } 
  | { name: 'from_ends_with', alias?: string  } 
  | { name: 'from_not_ends_with', alias?: string  } 
  | { name: 'subject', alias?: string  } 
  | { name: 'subject_not', alias?: string  } 
  | { name: 'subject_in', alias?: string  } 
  | { name: 'subject_not_in', alias?: string  } 
  | { name: 'subject_lt', alias?: string  } 
  | { name: 'subject_lte', alias?: string  } 
  | { name: 'subject_gt', alias?: string  } 
  | { name: 'subject_gte', alias?: string  } 
  | { name: 'subject_contains', alias?: string  } 
  | { name: 'subject_not_contains', alias?: string  } 
  | { name: 'subject_starts_with', alias?: string  } 
  | { name: 'subject_not_starts_with', alias?: string  } 
  | { name: 'subject_ends_with', alias?: string  } 
  | { name: 'subject_not_ends_with', alias?: string  } 
  | { name: 'text', alias?: string  } 
  | { name: 'text_not', alias?: string  } 
  | { name: 'text_in', alias?: string  } 
  | { name: 'text_not_in', alias?: string  } 
  | { name: 'text_lt', alias?: string  } 
  | { name: 'text_lte', alias?: string  } 
  | { name: 'text_gt', alias?: string  } 
  | { name: 'text_gte', alias?: string  } 
  | { name: 'text_contains', alias?: string  } 
  | { name: 'text_not_contains', alias?: string  } 
  | { name: 'text_starts_with', alias?: string  } 
  | { name: 'text_not_starts_with', alias?: string  } 
  | { name: 'text_ends_with', alias?: string  } 
  | { name: 'text_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MyDeviceWhereUniqueInput {
  id?: string | null
}
export type MyDeviceWhereUniqueInputInputObject =
  | Extract<keyof MyDeviceWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface TeamWhereUniqueInput {
  id?: string | null
  name?: string | null
}
export type TeamWhereUniqueInputInputObject =
  | Extract<keyof TeamWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface TeamMembersWhereUniqueInput {
  id?: string | null
  emailMembers?: string | null
}
export type TeamMembersWhereUniqueInputInputObject =
  | Extract<keyof TeamMembersWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'emailMembers', alias?: string  } 
  
export interface AppointmentsWhereUniqueInput {
  id?: string | null
}
export type AppointmentsWhereUniqueInputInputObject =
  | Extract<keyof AppointmentsWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PostCreateInput {
  id?: string | null
  published?: boolean | null
  title?: string
  content?: string
  author?: UserCreateOneWithoutPostsInput
}
export type PostCreateInputInputObject =
  | Extract<keyof PostCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserCreateOneWithoutPostsInput {
  create?: UserCreateWithoutPostsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutPostsInputInputObject =
  | Extract<keyof UserCreateOneWithoutPostsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutPostsInput {
  id?: string | null
  email?: string
  password?: string
  name?: string
  companyName?: string | null
  country?: string | null
  mydevices?: MyDeviceCreateManyWithoutAuthorInput | null
  appointments?: AppointmentsCreateManyWithoutAuthorInput | null
  emailConfirmed?: boolean
  emailConfirmToken?: string
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string
  teams?: TeamCreateManyWithoutAuthorInput | null
}
export type UserCreateWithoutPostsInputInputObject =
  | Extract<keyof UserCreateWithoutPostsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'mydevices', alias?: string  } 
  | { name: 'appointments', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  | { name: 'teams', alias?: string  } 
  
export interface MyDeviceCreateManyWithoutAuthorInput {
  create?: MyDeviceCreateWithoutAuthorInput[]
  connect?: MyDeviceWhereUniqueInput[]
}
export type MyDeviceCreateManyWithoutAuthorInputInputObject =
  | Extract<keyof MyDeviceCreateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MyDeviceCreateWithoutAuthorInput {
  id?: string | null
  name_device?: string
  brand_device?: string
  series_device?: string
  kind_device?: string | null
  certificate_calibration?: boolean | null
  certificate_verification?: boolean | null
  certificate_conformity?: boolean | null
  module_device?: string | null
  tr_device?: string | null
  certificate_assessment_number?: string | null
  certificate_verification_number?: string | null
  certificate_calibration_number?: string | null
  department_assessment_center?: string | null
  department_verification_center?: string | null
  department_calibration_center?: string | null
  conformity_data?: string | null
  calibration_data?: string | null
  valid_verification?: string | null
  notes?: string | null
}
export type MyDeviceCreateWithoutAuthorInputInputObject =
  | Extract<keyof MyDeviceCreateWithoutAuthorInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name_device', alias?: string  } 
  | { name: 'brand_device', alias?: string  } 
  | { name: 'series_device', alias?: string  } 
  | { name: 'kind_device', alias?: string  } 
  | { name: 'certificate_calibration', alias?: string  } 
  | { name: 'certificate_verification', alias?: string  } 
  | { name: 'certificate_conformity', alias?: string  } 
  | { name: 'module_device', alias?: string  } 
  | { name: 'tr_device', alias?: string  } 
  | { name: 'certificate_assessment_number', alias?: string  } 
  | { name: 'certificate_verification_number', alias?: string  } 
  | { name: 'certificate_calibration_number', alias?: string  } 
  | { name: 'department_assessment_center', alias?: string  } 
  | { name: 'department_verification_center', alias?: string  } 
  | { name: 'department_calibration_center', alias?: string  } 
  | { name: 'conformity_data', alias?: string  } 
  | { name: 'calibration_data', alias?: string  } 
  | { name: 'valid_verification', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  
export interface AppointmentsCreateManyWithoutAuthorInput {
  create?: AppointmentsCreateWithoutAuthorInput[]
  connect?: AppointmentsWhereUniqueInput[]
}
export type AppointmentsCreateManyWithoutAuthorInputInputObject =
  | Extract<keyof AppointmentsCreateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AppointmentsCreateWithoutAuthorInput {
  id?: string | null
  title?: string | null
  start_date?: string | null
  end_date?: string | null
  location?: string | null
  notes?: string | null
}
export type AppointmentsCreateWithoutAuthorInputInputObject =
  | Extract<keyof AppointmentsCreateWithoutAuthorInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'start_date', alias?: string  } 
  | { name: 'end_date', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  
export interface TeamCreateManyWithoutAuthorInput {
  create?: TeamCreateWithoutAuthorInput[]
  connect?: TeamWhereUniqueInput[]
}
export type TeamCreateManyWithoutAuthorInputInputObject =
  | Extract<keyof TeamCreateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TeamCreateWithoutAuthorInput {
  id?: string | null
  name?: string
  teamMembers?: TeamMembersCreateManyWithoutTeamInput | null
  payment?: boolean | null
  role?: prisma.Role | null
}
export type TeamCreateWithoutAuthorInputInputObject =
  | Extract<keyof TeamCreateWithoutAuthorInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'teamMembers', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface TeamMembersCreateManyWithoutTeamInput {
  create?: TeamMembersCreateWithoutTeamInput[]
  connect?: TeamMembersWhereUniqueInput[]
}
export type TeamMembersCreateManyWithoutTeamInputInputObject =
  | Extract<keyof TeamMembersCreateManyWithoutTeamInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TeamMembersCreateWithoutTeamInput {
  id?: string | null
  emailMembers?: string
  member?: prisma.Members | null
  memberConfirmed?: boolean | null
  memberConfirmToken?: string | null
}
export type TeamMembersCreateWithoutTeamInputInputObject =
  | Extract<keyof TeamMembersCreateWithoutTeamInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'emailMembers', alias?: string  } 
  | { name: 'member', alias?: string  } 
  | { name: 'memberConfirmed', alias?: string  } 
  | { name: 'memberConfirmToken', alias?: string  } 
  
export interface PostUpdateInput {
  published?: boolean | null
  title?: string | null
  content?: string | null
  author?: UserUpdateOneRequiredWithoutPostsInput | null
}
export type PostUpdateInputInputObject =
  | Extract<keyof PostUpdateInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutPostsInput {
  create?: UserCreateWithoutPostsInput | null
  update?: UserUpdateWithoutPostsDataInput | null
  upsert?: UserUpsertWithoutPostsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutPostsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutPostsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutPostsDataInput {
  email?: string | null
  password?: string | null
  name?: string | null
  companyName?: string | null
  country?: string | null
  mydevices?: MyDeviceUpdateManyWithoutAuthorInput | null
  appointments?: AppointmentsUpdateManyWithoutAuthorInput | null
  emailConfirmed?: boolean | null
  emailConfirmToken?: string | null
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string | null
  teams?: TeamUpdateManyWithoutAuthorInput | null
}
export type UserUpdateWithoutPostsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutPostsDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'mydevices', alias?: string  } 
  | { name: 'appointments', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  | { name: 'teams', alias?: string  } 
  
export interface MyDeviceUpdateManyWithoutAuthorInput {
  create?: MyDeviceCreateWithoutAuthorInput[]
  delete?: MyDeviceWhereUniqueInput[]
  connect?: MyDeviceWhereUniqueInput[]
  set?: MyDeviceWhereUniqueInput[]
  disconnect?: MyDeviceWhereUniqueInput[]
  update?: MyDeviceUpdateWithWhereUniqueWithoutAuthorInput[]
  upsert?: MyDeviceUpsertWithWhereUniqueWithoutAuthorInput[]
  deleteMany?: MyDeviceScalarWhereInput[]
  updateMany?: MyDeviceUpdateManyWithWhereNestedInput[]
}
export type MyDeviceUpdateManyWithoutAuthorInputInputObject =
  | Extract<keyof MyDeviceUpdateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MyDeviceUpdateWithWhereUniqueWithoutAuthorInput {
  where?: MyDeviceWhereUniqueInput
  data?: MyDeviceUpdateWithoutAuthorDataInput
}
export type MyDeviceUpdateWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof MyDeviceUpdateWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MyDeviceUpdateWithoutAuthorDataInput {
  name_device?: string | null
  brand_device?: string | null
  series_device?: string | null
  kind_device?: string | null
  certificate_calibration?: boolean | null
  certificate_verification?: boolean | null
  certificate_conformity?: boolean | null
  module_device?: string | null
  tr_device?: string | null
  certificate_assessment_number?: string | null
  certificate_verification_number?: string | null
  certificate_calibration_number?: string | null
  department_assessment_center?: string | null
  department_verification_center?: string | null
  department_calibration_center?: string | null
  conformity_data?: string | null
  calibration_data?: string | null
  valid_verification?: string | null
  notes?: string | null
}
export type MyDeviceUpdateWithoutAuthorDataInputInputObject =
  | Extract<keyof MyDeviceUpdateWithoutAuthorDataInput, string>
  | { name: 'name_device', alias?: string  } 
  | { name: 'brand_device', alias?: string  } 
  | { name: 'series_device', alias?: string  } 
  | { name: 'kind_device', alias?: string  } 
  | { name: 'certificate_calibration', alias?: string  } 
  | { name: 'certificate_verification', alias?: string  } 
  | { name: 'certificate_conformity', alias?: string  } 
  | { name: 'module_device', alias?: string  } 
  | { name: 'tr_device', alias?: string  } 
  | { name: 'certificate_assessment_number', alias?: string  } 
  | { name: 'certificate_verification_number', alias?: string  } 
  | { name: 'certificate_calibration_number', alias?: string  } 
  | { name: 'department_assessment_center', alias?: string  } 
  | { name: 'department_verification_center', alias?: string  } 
  | { name: 'department_calibration_center', alias?: string  } 
  | { name: 'conformity_data', alias?: string  } 
  | { name: 'calibration_data', alias?: string  } 
  | { name: 'valid_verification', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  
export interface MyDeviceUpsertWithWhereUniqueWithoutAuthorInput {
  where?: MyDeviceWhereUniqueInput
  update?: MyDeviceUpdateWithoutAuthorDataInput
  create?: MyDeviceCreateWithoutAuthorInput
}
export type MyDeviceUpsertWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof MyDeviceUpsertWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MyDeviceScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name_device?: string | null
  name_device_not?: string | null
  name_device_in?: string[]
  name_device_not_in?: string[]
  name_device_lt?: string | null
  name_device_lte?: string | null
  name_device_gt?: string | null
  name_device_gte?: string | null
  name_device_contains?: string | null
  name_device_not_contains?: string | null
  name_device_starts_with?: string | null
  name_device_not_starts_with?: string | null
  name_device_ends_with?: string | null
  name_device_not_ends_with?: string | null
  brand_device?: string | null
  brand_device_not?: string | null
  brand_device_in?: string[]
  brand_device_not_in?: string[]
  brand_device_lt?: string | null
  brand_device_lte?: string | null
  brand_device_gt?: string | null
  brand_device_gte?: string | null
  brand_device_contains?: string | null
  brand_device_not_contains?: string | null
  brand_device_starts_with?: string | null
  brand_device_not_starts_with?: string | null
  brand_device_ends_with?: string | null
  brand_device_not_ends_with?: string | null
  series_device?: string | null
  series_device_not?: string | null
  series_device_in?: string[]
  series_device_not_in?: string[]
  series_device_lt?: string | null
  series_device_lte?: string | null
  series_device_gt?: string | null
  series_device_gte?: string | null
  series_device_contains?: string | null
  series_device_not_contains?: string | null
  series_device_starts_with?: string | null
  series_device_not_starts_with?: string | null
  series_device_ends_with?: string | null
  series_device_not_ends_with?: string | null
  kind_device?: string | null
  kind_device_not?: string | null
  kind_device_in?: string[]
  kind_device_not_in?: string[]
  kind_device_lt?: string | null
  kind_device_lte?: string | null
  kind_device_gt?: string | null
  kind_device_gte?: string | null
  kind_device_contains?: string | null
  kind_device_not_contains?: string | null
  kind_device_starts_with?: string | null
  kind_device_not_starts_with?: string | null
  kind_device_ends_with?: string | null
  kind_device_not_ends_with?: string | null
  certificate_calibration?: boolean | null
  certificate_calibration_not?: boolean | null
  certificate_verification?: boolean | null
  certificate_verification_not?: boolean | null
  certificate_conformity?: boolean | null
  certificate_conformity_not?: boolean | null
  module_device?: string | null
  module_device_not?: string | null
  module_device_in?: string[]
  module_device_not_in?: string[]
  module_device_lt?: string | null
  module_device_lte?: string | null
  module_device_gt?: string | null
  module_device_gte?: string | null
  module_device_contains?: string | null
  module_device_not_contains?: string | null
  module_device_starts_with?: string | null
  module_device_not_starts_with?: string | null
  module_device_ends_with?: string | null
  module_device_not_ends_with?: string | null
  tr_device?: string | null
  tr_device_not?: string | null
  tr_device_in?: string[]
  tr_device_not_in?: string[]
  tr_device_lt?: string | null
  tr_device_lte?: string | null
  tr_device_gt?: string | null
  tr_device_gte?: string | null
  tr_device_contains?: string | null
  tr_device_not_contains?: string | null
  tr_device_starts_with?: string | null
  tr_device_not_starts_with?: string | null
  tr_device_ends_with?: string | null
  tr_device_not_ends_with?: string | null
  certificate_assessment_number?: string | null
  certificate_assessment_number_not?: string | null
  certificate_assessment_number_in?: string[]
  certificate_assessment_number_not_in?: string[]
  certificate_assessment_number_lt?: string | null
  certificate_assessment_number_lte?: string | null
  certificate_assessment_number_gt?: string | null
  certificate_assessment_number_gte?: string | null
  certificate_assessment_number_contains?: string | null
  certificate_assessment_number_not_contains?: string | null
  certificate_assessment_number_starts_with?: string | null
  certificate_assessment_number_not_starts_with?: string | null
  certificate_assessment_number_ends_with?: string | null
  certificate_assessment_number_not_ends_with?: string | null
  certificate_verification_number?: string | null
  certificate_verification_number_not?: string | null
  certificate_verification_number_in?: string[]
  certificate_verification_number_not_in?: string[]
  certificate_verification_number_lt?: string | null
  certificate_verification_number_lte?: string | null
  certificate_verification_number_gt?: string | null
  certificate_verification_number_gte?: string | null
  certificate_verification_number_contains?: string | null
  certificate_verification_number_not_contains?: string | null
  certificate_verification_number_starts_with?: string | null
  certificate_verification_number_not_starts_with?: string | null
  certificate_verification_number_ends_with?: string | null
  certificate_verification_number_not_ends_with?: string | null
  certificate_calibration_number?: string | null
  certificate_calibration_number_not?: string | null
  certificate_calibration_number_in?: string[]
  certificate_calibration_number_not_in?: string[]
  certificate_calibration_number_lt?: string | null
  certificate_calibration_number_lte?: string | null
  certificate_calibration_number_gt?: string | null
  certificate_calibration_number_gte?: string | null
  certificate_calibration_number_contains?: string | null
  certificate_calibration_number_not_contains?: string | null
  certificate_calibration_number_starts_with?: string | null
  certificate_calibration_number_not_starts_with?: string | null
  certificate_calibration_number_ends_with?: string | null
  certificate_calibration_number_not_ends_with?: string | null
  department_assessment_center?: string | null
  department_assessment_center_not?: string | null
  department_assessment_center_in?: string[]
  department_assessment_center_not_in?: string[]
  department_assessment_center_lt?: string | null
  department_assessment_center_lte?: string | null
  department_assessment_center_gt?: string | null
  department_assessment_center_gte?: string | null
  department_assessment_center_contains?: string | null
  department_assessment_center_not_contains?: string | null
  department_assessment_center_starts_with?: string | null
  department_assessment_center_not_starts_with?: string | null
  department_assessment_center_ends_with?: string | null
  department_assessment_center_not_ends_with?: string | null
  department_verification_center?: string | null
  department_verification_center_not?: string | null
  department_verification_center_in?: string[]
  department_verification_center_not_in?: string[]
  department_verification_center_lt?: string | null
  department_verification_center_lte?: string | null
  department_verification_center_gt?: string | null
  department_verification_center_gte?: string | null
  department_verification_center_contains?: string | null
  department_verification_center_not_contains?: string | null
  department_verification_center_starts_with?: string | null
  department_verification_center_not_starts_with?: string | null
  department_verification_center_ends_with?: string | null
  department_verification_center_not_ends_with?: string | null
  department_calibration_center?: string | null
  department_calibration_center_not?: string | null
  department_calibration_center_in?: string[]
  department_calibration_center_not_in?: string[]
  department_calibration_center_lt?: string | null
  department_calibration_center_lte?: string | null
  department_calibration_center_gt?: string | null
  department_calibration_center_gte?: string | null
  department_calibration_center_contains?: string | null
  department_calibration_center_not_contains?: string | null
  department_calibration_center_starts_with?: string | null
  department_calibration_center_not_starts_with?: string | null
  department_calibration_center_ends_with?: string | null
  department_calibration_center_not_ends_with?: string | null
  conformity_data?: string | null
  conformity_data_not?: string | null
  conformity_data_in?: string[]
  conformity_data_not_in?: string[]
  conformity_data_lt?: string | null
  conformity_data_lte?: string | null
  conformity_data_gt?: string | null
  conformity_data_gte?: string | null
  calibration_data?: string | null
  calibration_data_not?: string | null
  calibration_data_in?: string[]
  calibration_data_not_in?: string[]
  calibration_data_lt?: string | null
  calibration_data_lte?: string | null
  calibration_data_gt?: string | null
  calibration_data_gte?: string | null
  valid_verification?: string | null
  valid_verification_not?: string | null
  valid_verification_in?: string[]
  valid_verification_not_in?: string[]
  valid_verification_lt?: string | null
  valid_verification_lte?: string | null
  valid_verification_gt?: string | null
  valid_verification_gte?: string | null
  notes?: string | null
  notes_not?: string | null
  notes_in?: string[]
  notes_not_in?: string[]
  notes_lt?: string | null
  notes_lte?: string | null
  notes_gt?: string | null
  notes_gte?: string | null
  notes_contains?: string | null
  notes_not_contains?: string | null
  notes_starts_with?: string | null
  notes_not_starts_with?: string | null
  notes_ends_with?: string | null
  notes_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  AND?: MyDeviceScalarWhereInput[]
  OR?: MyDeviceScalarWhereInput[]
  NOT?: MyDeviceScalarWhereInput[]
}
export type MyDeviceScalarWhereInputInputObject =
  | Extract<keyof MyDeviceScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name_device', alias?: string  } 
  | { name: 'name_device_not', alias?: string  } 
  | { name: 'name_device_in', alias?: string  } 
  | { name: 'name_device_not_in', alias?: string  } 
  | { name: 'name_device_lt', alias?: string  } 
  | { name: 'name_device_lte', alias?: string  } 
  | { name: 'name_device_gt', alias?: string  } 
  | { name: 'name_device_gte', alias?: string  } 
  | { name: 'name_device_contains', alias?: string  } 
  | { name: 'name_device_not_contains', alias?: string  } 
  | { name: 'name_device_starts_with', alias?: string  } 
  | { name: 'name_device_not_starts_with', alias?: string  } 
  | { name: 'name_device_ends_with', alias?: string  } 
  | { name: 'name_device_not_ends_with', alias?: string  } 
  | { name: 'brand_device', alias?: string  } 
  | { name: 'brand_device_not', alias?: string  } 
  | { name: 'brand_device_in', alias?: string  } 
  | { name: 'brand_device_not_in', alias?: string  } 
  | { name: 'brand_device_lt', alias?: string  } 
  | { name: 'brand_device_lte', alias?: string  } 
  | { name: 'brand_device_gt', alias?: string  } 
  | { name: 'brand_device_gte', alias?: string  } 
  | { name: 'brand_device_contains', alias?: string  } 
  | { name: 'brand_device_not_contains', alias?: string  } 
  | { name: 'brand_device_starts_with', alias?: string  } 
  | { name: 'brand_device_not_starts_with', alias?: string  } 
  | { name: 'brand_device_ends_with', alias?: string  } 
  | { name: 'brand_device_not_ends_with', alias?: string  } 
  | { name: 'series_device', alias?: string  } 
  | { name: 'series_device_not', alias?: string  } 
  | { name: 'series_device_in', alias?: string  } 
  | { name: 'series_device_not_in', alias?: string  } 
  | { name: 'series_device_lt', alias?: string  } 
  | { name: 'series_device_lte', alias?: string  } 
  | { name: 'series_device_gt', alias?: string  } 
  | { name: 'series_device_gte', alias?: string  } 
  | { name: 'series_device_contains', alias?: string  } 
  | { name: 'series_device_not_contains', alias?: string  } 
  | { name: 'series_device_starts_with', alias?: string  } 
  | { name: 'series_device_not_starts_with', alias?: string  } 
  | { name: 'series_device_ends_with', alias?: string  } 
  | { name: 'series_device_not_ends_with', alias?: string  } 
  | { name: 'kind_device', alias?: string  } 
  | { name: 'kind_device_not', alias?: string  } 
  | { name: 'kind_device_in', alias?: string  } 
  | { name: 'kind_device_not_in', alias?: string  } 
  | { name: 'kind_device_lt', alias?: string  } 
  | { name: 'kind_device_lte', alias?: string  } 
  | { name: 'kind_device_gt', alias?: string  } 
  | { name: 'kind_device_gte', alias?: string  } 
  | { name: 'kind_device_contains', alias?: string  } 
  | { name: 'kind_device_not_contains', alias?: string  } 
  | { name: 'kind_device_starts_with', alias?: string  } 
  | { name: 'kind_device_not_starts_with', alias?: string  } 
  | { name: 'kind_device_ends_with', alias?: string  } 
  | { name: 'kind_device_not_ends_with', alias?: string  } 
  | { name: 'certificate_calibration', alias?: string  } 
  | { name: 'certificate_calibration_not', alias?: string  } 
  | { name: 'certificate_verification', alias?: string  } 
  | { name: 'certificate_verification_not', alias?: string  } 
  | { name: 'certificate_conformity', alias?: string  } 
  | { name: 'certificate_conformity_not', alias?: string  } 
  | { name: 'module_device', alias?: string  } 
  | { name: 'module_device_not', alias?: string  } 
  | { name: 'module_device_in', alias?: string  } 
  | { name: 'module_device_not_in', alias?: string  } 
  | { name: 'module_device_lt', alias?: string  } 
  | { name: 'module_device_lte', alias?: string  } 
  | { name: 'module_device_gt', alias?: string  } 
  | { name: 'module_device_gte', alias?: string  } 
  | { name: 'module_device_contains', alias?: string  } 
  | { name: 'module_device_not_contains', alias?: string  } 
  | { name: 'module_device_starts_with', alias?: string  } 
  | { name: 'module_device_not_starts_with', alias?: string  } 
  | { name: 'module_device_ends_with', alias?: string  } 
  | { name: 'module_device_not_ends_with', alias?: string  } 
  | { name: 'tr_device', alias?: string  } 
  | { name: 'tr_device_not', alias?: string  } 
  | { name: 'tr_device_in', alias?: string  } 
  | { name: 'tr_device_not_in', alias?: string  } 
  | { name: 'tr_device_lt', alias?: string  } 
  | { name: 'tr_device_lte', alias?: string  } 
  | { name: 'tr_device_gt', alias?: string  } 
  | { name: 'tr_device_gte', alias?: string  } 
  | { name: 'tr_device_contains', alias?: string  } 
  | { name: 'tr_device_not_contains', alias?: string  } 
  | { name: 'tr_device_starts_with', alias?: string  } 
  | { name: 'tr_device_not_starts_with', alias?: string  } 
  | { name: 'tr_device_ends_with', alias?: string  } 
  | { name: 'tr_device_not_ends_with', alias?: string  } 
  | { name: 'certificate_assessment_number', alias?: string  } 
  | { name: 'certificate_assessment_number_not', alias?: string  } 
  | { name: 'certificate_assessment_number_in', alias?: string  } 
  | { name: 'certificate_assessment_number_not_in', alias?: string  } 
  | { name: 'certificate_assessment_number_lt', alias?: string  } 
  | { name: 'certificate_assessment_number_lte', alias?: string  } 
  | { name: 'certificate_assessment_number_gt', alias?: string  } 
  | { name: 'certificate_assessment_number_gte', alias?: string  } 
  | { name: 'certificate_assessment_number_contains', alias?: string  } 
  | { name: 'certificate_assessment_number_not_contains', alias?: string  } 
  | { name: 'certificate_assessment_number_starts_with', alias?: string  } 
  | { name: 'certificate_assessment_number_not_starts_with', alias?: string  } 
  | { name: 'certificate_assessment_number_ends_with', alias?: string  } 
  | { name: 'certificate_assessment_number_not_ends_with', alias?: string  } 
  | { name: 'certificate_verification_number', alias?: string  } 
  | { name: 'certificate_verification_number_not', alias?: string  } 
  | { name: 'certificate_verification_number_in', alias?: string  } 
  | { name: 'certificate_verification_number_not_in', alias?: string  } 
  | { name: 'certificate_verification_number_lt', alias?: string  } 
  | { name: 'certificate_verification_number_lte', alias?: string  } 
  | { name: 'certificate_verification_number_gt', alias?: string  } 
  | { name: 'certificate_verification_number_gte', alias?: string  } 
  | { name: 'certificate_verification_number_contains', alias?: string  } 
  | { name: 'certificate_verification_number_not_contains', alias?: string  } 
  | { name: 'certificate_verification_number_starts_with', alias?: string  } 
  | { name: 'certificate_verification_number_not_starts_with', alias?: string  } 
  | { name: 'certificate_verification_number_ends_with', alias?: string  } 
  | { name: 'certificate_verification_number_not_ends_with', alias?: string  } 
  | { name: 'certificate_calibration_number', alias?: string  } 
  | { name: 'certificate_calibration_number_not', alias?: string  } 
  | { name: 'certificate_calibration_number_in', alias?: string  } 
  | { name: 'certificate_calibration_number_not_in', alias?: string  } 
  | { name: 'certificate_calibration_number_lt', alias?: string  } 
  | { name: 'certificate_calibration_number_lte', alias?: string  } 
  | { name: 'certificate_calibration_number_gt', alias?: string  } 
  | { name: 'certificate_calibration_number_gte', alias?: string  } 
  | { name: 'certificate_calibration_number_contains', alias?: string  } 
  | { name: 'certificate_calibration_number_not_contains', alias?: string  } 
  | { name: 'certificate_calibration_number_starts_with', alias?: string  } 
  | { name: 'certificate_calibration_number_not_starts_with', alias?: string  } 
  | { name: 'certificate_calibration_number_ends_with', alias?: string  } 
  | { name: 'certificate_calibration_number_not_ends_with', alias?: string  } 
  | { name: 'department_assessment_center', alias?: string  } 
  | { name: 'department_assessment_center_not', alias?: string  } 
  | { name: 'department_assessment_center_in', alias?: string  } 
  | { name: 'department_assessment_center_not_in', alias?: string  } 
  | { name: 'department_assessment_center_lt', alias?: string  } 
  | { name: 'department_assessment_center_lte', alias?: string  } 
  | { name: 'department_assessment_center_gt', alias?: string  } 
  | { name: 'department_assessment_center_gte', alias?: string  } 
  | { name: 'department_assessment_center_contains', alias?: string  } 
  | { name: 'department_assessment_center_not_contains', alias?: string  } 
  | { name: 'department_assessment_center_starts_with', alias?: string  } 
  | { name: 'department_assessment_center_not_starts_with', alias?: string  } 
  | { name: 'department_assessment_center_ends_with', alias?: string  } 
  | { name: 'department_assessment_center_not_ends_with', alias?: string  } 
  | { name: 'department_verification_center', alias?: string  } 
  | { name: 'department_verification_center_not', alias?: string  } 
  | { name: 'department_verification_center_in', alias?: string  } 
  | { name: 'department_verification_center_not_in', alias?: string  } 
  | { name: 'department_verification_center_lt', alias?: string  } 
  | { name: 'department_verification_center_lte', alias?: string  } 
  | { name: 'department_verification_center_gt', alias?: string  } 
  | { name: 'department_verification_center_gte', alias?: string  } 
  | { name: 'department_verification_center_contains', alias?: string  } 
  | { name: 'department_verification_center_not_contains', alias?: string  } 
  | { name: 'department_verification_center_starts_with', alias?: string  } 
  | { name: 'department_verification_center_not_starts_with', alias?: string  } 
  | { name: 'department_verification_center_ends_with', alias?: string  } 
  | { name: 'department_verification_center_not_ends_with', alias?: string  } 
  | { name: 'department_calibration_center', alias?: string  } 
  | { name: 'department_calibration_center_not', alias?: string  } 
  | { name: 'department_calibration_center_in', alias?: string  } 
  | { name: 'department_calibration_center_not_in', alias?: string  } 
  | { name: 'department_calibration_center_lt', alias?: string  } 
  | { name: 'department_calibration_center_lte', alias?: string  } 
  | { name: 'department_calibration_center_gt', alias?: string  } 
  | { name: 'department_calibration_center_gte', alias?: string  } 
  | { name: 'department_calibration_center_contains', alias?: string  } 
  | { name: 'department_calibration_center_not_contains', alias?: string  } 
  | { name: 'department_calibration_center_starts_with', alias?: string  } 
  | { name: 'department_calibration_center_not_starts_with', alias?: string  } 
  | { name: 'department_calibration_center_ends_with', alias?: string  } 
  | { name: 'department_calibration_center_not_ends_with', alias?: string  } 
  | { name: 'conformity_data', alias?: string  } 
  | { name: 'conformity_data_not', alias?: string  } 
  | { name: 'conformity_data_in', alias?: string  } 
  | { name: 'conformity_data_not_in', alias?: string  } 
  | { name: 'conformity_data_lt', alias?: string  } 
  | { name: 'conformity_data_lte', alias?: string  } 
  | { name: 'conformity_data_gt', alias?: string  } 
  | { name: 'conformity_data_gte', alias?: string  } 
  | { name: 'calibration_data', alias?: string  } 
  | { name: 'calibration_data_not', alias?: string  } 
  | { name: 'calibration_data_in', alias?: string  } 
  | { name: 'calibration_data_not_in', alias?: string  } 
  | { name: 'calibration_data_lt', alias?: string  } 
  | { name: 'calibration_data_lte', alias?: string  } 
  | { name: 'calibration_data_gt', alias?: string  } 
  | { name: 'calibration_data_gte', alias?: string  } 
  | { name: 'valid_verification', alias?: string  } 
  | { name: 'valid_verification_not', alias?: string  } 
  | { name: 'valid_verification_in', alias?: string  } 
  | { name: 'valid_verification_not_in', alias?: string  } 
  | { name: 'valid_verification_lt', alias?: string  } 
  | { name: 'valid_verification_lte', alias?: string  } 
  | { name: 'valid_verification_gt', alias?: string  } 
  | { name: 'valid_verification_gte', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'notes_not', alias?: string  } 
  | { name: 'notes_in', alias?: string  } 
  | { name: 'notes_not_in', alias?: string  } 
  | { name: 'notes_lt', alias?: string  } 
  | { name: 'notes_lte', alias?: string  } 
  | { name: 'notes_gt', alias?: string  } 
  | { name: 'notes_gte', alias?: string  } 
  | { name: 'notes_contains', alias?: string  } 
  | { name: 'notes_not_contains', alias?: string  } 
  | { name: 'notes_starts_with', alias?: string  } 
  | { name: 'notes_not_starts_with', alias?: string  } 
  | { name: 'notes_ends_with', alias?: string  } 
  | { name: 'notes_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MyDeviceUpdateManyWithWhereNestedInput {
  where?: MyDeviceScalarWhereInput
  data?: MyDeviceUpdateManyDataInput
}
export type MyDeviceUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MyDeviceUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MyDeviceUpdateManyDataInput {
  name_device?: string | null
  brand_device?: string | null
  series_device?: string | null
  kind_device?: string | null
  certificate_calibration?: boolean | null
  certificate_verification?: boolean | null
  certificate_conformity?: boolean | null
  module_device?: string | null
  tr_device?: string | null
  certificate_assessment_number?: string | null
  certificate_verification_number?: string | null
  certificate_calibration_number?: string | null
  department_assessment_center?: string | null
  department_verification_center?: string | null
  department_calibration_center?: string | null
  conformity_data?: string | null
  calibration_data?: string | null
  valid_verification?: string | null
  notes?: string | null
}
export type MyDeviceUpdateManyDataInputInputObject =
  | Extract<keyof MyDeviceUpdateManyDataInput, string>
  | { name: 'name_device', alias?: string  } 
  | { name: 'brand_device', alias?: string  } 
  | { name: 'series_device', alias?: string  } 
  | { name: 'kind_device', alias?: string  } 
  | { name: 'certificate_calibration', alias?: string  } 
  | { name: 'certificate_verification', alias?: string  } 
  | { name: 'certificate_conformity', alias?: string  } 
  | { name: 'module_device', alias?: string  } 
  | { name: 'tr_device', alias?: string  } 
  | { name: 'certificate_assessment_number', alias?: string  } 
  | { name: 'certificate_verification_number', alias?: string  } 
  | { name: 'certificate_calibration_number', alias?: string  } 
  | { name: 'department_assessment_center', alias?: string  } 
  | { name: 'department_verification_center', alias?: string  } 
  | { name: 'department_calibration_center', alias?: string  } 
  | { name: 'conformity_data', alias?: string  } 
  | { name: 'calibration_data', alias?: string  } 
  | { name: 'valid_verification', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  
export interface AppointmentsUpdateManyWithoutAuthorInput {
  create?: AppointmentsCreateWithoutAuthorInput[]
  delete?: AppointmentsWhereUniqueInput[]
  connect?: AppointmentsWhereUniqueInput[]
  set?: AppointmentsWhereUniqueInput[]
  disconnect?: AppointmentsWhereUniqueInput[]
  update?: AppointmentsUpdateWithWhereUniqueWithoutAuthorInput[]
  upsert?: AppointmentsUpsertWithWhereUniqueWithoutAuthorInput[]
  deleteMany?: AppointmentsScalarWhereInput[]
  updateMany?: AppointmentsUpdateManyWithWhereNestedInput[]
}
export type AppointmentsUpdateManyWithoutAuthorInputInputObject =
  | Extract<keyof AppointmentsUpdateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface AppointmentsUpdateWithWhereUniqueWithoutAuthorInput {
  where?: AppointmentsWhereUniqueInput
  data?: AppointmentsUpdateWithoutAuthorDataInput
}
export type AppointmentsUpdateWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof AppointmentsUpdateWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface AppointmentsUpdateWithoutAuthorDataInput {
  title?: string | null
  start_date?: string | null
  end_date?: string | null
  location?: string | null
  notes?: string | null
}
export type AppointmentsUpdateWithoutAuthorDataInputInputObject =
  | Extract<keyof AppointmentsUpdateWithoutAuthorDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'start_date', alias?: string  } 
  | { name: 'end_date', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  
export interface AppointmentsUpsertWithWhereUniqueWithoutAuthorInput {
  where?: AppointmentsWhereUniqueInput
  update?: AppointmentsUpdateWithoutAuthorDataInput
  create?: AppointmentsCreateWithoutAuthorInput
}
export type AppointmentsUpsertWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof AppointmentsUpsertWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AppointmentsScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  start_date?: string | null
  start_date_not?: string | null
  start_date_in?: string[]
  start_date_not_in?: string[]
  start_date_lt?: string | null
  start_date_lte?: string | null
  start_date_gt?: string | null
  start_date_gte?: string | null
  end_date?: string | null
  end_date_not?: string | null
  end_date_in?: string[]
  end_date_not_in?: string[]
  end_date_lt?: string | null
  end_date_lte?: string | null
  end_date_gt?: string | null
  end_date_gte?: string | null
  location?: string | null
  location_not?: string | null
  location_in?: string[]
  location_not_in?: string[]
  location_lt?: string | null
  location_lte?: string | null
  location_gt?: string | null
  location_gte?: string | null
  location_contains?: string | null
  location_not_contains?: string | null
  location_starts_with?: string | null
  location_not_starts_with?: string | null
  location_ends_with?: string | null
  location_not_ends_with?: string | null
  notes?: string | null
  notes_not?: string | null
  notes_in?: string[]
  notes_not_in?: string[]
  notes_lt?: string | null
  notes_lte?: string | null
  notes_gt?: string | null
  notes_gte?: string | null
  notes_contains?: string | null
  notes_not_contains?: string | null
  notes_starts_with?: string | null
  notes_not_starts_with?: string | null
  notes_ends_with?: string | null
  notes_not_ends_with?: string | null
  AND?: AppointmentsScalarWhereInput[]
  OR?: AppointmentsScalarWhereInput[]
  NOT?: AppointmentsScalarWhereInput[]
}
export type AppointmentsScalarWhereInputInputObject =
  | Extract<keyof AppointmentsScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'start_date', alias?: string  } 
  | { name: 'start_date_not', alias?: string  } 
  | { name: 'start_date_in', alias?: string  } 
  | { name: 'start_date_not_in', alias?: string  } 
  | { name: 'start_date_lt', alias?: string  } 
  | { name: 'start_date_lte', alias?: string  } 
  | { name: 'start_date_gt', alias?: string  } 
  | { name: 'start_date_gte', alias?: string  } 
  | { name: 'end_date', alias?: string  } 
  | { name: 'end_date_not', alias?: string  } 
  | { name: 'end_date_in', alias?: string  } 
  | { name: 'end_date_not_in', alias?: string  } 
  | { name: 'end_date_lt', alias?: string  } 
  | { name: 'end_date_lte', alias?: string  } 
  | { name: 'end_date_gt', alias?: string  } 
  | { name: 'end_date_gte', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'location_not', alias?: string  } 
  | { name: 'location_in', alias?: string  } 
  | { name: 'location_not_in', alias?: string  } 
  | { name: 'location_lt', alias?: string  } 
  | { name: 'location_lte', alias?: string  } 
  | { name: 'location_gt', alias?: string  } 
  | { name: 'location_gte', alias?: string  } 
  | { name: 'location_contains', alias?: string  } 
  | { name: 'location_not_contains', alias?: string  } 
  | { name: 'location_starts_with', alias?: string  } 
  | { name: 'location_not_starts_with', alias?: string  } 
  | { name: 'location_ends_with', alias?: string  } 
  | { name: 'location_not_ends_with', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'notes_not', alias?: string  } 
  | { name: 'notes_in', alias?: string  } 
  | { name: 'notes_not_in', alias?: string  } 
  | { name: 'notes_lt', alias?: string  } 
  | { name: 'notes_lte', alias?: string  } 
  | { name: 'notes_gt', alias?: string  } 
  | { name: 'notes_gte', alias?: string  } 
  | { name: 'notes_contains', alias?: string  } 
  | { name: 'notes_not_contains', alias?: string  } 
  | { name: 'notes_starts_with', alias?: string  } 
  | { name: 'notes_not_starts_with', alias?: string  } 
  | { name: 'notes_ends_with', alias?: string  } 
  | { name: 'notes_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AppointmentsUpdateManyWithWhereNestedInput {
  where?: AppointmentsScalarWhereInput
  data?: AppointmentsUpdateManyDataInput
}
export type AppointmentsUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof AppointmentsUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface AppointmentsUpdateManyDataInput {
  title?: string | null
  start_date?: string | null
  end_date?: string | null
  location?: string | null
  notes?: string | null
}
export type AppointmentsUpdateManyDataInputInputObject =
  | Extract<keyof AppointmentsUpdateManyDataInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'start_date', alias?: string  } 
  | { name: 'end_date', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  
export interface TeamUpdateManyWithoutAuthorInput {
  create?: TeamCreateWithoutAuthorInput[]
  delete?: TeamWhereUniqueInput[]
  connect?: TeamWhereUniqueInput[]
  set?: TeamWhereUniqueInput[]
  disconnect?: TeamWhereUniqueInput[]
  update?: TeamUpdateWithWhereUniqueWithoutAuthorInput[]
  upsert?: TeamUpsertWithWhereUniqueWithoutAuthorInput[]
  deleteMany?: TeamScalarWhereInput[]
  updateMany?: TeamUpdateManyWithWhereNestedInput[]
}
export type TeamUpdateManyWithoutAuthorInputInputObject =
  | Extract<keyof TeamUpdateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface TeamUpdateWithWhereUniqueWithoutAuthorInput {
  where?: TeamWhereUniqueInput
  data?: TeamUpdateWithoutAuthorDataInput
}
export type TeamUpdateWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof TeamUpdateWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface TeamUpdateWithoutAuthorDataInput {
  name?: string | null
  teamMembers?: TeamMembersUpdateManyWithoutTeamInput | null
  payment?: boolean | null
  role?: prisma.Role | null
}
export type TeamUpdateWithoutAuthorDataInputInputObject =
  | Extract<keyof TeamUpdateWithoutAuthorDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'teamMembers', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface TeamMembersUpdateManyWithoutTeamInput {
  create?: TeamMembersCreateWithoutTeamInput[]
  delete?: TeamMembersWhereUniqueInput[]
  connect?: TeamMembersWhereUniqueInput[]
  set?: TeamMembersWhereUniqueInput[]
  disconnect?: TeamMembersWhereUniqueInput[]
  update?: TeamMembersUpdateWithWhereUniqueWithoutTeamInput[]
  upsert?: TeamMembersUpsertWithWhereUniqueWithoutTeamInput[]
  deleteMany?: TeamMembersScalarWhereInput[]
  updateMany?: TeamMembersUpdateManyWithWhereNestedInput[]
}
export type TeamMembersUpdateManyWithoutTeamInputInputObject =
  | Extract<keyof TeamMembersUpdateManyWithoutTeamInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface TeamMembersUpdateWithWhereUniqueWithoutTeamInput {
  where?: TeamMembersWhereUniqueInput
  data?: TeamMembersUpdateWithoutTeamDataInput
}
export type TeamMembersUpdateWithWhereUniqueWithoutTeamInputInputObject =
  | Extract<keyof TeamMembersUpdateWithWhereUniqueWithoutTeamInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface TeamMembersUpdateWithoutTeamDataInput {
  emailMembers?: string | null
  member?: prisma.Members | null
  memberConfirmed?: boolean | null
  memberConfirmToken?: string | null
}
export type TeamMembersUpdateWithoutTeamDataInputInputObject =
  | Extract<keyof TeamMembersUpdateWithoutTeamDataInput, string>
  | { name: 'emailMembers', alias?: string  } 
  | { name: 'member', alias?: string  } 
  | { name: 'memberConfirmed', alias?: string  } 
  | { name: 'memberConfirmToken', alias?: string  } 
  
export interface TeamMembersUpsertWithWhereUniqueWithoutTeamInput {
  where?: TeamMembersWhereUniqueInput
  update?: TeamMembersUpdateWithoutTeamDataInput
  create?: TeamMembersCreateWithoutTeamInput
}
export type TeamMembersUpsertWithWhereUniqueWithoutTeamInputInputObject =
  | Extract<keyof TeamMembersUpsertWithWhereUniqueWithoutTeamInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface TeamMembersScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  emailMembers?: string | null
  emailMembers_not?: string | null
  emailMembers_in?: string[]
  emailMembers_not_in?: string[]
  emailMembers_lt?: string | null
  emailMembers_lte?: string | null
  emailMembers_gt?: string | null
  emailMembers_gte?: string | null
  emailMembers_contains?: string | null
  emailMembers_not_contains?: string | null
  emailMembers_starts_with?: string | null
  emailMembers_not_starts_with?: string | null
  emailMembers_ends_with?: string | null
  emailMembers_not_ends_with?: string | null
  member?: prisma.Members | null
  member_not?: prisma.Members | null
  member_in?: prisma.Members[]
  member_not_in?: prisma.Members[]
  memberConfirmed?: boolean | null
  memberConfirmed_not?: boolean | null
  memberConfirmToken?: string | null
  memberConfirmToken_not?: string | null
  memberConfirmToken_in?: string[]
  memberConfirmToken_not_in?: string[]
  memberConfirmToken_lt?: string | null
  memberConfirmToken_lte?: string | null
  memberConfirmToken_gt?: string | null
  memberConfirmToken_gte?: string | null
  memberConfirmToken_contains?: string | null
  memberConfirmToken_not_contains?: string | null
  memberConfirmToken_starts_with?: string | null
  memberConfirmToken_not_starts_with?: string | null
  memberConfirmToken_ends_with?: string | null
  memberConfirmToken_not_ends_with?: string | null
  AND?: TeamMembersScalarWhereInput[]
  OR?: TeamMembersScalarWhereInput[]
  NOT?: TeamMembersScalarWhereInput[]
}
export type TeamMembersScalarWhereInputInputObject =
  | Extract<keyof TeamMembersScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'emailMembers', alias?: string  } 
  | { name: 'emailMembers_not', alias?: string  } 
  | { name: 'emailMembers_in', alias?: string  } 
  | { name: 'emailMembers_not_in', alias?: string  } 
  | { name: 'emailMembers_lt', alias?: string  } 
  | { name: 'emailMembers_lte', alias?: string  } 
  | { name: 'emailMembers_gt', alias?: string  } 
  | { name: 'emailMembers_gte', alias?: string  } 
  | { name: 'emailMembers_contains', alias?: string  } 
  | { name: 'emailMembers_not_contains', alias?: string  } 
  | { name: 'emailMembers_starts_with', alias?: string  } 
  | { name: 'emailMembers_not_starts_with', alias?: string  } 
  | { name: 'emailMembers_ends_with', alias?: string  } 
  | { name: 'emailMembers_not_ends_with', alias?: string  } 
  | { name: 'member', alias?: string  } 
  | { name: 'member_not', alias?: string  } 
  | { name: 'member_in', alias?: string  } 
  | { name: 'member_not_in', alias?: string  } 
  | { name: 'memberConfirmed', alias?: string  } 
  | { name: 'memberConfirmed_not', alias?: string  } 
  | { name: 'memberConfirmToken', alias?: string  } 
  | { name: 'memberConfirmToken_not', alias?: string  } 
  | { name: 'memberConfirmToken_in', alias?: string  } 
  | { name: 'memberConfirmToken_not_in', alias?: string  } 
  | { name: 'memberConfirmToken_lt', alias?: string  } 
  | { name: 'memberConfirmToken_lte', alias?: string  } 
  | { name: 'memberConfirmToken_gt', alias?: string  } 
  | { name: 'memberConfirmToken_gte', alias?: string  } 
  | { name: 'memberConfirmToken_contains', alias?: string  } 
  | { name: 'memberConfirmToken_not_contains', alias?: string  } 
  | { name: 'memberConfirmToken_starts_with', alias?: string  } 
  | { name: 'memberConfirmToken_not_starts_with', alias?: string  } 
  | { name: 'memberConfirmToken_ends_with', alias?: string  } 
  | { name: 'memberConfirmToken_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TeamMembersUpdateManyWithWhereNestedInput {
  where?: TeamMembersScalarWhereInput
  data?: TeamMembersUpdateManyDataInput
}
export type TeamMembersUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof TeamMembersUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface TeamMembersUpdateManyDataInput {
  emailMembers?: string | null
  member?: prisma.Members | null
  memberConfirmed?: boolean | null
  memberConfirmToken?: string | null
}
export type TeamMembersUpdateManyDataInputInputObject =
  | Extract<keyof TeamMembersUpdateManyDataInput, string>
  | { name: 'emailMembers', alias?: string  } 
  | { name: 'member', alias?: string  } 
  | { name: 'memberConfirmed', alias?: string  } 
  | { name: 'memberConfirmToken', alias?: string  } 
  
export interface TeamUpsertWithWhereUniqueWithoutAuthorInput {
  where?: TeamWhereUniqueInput
  update?: TeamUpdateWithoutAuthorDataInput
  create?: TeamCreateWithoutAuthorInput
}
export type TeamUpsertWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof TeamUpsertWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface TeamScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  payment?: boolean | null
  payment_not?: boolean | null
  role?: prisma.Role | null
  role_not?: prisma.Role | null
  role_in?: prisma.Role[]
  role_not_in?: prisma.Role[]
  AND?: TeamScalarWhereInput[]
  OR?: TeamScalarWhereInput[]
  NOT?: TeamScalarWhereInput[]
}
export type TeamScalarWhereInputInputObject =
  | Extract<keyof TeamScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'payment_not', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'role_not', alias?: string  } 
  | { name: 'role_in', alias?: string  } 
  | { name: 'role_not_in', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TeamUpdateManyWithWhereNestedInput {
  where?: TeamScalarWhereInput
  data?: TeamUpdateManyDataInput
}
export type TeamUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof TeamUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface TeamUpdateManyDataInput {
  name?: string | null
  payment?: boolean | null
  role?: prisma.Role | null
}
export type TeamUpdateManyDataInputInputObject =
  | Extract<keyof TeamUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface UserUpsertWithoutPostsInput {
  update?: UserUpdateWithoutPostsDataInput
  create?: UserCreateWithoutPostsInput
}
export type UserUpsertWithoutPostsInputInputObject =
  | Extract<keyof UserUpsertWithoutPostsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PostUpdateManyMutationInput {
  published?: boolean | null
  title?: string | null
  content?: string | null
}
export type PostUpdateManyMutationInputInputObject =
  | Extract<keyof PostUpdateManyMutationInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface UserCreateInput {
  id?: string | null
  email?: string
  password?: string
  name?: string
  companyName?: string | null
  country?: string | null
  posts?: PostCreateManyWithoutAuthorInput | null
  mydevices?: MyDeviceCreateManyWithoutAuthorInput | null
  appointments?: AppointmentsCreateManyWithoutAuthorInput | null
  emailConfirmed?: boolean
  emailConfirmToken?: string
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string
  teams?: TeamCreateManyWithoutAuthorInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'posts', alias?: string  } 
  | { name: 'mydevices', alias?: string  } 
  | { name: 'appointments', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  | { name: 'teams', alias?: string  } 
  
export interface PostCreateManyWithoutAuthorInput {
  create?: PostCreateWithoutAuthorInput[]
  connect?: PostWhereUniqueInput[]
}
export type PostCreateManyWithoutAuthorInputInputObject =
  | Extract<keyof PostCreateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PostCreateWithoutAuthorInput {
  id?: string | null
  published?: boolean | null
  title?: string
  content?: string
}
export type PostCreateWithoutAuthorInputInputObject =
  | Extract<keyof PostCreateWithoutAuthorInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface UserUpdateInput {
  email?: string | null
  password?: string | null
  name?: string | null
  companyName?: string | null
  country?: string | null
  posts?: PostUpdateManyWithoutAuthorInput | null
  mydevices?: MyDeviceUpdateManyWithoutAuthorInput | null
  appointments?: AppointmentsUpdateManyWithoutAuthorInput | null
  emailConfirmed?: boolean | null
  emailConfirmToken?: string | null
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string | null
  teams?: TeamUpdateManyWithoutAuthorInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'posts', alias?: string  } 
  | { name: 'mydevices', alias?: string  } 
  | { name: 'appointments', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  | { name: 'teams', alias?: string  } 
  
export interface PostUpdateManyWithoutAuthorInput {
  create?: PostCreateWithoutAuthorInput[]
  delete?: PostWhereUniqueInput[]
  connect?: PostWhereUniqueInput[]
  set?: PostWhereUniqueInput[]
  disconnect?: PostWhereUniqueInput[]
  update?: PostUpdateWithWhereUniqueWithoutAuthorInput[]
  upsert?: PostUpsertWithWhereUniqueWithoutAuthorInput[]
  deleteMany?: PostScalarWhereInput[]
  updateMany?: PostUpdateManyWithWhereNestedInput[]
}
export type PostUpdateManyWithoutAuthorInputInputObject =
  | Extract<keyof PostUpdateManyWithoutAuthorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface PostUpdateWithWhereUniqueWithoutAuthorInput {
  where?: PostWhereUniqueInput
  data?: PostUpdateWithoutAuthorDataInput
}
export type PostUpdateWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof PostUpdateWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PostUpdateWithoutAuthorDataInput {
  published?: boolean | null
  title?: string | null
  content?: string | null
}
export type PostUpdateWithoutAuthorDataInputInputObject =
  | Extract<keyof PostUpdateWithoutAuthorDataInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface PostUpsertWithWhereUniqueWithoutAuthorInput {
  where?: PostWhereUniqueInput
  update?: PostUpdateWithoutAuthorDataInput
  create?: PostCreateWithoutAuthorInput
}
export type PostUpsertWithWhereUniqueWithoutAuthorInputInputObject =
  | Extract<keyof PostUpsertWithWhereUniqueWithoutAuthorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PostScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  published?: boolean | null
  published_not?: boolean | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  content?: string | null
  content_not?: string | null
  content_in?: string[]
  content_not_in?: string[]
  content_lt?: string | null
  content_lte?: string | null
  content_gt?: string | null
  content_gte?: string | null
  content_contains?: string | null
  content_not_contains?: string | null
  content_starts_with?: string | null
  content_not_starts_with?: string | null
  content_ends_with?: string | null
  content_not_ends_with?: string | null
  AND?: PostScalarWhereInput[]
  OR?: PostScalarWhereInput[]
  NOT?: PostScalarWhereInput[]
}
export type PostScalarWhereInputInputObject =
  | Extract<keyof PostScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'content', alias?: string  } 
  | { name: 'content_not', alias?: string  } 
  | { name: 'content_in', alias?: string  } 
  | { name: 'content_not_in', alias?: string  } 
  | { name: 'content_lt', alias?: string  } 
  | { name: 'content_lte', alias?: string  } 
  | { name: 'content_gt', alias?: string  } 
  | { name: 'content_gte', alias?: string  } 
  | { name: 'content_contains', alias?: string  } 
  | { name: 'content_not_contains', alias?: string  } 
  | { name: 'content_starts_with', alias?: string  } 
  | { name: 'content_not_starts_with', alias?: string  } 
  | { name: 'content_ends_with', alias?: string  } 
  | { name: 'content_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PostUpdateManyWithWhereNestedInput {
  where?: PostScalarWhereInput
  data?: PostUpdateManyDataInput
}
export type PostUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof PostUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PostUpdateManyDataInput {
  published?: boolean | null
  title?: string | null
  content?: string | null
}
export type PostUpdateManyDataInputInputObject =
  | Extract<keyof PostUpdateManyDataInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'content', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  email?: string | null
  password?: string | null
  name?: string | null
  companyName?: string | null
  country?: string | null
  emailConfirmed?: boolean | null
  emailConfirmToken?: string | null
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  
export interface DeviceCreateInput {
  id?: string | null
  published?: boolean | null
  name_EN?: string
  name_UA?: string
  name_RUS?: string | null
  module?: string | null
  tr?: TRCreateOneWithoutDevice_idInput
  dtc?: DTCCreateOneWithoutDevice_idInput
}
export type DeviceCreateInputInputObject =
  | Extract<keyof DeviceCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'module', alias?: string  } 
  | { name: 'tr', alias?: string  } 
  | { name: 'dtc', alias?: string  } 
  
export interface TRCreateOneWithoutDevice_idInput {
  create?: TRCreateWithoutDevice_idInput | null
  connect?: TRWhereUniqueInput | null
}
export type TRCreateOneWithoutDevice_idInputInputObject =
  | Extract<keyof TRCreateOneWithoutDevice_idInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TRCreateWithoutDevice_idInput {
  id?: string | null
  name_TR_UA?: string
  name_TR_EN?: string
}
export type TRCreateWithoutDevice_idInputInputObject =
  | Extract<keyof TRCreateWithoutDevice_idInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name_TR_UA', alias?: string  } 
  | { name: 'name_TR_EN', alias?: string  } 
  
export interface DTCCreateOneWithoutDevice_idInput {
  create?: DTCCreateWithoutDevice_idInput | null
  connect?: DTCWhereUniqueInput | null
}
export type DTCCreateOneWithoutDevice_idInputInputObject =
  | Extract<keyof DTCCreateOneWithoutDevice_idInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DTCCreateWithoutDevice_idInput {
  id?: string | null
  name_UA?: string
  name_EN?: string
}
export type DTCCreateWithoutDevice_idInputInputObject =
  | Extract<keyof DTCCreateWithoutDevice_idInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  
export interface DeviceUpdateInput {
  published?: boolean | null
  name_EN?: string | null
  name_UA?: string | null
  name_RUS?: string | null
  module?: string | null
  tr?: TRUpdateOneRequiredWithoutDevice_idInput | null
  dtc?: DTCUpdateOneRequiredWithoutDevice_idInput | null
}
export type DeviceUpdateInputInputObject =
  | Extract<keyof DeviceUpdateInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'module', alias?: string  } 
  | { name: 'tr', alias?: string  } 
  | { name: 'dtc', alias?: string  } 
  
export interface TRUpdateOneRequiredWithoutDevice_idInput {
  create?: TRCreateWithoutDevice_idInput | null
  update?: TRUpdateWithoutDevice_idDataInput | null
  upsert?: TRUpsertWithoutDevice_idInput | null
  connect?: TRWhereUniqueInput | null
}
export type TRUpdateOneRequiredWithoutDevice_idInputInputObject =
  | Extract<keyof TRUpdateOneRequiredWithoutDevice_idInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TRUpdateWithoutDevice_idDataInput {
  name_TR_UA?: string | null
  name_TR_EN?: string | null
}
export type TRUpdateWithoutDevice_idDataInputInputObject =
  | Extract<keyof TRUpdateWithoutDevice_idDataInput, string>
  | { name: 'name_TR_UA', alias?: string  } 
  | { name: 'name_TR_EN', alias?: string  } 
  
export interface TRUpsertWithoutDevice_idInput {
  update?: TRUpdateWithoutDevice_idDataInput
  create?: TRCreateWithoutDevice_idInput
}
export type TRUpsertWithoutDevice_idInputInputObject =
  | Extract<keyof TRUpsertWithoutDevice_idInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DTCUpdateOneRequiredWithoutDevice_idInput {
  create?: DTCCreateWithoutDevice_idInput | null
  update?: DTCUpdateWithoutDevice_idDataInput | null
  upsert?: DTCUpsertWithoutDevice_idInput | null
  connect?: DTCWhereUniqueInput | null
}
export type DTCUpdateOneRequiredWithoutDevice_idInputInputObject =
  | Extract<keyof DTCUpdateOneRequiredWithoutDevice_idInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DTCUpdateWithoutDevice_idDataInput {
  name_UA?: string | null
  name_EN?: string | null
}
export type DTCUpdateWithoutDevice_idDataInputInputObject =
  | Extract<keyof DTCUpdateWithoutDevice_idDataInput, string>
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  
export interface DTCUpsertWithoutDevice_idInput {
  update?: DTCUpdateWithoutDevice_idDataInput
  create?: DTCCreateWithoutDevice_idInput
}
export type DTCUpsertWithoutDevice_idInputInputObject =
  | Extract<keyof DTCUpsertWithoutDevice_idInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DeviceUpdateManyMutationInput {
  published?: boolean | null
  name_EN?: string | null
  name_UA?: string | null
  name_RUS?: string | null
  module?: string | null
}
export type DeviceUpdateManyMutationInputInputObject =
  | Extract<keyof DeviceUpdateManyMutationInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'module', alias?: string  } 
  
export interface DTCCreateInput {
  id?: string | null
  name_UA?: string
  name_EN?: string
  device_id?: DeviceCreateManyWithoutDtcInput | null
}
export type DTCCreateInputInputObject =
  | Extract<keyof DTCCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'device_id', alias?: string  } 
  
export interface DeviceCreateManyWithoutDtcInput {
  create?: DeviceCreateWithoutDtcInput[]
  connect?: DeviceWhereUniqueInput[]
}
export type DeviceCreateManyWithoutDtcInputInputObject =
  | Extract<keyof DeviceCreateManyWithoutDtcInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DeviceCreateWithoutDtcInput {
  id?: string | null
  published?: boolean | null
  name_EN?: string
  name_UA?: string
  name_RUS?: string | null
  module?: string | null
  tr?: TRCreateOneWithoutDevice_idInput
}
export type DeviceCreateWithoutDtcInputInputObject =
  | Extract<keyof DeviceCreateWithoutDtcInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'module', alias?: string  } 
  | { name: 'tr', alias?: string  } 
  
export interface DTCUpdateInput {
  name_UA?: string | null
  name_EN?: string | null
  device_id?: DeviceUpdateManyWithoutDtcInput | null
}
export type DTCUpdateInputInputObject =
  | Extract<keyof DTCUpdateInput, string>
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'device_id', alias?: string  } 
  
export interface DeviceUpdateManyWithoutDtcInput {
  create?: DeviceCreateWithoutDtcInput[]
  delete?: DeviceWhereUniqueInput[]
  connect?: DeviceWhereUniqueInput[]
  set?: DeviceWhereUniqueInput[]
  disconnect?: DeviceWhereUniqueInput[]
  update?: DeviceUpdateWithWhereUniqueWithoutDtcInput[]
  upsert?: DeviceUpsertWithWhereUniqueWithoutDtcInput[]
  deleteMany?: DeviceScalarWhereInput[]
  updateMany?: DeviceUpdateManyWithWhereNestedInput[]
}
export type DeviceUpdateManyWithoutDtcInputInputObject =
  | Extract<keyof DeviceUpdateManyWithoutDtcInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface DeviceUpdateWithWhereUniqueWithoutDtcInput {
  where?: DeviceWhereUniqueInput
  data?: DeviceUpdateWithoutDtcDataInput
}
export type DeviceUpdateWithWhereUniqueWithoutDtcInputInputObject =
  | Extract<keyof DeviceUpdateWithWhereUniqueWithoutDtcInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DeviceUpdateWithoutDtcDataInput {
  published?: boolean | null
  name_EN?: string | null
  name_UA?: string | null
  name_RUS?: string | null
  module?: string | null
  tr?: TRUpdateOneRequiredWithoutDevice_idInput | null
}
export type DeviceUpdateWithoutDtcDataInputInputObject =
  | Extract<keyof DeviceUpdateWithoutDtcDataInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'module', alias?: string  } 
  | { name: 'tr', alias?: string  } 
  
export interface DeviceUpsertWithWhereUniqueWithoutDtcInput {
  where?: DeviceWhereUniqueInput
  update?: DeviceUpdateWithoutDtcDataInput
  create?: DeviceCreateWithoutDtcInput
}
export type DeviceUpsertWithWhereUniqueWithoutDtcInputInputObject =
  | Extract<keyof DeviceUpsertWithWhereUniqueWithoutDtcInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface DeviceScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  published?: boolean | null
  published_not?: boolean | null
  name_EN?: string | null
  name_EN_not?: string | null
  name_EN_in?: string[]
  name_EN_not_in?: string[]
  name_EN_lt?: string | null
  name_EN_lte?: string | null
  name_EN_gt?: string | null
  name_EN_gte?: string | null
  name_EN_contains?: string | null
  name_EN_not_contains?: string | null
  name_EN_starts_with?: string | null
  name_EN_not_starts_with?: string | null
  name_EN_ends_with?: string | null
  name_EN_not_ends_with?: string | null
  name_UA?: string | null
  name_UA_not?: string | null
  name_UA_in?: string[]
  name_UA_not_in?: string[]
  name_UA_lt?: string | null
  name_UA_lte?: string | null
  name_UA_gt?: string | null
  name_UA_gte?: string | null
  name_UA_contains?: string | null
  name_UA_not_contains?: string | null
  name_UA_starts_with?: string | null
  name_UA_not_starts_with?: string | null
  name_UA_ends_with?: string | null
  name_UA_not_ends_with?: string | null
  name_RUS?: string | null
  name_RUS_not?: string | null
  name_RUS_in?: string[]
  name_RUS_not_in?: string[]
  name_RUS_lt?: string | null
  name_RUS_lte?: string | null
  name_RUS_gt?: string | null
  name_RUS_gte?: string | null
  name_RUS_contains?: string | null
  name_RUS_not_contains?: string | null
  name_RUS_starts_with?: string | null
  name_RUS_not_starts_with?: string | null
  name_RUS_ends_with?: string | null
  name_RUS_not_ends_with?: string | null
  module?: string | null
  module_not?: string | null
  module_in?: string[]
  module_not_in?: string[]
  module_lt?: string | null
  module_lte?: string | null
  module_gt?: string | null
  module_gte?: string | null
  module_contains?: string | null
  module_not_contains?: string | null
  module_starts_with?: string | null
  module_not_starts_with?: string | null
  module_ends_with?: string | null
  module_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: DeviceScalarWhereInput[]
  OR?: DeviceScalarWhereInput[]
  NOT?: DeviceScalarWhereInput[]
}
export type DeviceScalarWhereInputInputObject =
  | Extract<keyof DeviceScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'published_not', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_EN_not', alias?: string  } 
  | { name: 'name_EN_in', alias?: string  } 
  | { name: 'name_EN_not_in', alias?: string  } 
  | { name: 'name_EN_lt', alias?: string  } 
  | { name: 'name_EN_lte', alias?: string  } 
  | { name: 'name_EN_gt', alias?: string  } 
  | { name: 'name_EN_gte', alias?: string  } 
  | { name: 'name_EN_contains', alias?: string  } 
  | { name: 'name_EN_not_contains', alias?: string  } 
  | { name: 'name_EN_starts_with', alias?: string  } 
  | { name: 'name_EN_not_starts_with', alias?: string  } 
  | { name: 'name_EN_ends_with', alias?: string  } 
  | { name: 'name_EN_not_ends_with', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_UA_not', alias?: string  } 
  | { name: 'name_UA_in', alias?: string  } 
  | { name: 'name_UA_not_in', alias?: string  } 
  | { name: 'name_UA_lt', alias?: string  } 
  | { name: 'name_UA_lte', alias?: string  } 
  | { name: 'name_UA_gt', alias?: string  } 
  | { name: 'name_UA_gte', alias?: string  } 
  | { name: 'name_UA_contains', alias?: string  } 
  | { name: 'name_UA_not_contains', alias?: string  } 
  | { name: 'name_UA_starts_with', alias?: string  } 
  | { name: 'name_UA_not_starts_with', alias?: string  } 
  | { name: 'name_UA_ends_with', alias?: string  } 
  | { name: 'name_UA_not_ends_with', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'name_RUS_not', alias?: string  } 
  | { name: 'name_RUS_in', alias?: string  } 
  | { name: 'name_RUS_not_in', alias?: string  } 
  | { name: 'name_RUS_lt', alias?: string  } 
  | { name: 'name_RUS_lte', alias?: string  } 
  | { name: 'name_RUS_gt', alias?: string  } 
  | { name: 'name_RUS_gte', alias?: string  } 
  | { name: 'name_RUS_contains', alias?: string  } 
  | { name: 'name_RUS_not_contains', alias?: string  } 
  | { name: 'name_RUS_starts_with', alias?: string  } 
  | { name: 'name_RUS_not_starts_with', alias?: string  } 
  | { name: 'name_RUS_ends_with', alias?: string  } 
  | { name: 'name_RUS_not_ends_with', alias?: string  } 
  | { name: 'module', alias?: string  } 
  | { name: 'module_not', alias?: string  } 
  | { name: 'module_in', alias?: string  } 
  | { name: 'module_not_in', alias?: string  } 
  | { name: 'module_lt', alias?: string  } 
  | { name: 'module_lte', alias?: string  } 
  | { name: 'module_gt', alias?: string  } 
  | { name: 'module_gte', alias?: string  } 
  | { name: 'module_contains', alias?: string  } 
  | { name: 'module_not_contains', alias?: string  } 
  | { name: 'module_starts_with', alias?: string  } 
  | { name: 'module_not_starts_with', alias?: string  } 
  | { name: 'module_ends_with', alias?: string  } 
  | { name: 'module_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DeviceUpdateManyWithWhereNestedInput {
  where?: DeviceScalarWhereInput
  data?: DeviceUpdateManyDataInput
}
export type DeviceUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof DeviceUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DeviceUpdateManyDataInput {
  published?: boolean | null
  name_EN?: string | null
  name_UA?: string | null
  name_RUS?: string | null
  module?: string | null
}
export type DeviceUpdateManyDataInputInputObject =
  | Extract<keyof DeviceUpdateManyDataInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'module', alias?: string  } 
  
export interface DTCUpdateManyMutationInput {
  name_UA?: string | null
  name_EN?: string | null
}
export type DTCUpdateManyMutationInputInputObject =
  | Extract<keyof DTCUpdateManyMutationInput, string>
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  
export interface TRCreateInput {
  id?: string | null
  name_TR_UA?: string
  name_TR_EN?: string
  device_id?: DeviceCreateManyWithoutTrInput | null
}
export type TRCreateInputInputObject =
  | Extract<keyof TRCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name_TR_UA', alias?: string  } 
  | { name: 'name_TR_EN', alias?: string  } 
  | { name: 'device_id', alias?: string  } 
  
export interface DeviceCreateManyWithoutTrInput {
  create?: DeviceCreateWithoutTrInput[]
  connect?: DeviceWhereUniqueInput[]
}
export type DeviceCreateManyWithoutTrInputInputObject =
  | Extract<keyof DeviceCreateManyWithoutTrInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface DeviceCreateWithoutTrInput {
  id?: string | null
  published?: boolean | null
  name_EN?: string
  name_UA?: string
  name_RUS?: string | null
  module?: string | null
  dtc?: DTCCreateOneWithoutDevice_idInput
}
export type DeviceCreateWithoutTrInputInputObject =
  | Extract<keyof DeviceCreateWithoutTrInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'published', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'module', alias?: string  } 
  | { name: 'dtc', alias?: string  } 
  
export interface TRUpdateInput {
  name_TR_UA?: string | null
  name_TR_EN?: string | null
  device_id?: DeviceUpdateManyWithoutTrInput | null
}
export type TRUpdateInputInputObject =
  | Extract<keyof TRUpdateInput, string>
  | { name: 'name_TR_UA', alias?: string  } 
  | { name: 'name_TR_EN', alias?: string  } 
  | { name: 'device_id', alias?: string  } 
  
export interface DeviceUpdateManyWithoutTrInput {
  create?: DeviceCreateWithoutTrInput[]
  delete?: DeviceWhereUniqueInput[]
  connect?: DeviceWhereUniqueInput[]
  set?: DeviceWhereUniqueInput[]
  disconnect?: DeviceWhereUniqueInput[]
  update?: DeviceUpdateWithWhereUniqueWithoutTrInput[]
  upsert?: DeviceUpsertWithWhereUniqueWithoutTrInput[]
  deleteMany?: DeviceScalarWhereInput[]
  updateMany?: DeviceUpdateManyWithWhereNestedInput[]
}
export type DeviceUpdateManyWithoutTrInputInputObject =
  | Extract<keyof DeviceUpdateManyWithoutTrInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface DeviceUpdateWithWhereUniqueWithoutTrInput {
  where?: DeviceWhereUniqueInput
  data?: DeviceUpdateWithoutTrDataInput
}
export type DeviceUpdateWithWhereUniqueWithoutTrInputInputObject =
  | Extract<keyof DeviceUpdateWithWhereUniqueWithoutTrInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface DeviceUpdateWithoutTrDataInput {
  published?: boolean | null
  name_EN?: string | null
  name_UA?: string | null
  name_RUS?: string | null
  module?: string | null
  dtc?: DTCUpdateOneRequiredWithoutDevice_idInput | null
}
export type DeviceUpdateWithoutTrDataInputInputObject =
  | Extract<keyof DeviceUpdateWithoutTrDataInput, string>
  | { name: 'published', alias?: string  } 
  | { name: 'name_EN', alias?: string  } 
  | { name: 'name_UA', alias?: string  } 
  | { name: 'name_RUS', alias?: string  } 
  | { name: 'module', alias?: string  } 
  | { name: 'dtc', alias?: string  } 
  
export interface DeviceUpsertWithWhereUniqueWithoutTrInput {
  where?: DeviceWhereUniqueInput
  update?: DeviceUpdateWithoutTrDataInput
  create?: DeviceCreateWithoutTrInput
}
export type DeviceUpsertWithWhereUniqueWithoutTrInputInputObject =
  | Extract<keyof DeviceUpsertWithWhereUniqueWithoutTrInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface TRUpdateManyMutationInput {
  name_TR_UA?: string | null
  name_TR_EN?: string | null
}
export type TRUpdateManyMutationInputInputObject =
  | Extract<keyof TRUpdateManyMutationInput, string>
  | { name: 'name_TR_UA', alias?: string  } 
  | { name: 'name_TR_EN', alias?: string  } 
  
export interface LetterEmailCreateInput {
  id?: string | null
  from?: string
  subject?: string
  text?: string
}
export type LetterEmailCreateInputInputObject =
  | Extract<keyof LetterEmailCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'from', alias?: string  } 
  | { name: 'subject', alias?: string  } 
  | { name: 'text', alias?: string  } 
  
export interface LetterEmailUpdateInput {
  from?: string | null
  subject?: string | null
  text?: string | null
}
export type LetterEmailUpdateInputInputObject =
  | Extract<keyof LetterEmailUpdateInput, string>
  | { name: 'from', alias?: string  } 
  | { name: 'subject', alias?: string  } 
  | { name: 'text', alias?: string  } 
  
export interface LetterEmailUpdateManyMutationInput {
  from?: string | null
  subject?: string | null
  text?: string | null
}
export type LetterEmailUpdateManyMutationInputInputObject =
  | Extract<keyof LetterEmailUpdateManyMutationInput, string>
  | { name: 'from', alias?: string  } 
  | { name: 'subject', alias?: string  } 
  | { name: 'text', alias?: string  } 
  
export interface MyDeviceCreateInput {
  id?: string | null
  name_device?: string
  brand_device?: string
  series_device?: string
  kind_device?: string | null
  certificate_calibration?: boolean | null
  certificate_verification?: boolean | null
  certificate_conformity?: boolean | null
  module_device?: string | null
  tr_device?: string | null
  certificate_assessment_number?: string | null
  certificate_verification_number?: string | null
  certificate_calibration_number?: string | null
  department_assessment_center?: string | null
  department_verification_center?: string | null
  department_calibration_center?: string | null
  conformity_data?: string | null
  calibration_data?: string | null
  valid_verification?: string | null
  notes?: string | null
  author?: UserCreateOneWithoutMydevicesInput
}
export type MyDeviceCreateInputInputObject =
  | Extract<keyof MyDeviceCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name_device', alias?: string  } 
  | { name: 'brand_device', alias?: string  } 
  | { name: 'series_device', alias?: string  } 
  | { name: 'kind_device', alias?: string  } 
  | { name: 'certificate_calibration', alias?: string  } 
  | { name: 'certificate_verification', alias?: string  } 
  | { name: 'certificate_conformity', alias?: string  } 
  | { name: 'module_device', alias?: string  } 
  | { name: 'tr_device', alias?: string  } 
  | { name: 'certificate_assessment_number', alias?: string  } 
  | { name: 'certificate_verification_number', alias?: string  } 
  | { name: 'certificate_calibration_number', alias?: string  } 
  | { name: 'department_assessment_center', alias?: string  } 
  | { name: 'department_verification_center', alias?: string  } 
  | { name: 'department_calibration_center', alias?: string  } 
  | { name: 'conformity_data', alias?: string  } 
  | { name: 'calibration_data', alias?: string  } 
  | { name: 'valid_verification', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserCreateOneWithoutMydevicesInput {
  create?: UserCreateWithoutMydevicesInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutMydevicesInputInputObject =
  | Extract<keyof UserCreateOneWithoutMydevicesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutMydevicesInput {
  id?: string | null
  email?: string
  password?: string
  name?: string
  companyName?: string | null
  country?: string | null
  posts?: PostCreateManyWithoutAuthorInput | null
  appointments?: AppointmentsCreateManyWithoutAuthorInput | null
  emailConfirmed?: boolean
  emailConfirmToken?: string
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string
  teams?: TeamCreateManyWithoutAuthorInput | null
}
export type UserCreateWithoutMydevicesInputInputObject =
  | Extract<keyof UserCreateWithoutMydevicesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'posts', alias?: string  } 
  | { name: 'appointments', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  | { name: 'teams', alias?: string  } 
  
export interface MyDeviceUpdateInput {
  name_device?: string | null
  brand_device?: string | null
  series_device?: string | null
  kind_device?: string | null
  certificate_calibration?: boolean | null
  certificate_verification?: boolean | null
  certificate_conformity?: boolean | null
  module_device?: string | null
  tr_device?: string | null
  certificate_assessment_number?: string | null
  certificate_verification_number?: string | null
  certificate_calibration_number?: string | null
  department_assessment_center?: string | null
  department_verification_center?: string | null
  department_calibration_center?: string | null
  conformity_data?: string | null
  calibration_data?: string | null
  valid_verification?: string | null
  notes?: string | null
  author?: UserUpdateOneRequiredWithoutMydevicesInput | null
}
export type MyDeviceUpdateInputInputObject =
  | Extract<keyof MyDeviceUpdateInput, string>
  | { name: 'name_device', alias?: string  } 
  | { name: 'brand_device', alias?: string  } 
  | { name: 'series_device', alias?: string  } 
  | { name: 'kind_device', alias?: string  } 
  | { name: 'certificate_calibration', alias?: string  } 
  | { name: 'certificate_verification', alias?: string  } 
  | { name: 'certificate_conformity', alias?: string  } 
  | { name: 'module_device', alias?: string  } 
  | { name: 'tr_device', alias?: string  } 
  | { name: 'certificate_assessment_number', alias?: string  } 
  | { name: 'certificate_verification_number', alias?: string  } 
  | { name: 'certificate_calibration_number', alias?: string  } 
  | { name: 'department_assessment_center', alias?: string  } 
  | { name: 'department_verification_center', alias?: string  } 
  | { name: 'department_calibration_center', alias?: string  } 
  | { name: 'conformity_data', alias?: string  } 
  | { name: 'calibration_data', alias?: string  } 
  | { name: 'valid_verification', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutMydevicesInput {
  create?: UserCreateWithoutMydevicesInput | null
  update?: UserUpdateWithoutMydevicesDataInput | null
  upsert?: UserUpsertWithoutMydevicesInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutMydevicesInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutMydevicesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutMydevicesDataInput {
  email?: string | null
  password?: string | null
  name?: string | null
  companyName?: string | null
  country?: string | null
  posts?: PostUpdateManyWithoutAuthorInput | null
  appointments?: AppointmentsUpdateManyWithoutAuthorInput | null
  emailConfirmed?: boolean | null
  emailConfirmToken?: string | null
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string | null
  teams?: TeamUpdateManyWithoutAuthorInput | null
}
export type UserUpdateWithoutMydevicesDataInputInputObject =
  | Extract<keyof UserUpdateWithoutMydevicesDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'posts', alias?: string  } 
  | { name: 'appointments', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  | { name: 'teams', alias?: string  } 
  
export interface UserUpsertWithoutMydevicesInput {
  update?: UserUpdateWithoutMydevicesDataInput
  create?: UserCreateWithoutMydevicesInput
}
export type UserUpsertWithoutMydevicesInputInputObject =
  | Extract<keyof UserUpsertWithoutMydevicesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MyDeviceUpdateManyMutationInput {
  name_device?: string | null
  brand_device?: string | null
  series_device?: string | null
  kind_device?: string | null
  certificate_calibration?: boolean | null
  certificate_verification?: boolean | null
  certificate_conformity?: boolean | null
  module_device?: string | null
  tr_device?: string | null
  certificate_assessment_number?: string | null
  certificate_verification_number?: string | null
  certificate_calibration_number?: string | null
  department_assessment_center?: string | null
  department_verification_center?: string | null
  department_calibration_center?: string | null
  conformity_data?: string | null
  calibration_data?: string | null
  valid_verification?: string | null
  notes?: string | null
}
export type MyDeviceUpdateManyMutationInputInputObject =
  | Extract<keyof MyDeviceUpdateManyMutationInput, string>
  | { name: 'name_device', alias?: string  } 
  | { name: 'brand_device', alias?: string  } 
  | { name: 'series_device', alias?: string  } 
  | { name: 'kind_device', alias?: string  } 
  | { name: 'certificate_calibration', alias?: string  } 
  | { name: 'certificate_verification', alias?: string  } 
  | { name: 'certificate_conformity', alias?: string  } 
  | { name: 'module_device', alias?: string  } 
  | { name: 'tr_device', alias?: string  } 
  | { name: 'certificate_assessment_number', alias?: string  } 
  | { name: 'certificate_verification_number', alias?: string  } 
  | { name: 'certificate_calibration_number', alias?: string  } 
  | { name: 'department_assessment_center', alias?: string  } 
  | { name: 'department_verification_center', alias?: string  } 
  | { name: 'department_calibration_center', alias?: string  } 
  | { name: 'conformity_data', alias?: string  } 
  | { name: 'calibration_data', alias?: string  } 
  | { name: 'valid_verification', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  
export interface TeamCreateInput {
  id?: string | null
  name?: string
  author?: UserCreateOneWithoutTeamsInput | null
  teamMembers?: TeamMembersCreateManyWithoutTeamInput | null
  payment?: boolean | null
  role?: prisma.Role | null
}
export type TeamCreateInputInputObject =
  | Extract<keyof TeamCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'teamMembers', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface UserCreateOneWithoutTeamsInput {
  create?: UserCreateWithoutTeamsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutTeamsInputInputObject =
  | Extract<keyof UserCreateOneWithoutTeamsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutTeamsInput {
  id?: string | null
  email?: string
  password?: string
  name?: string
  companyName?: string | null
  country?: string | null
  posts?: PostCreateManyWithoutAuthorInput | null
  mydevices?: MyDeviceCreateManyWithoutAuthorInput | null
  appointments?: AppointmentsCreateManyWithoutAuthorInput | null
  emailConfirmed?: boolean
  emailConfirmToken?: string
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string
}
export type UserCreateWithoutTeamsInputInputObject =
  | Extract<keyof UserCreateWithoutTeamsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'posts', alias?: string  } 
  | { name: 'mydevices', alias?: string  } 
  | { name: 'appointments', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  
export interface TeamUpdateInput {
  name?: string | null
  author?: UserUpdateOneWithoutTeamsInput | null
  teamMembers?: TeamMembersUpdateManyWithoutTeamInput | null
  payment?: boolean | null
  role?: prisma.Role | null
}
export type TeamUpdateInputInputObject =
  | Extract<keyof TeamUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'teamMembers', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface UserUpdateOneWithoutTeamsInput {
  create?: UserCreateWithoutTeamsInput | null
  update?: UserUpdateWithoutTeamsDataInput | null
  upsert?: UserUpsertWithoutTeamsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneWithoutTeamsInputInputObject =
  | Extract<keyof UserUpdateOneWithoutTeamsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutTeamsDataInput {
  email?: string | null
  password?: string | null
  name?: string | null
  companyName?: string | null
  country?: string | null
  posts?: PostUpdateManyWithoutAuthorInput | null
  mydevices?: MyDeviceUpdateManyWithoutAuthorInput | null
  appointments?: AppointmentsUpdateManyWithoutAuthorInput | null
  emailConfirmed?: boolean | null
  emailConfirmToken?: string | null
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string | null
}
export type UserUpdateWithoutTeamsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutTeamsDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'posts', alias?: string  } 
  | { name: 'mydevices', alias?: string  } 
  | { name: 'appointments', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  
export interface UserUpsertWithoutTeamsInput {
  update?: UserUpdateWithoutTeamsDataInput
  create?: UserCreateWithoutTeamsInput
}
export type UserUpsertWithoutTeamsInputInputObject =
  | Extract<keyof UserUpsertWithoutTeamsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface TeamUpdateManyMutationInput {
  name?: string | null
  payment?: boolean | null
  role?: prisma.Role | null
}
export type TeamUpdateManyMutationInputInputObject =
  | Extract<keyof TeamUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface TeamMembersCreateInput {
  id?: string | null
  emailMembers?: string
  member?: prisma.Members | null
  memberConfirmed?: boolean | null
  memberConfirmToken?: string | null
  team?: TeamCreateOneWithoutTeamMembersInput
}
export type TeamMembersCreateInputInputObject =
  | Extract<keyof TeamMembersCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'emailMembers', alias?: string  } 
  | { name: 'member', alias?: string  } 
  | { name: 'memberConfirmed', alias?: string  } 
  | { name: 'memberConfirmToken', alias?: string  } 
  | { name: 'team', alias?: string  } 
  
export interface TeamCreateOneWithoutTeamMembersInput {
  create?: TeamCreateWithoutTeamMembersInput | null
  connect?: TeamWhereUniqueInput | null
}
export type TeamCreateOneWithoutTeamMembersInputInputObject =
  | Extract<keyof TeamCreateOneWithoutTeamMembersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TeamCreateWithoutTeamMembersInput {
  id?: string | null
  name?: string
  author?: UserCreateOneWithoutTeamsInput | null
  payment?: boolean | null
  role?: prisma.Role | null
}
export type TeamCreateWithoutTeamMembersInputInputObject =
  | Extract<keyof TeamCreateWithoutTeamMembersInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface TeamMembersUpdateInput {
  emailMembers?: string | null
  member?: prisma.Members | null
  memberConfirmed?: boolean | null
  memberConfirmToken?: string | null
  team?: TeamUpdateOneRequiredWithoutTeamMembersInput | null
}
export type TeamMembersUpdateInputInputObject =
  | Extract<keyof TeamMembersUpdateInput, string>
  | { name: 'emailMembers', alias?: string  } 
  | { name: 'member', alias?: string  } 
  | { name: 'memberConfirmed', alias?: string  } 
  | { name: 'memberConfirmToken', alias?: string  } 
  | { name: 'team', alias?: string  } 
  
export interface TeamUpdateOneRequiredWithoutTeamMembersInput {
  create?: TeamCreateWithoutTeamMembersInput | null
  update?: TeamUpdateWithoutTeamMembersDataInput | null
  upsert?: TeamUpsertWithoutTeamMembersInput | null
  connect?: TeamWhereUniqueInput | null
}
export type TeamUpdateOneRequiredWithoutTeamMembersInputInputObject =
  | Extract<keyof TeamUpdateOneRequiredWithoutTeamMembersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TeamUpdateWithoutTeamMembersDataInput {
  name?: string | null
  author?: UserUpdateOneWithoutTeamsInput | null
  payment?: boolean | null
  role?: prisma.Role | null
}
export type TeamUpdateWithoutTeamMembersDataInputInputObject =
  | Extract<keyof TeamUpdateWithoutTeamMembersDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'author', alias?: string  } 
  | { name: 'payment', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface TeamUpsertWithoutTeamMembersInput {
  update?: TeamUpdateWithoutTeamMembersDataInput
  create?: TeamCreateWithoutTeamMembersInput
}
export type TeamUpsertWithoutTeamMembersInputInputObject =
  | Extract<keyof TeamUpsertWithoutTeamMembersInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface TeamMembersUpdateManyMutationInput {
  emailMembers?: string | null
  member?: prisma.Members | null
  memberConfirmed?: boolean | null
  memberConfirmToken?: string | null
}
export type TeamMembersUpdateManyMutationInputInputObject =
  | Extract<keyof TeamMembersUpdateManyMutationInput, string>
  | { name: 'emailMembers', alias?: string  } 
  | { name: 'member', alias?: string  } 
  | { name: 'memberConfirmed', alias?: string  } 
  | { name: 'memberConfirmToken', alias?: string  } 
  
export interface AppointmentsCreateInput {
  id?: string | null
  title?: string | null
  start_date?: string | null
  end_date?: string | null
  location?: string | null
  notes?: string | null
  author?: UserCreateOneWithoutAppointmentsInput
}
export type AppointmentsCreateInputInputObject =
  | Extract<keyof AppointmentsCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'start_date', alias?: string  } 
  | { name: 'end_date', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserCreateOneWithoutAppointmentsInput {
  create?: UserCreateWithoutAppointmentsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutAppointmentsInputInputObject =
  | Extract<keyof UserCreateOneWithoutAppointmentsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutAppointmentsInput {
  id?: string | null
  email?: string
  password?: string
  name?: string
  companyName?: string | null
  country?: string | null
  posts?: PostCreateManyWithoutAuthorInput | null
  mydevices?: MyDeviceCreateManyWithoutAuthorInput | null
  emailConfirmed?: boolean
  emailConfirmToken?: string
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string
  teams?: TeamCreateManyWithoutAuthorInput | null
}
export type UserCreateWithoutAppointmentsInputInputObject =
  | Extract<keyof UserCreateWithoutAppointmentsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'posts', alias?: string  } 
  | { name: 'mydevices', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  | { name: 'teams', alias?: string  } 
  
export interface AppointmentsUpdateInput {
  title?: string | null
  start_date?: string | null
  end_date?: string | null
  location?: string | null
  notes?: string | null
  author?: UserUpdateOneRequiredWithoutAppointmentsInput | null
}
export type AppointmentsUpdateInputInputObject =
  | Extract<keyof AppointmentsUpdateInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'start_date', alias?: string  } 
  | { name: 'end_date', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  | { name: 'author', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutAppointmentsInput {
  create?: UserCreateWithoutAppointmentsInput | null
  update?: UserUpdateWithoutAppointmentsDataInput | null
  upsert?: UserUpsertWithoutAppointmentsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutAppointmentsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutAppointmentsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutAppointmentsDataInput {
  email?: string | null
  password?: string | null
  name?: string | null
  companyName?: string | null
  country?: string | null
  posts?: PostUpdateManyWithoutAuthorInput | null
  mydevices?: MyDeviceUpdateManyWithoutAuthorInput | null
  emailConfirmed?: boolean | null
  emailConfirmToken?: string | null
  role?: prisma.Role | null
  resetToken?: string | null
  resetExpires?: string | null
  lastLogin?: string | null
  joinedAt?: string | null
  teams?: TeamUpdateManyWithoutAuthorInput | null
}
export type UserUpdateWithoutAppointmentsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutAppointmentsDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'companyName', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'posts', alias?: string  } 
  | { name: 'mydevices', alias?: string  } 
  | { name: 'emailConfirmed', alias?: string  } 
  | { name: 'emailConfirmToken', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'resetToken', alias?: string  } 
  | { name: 'resetExpires', alias?: string  } 
  | { name: 'lastLogin', alias?: string  } 
  | { name: 'joinedAt', alias?: string  } 
  | { name: 'teams', alias?: string  } 
  
export interface UserUpsertWithoutAppointmentsInput {
  update?: UserUpdateWithoutAppointmentsDataInput
  create?: UserCreateWithoutAppointmentsInput
}
export type UserUpsertWithoutAppointmentsInputInputObject =
  | Extract<keyof UserUpsertWithoutAppointmentsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AppointmentsUpdateManyMutationInput {
  title?: string | null
  start_date?: string | null
  end_date?: string | null
  location?: string | null
  notes?: string | null
}
export type AppointmentsUpdateManyMutationInputInputObject =
  | Extract<keyof AppointmentsUpdateManyMutationInput, string>
  | { name: 'title', alias?: string  } 
  | { name: 'start_date', alias?: string  } 
  | { name: 'end_date', alias?: string  } 
  | { name: 'location', alias?: string  } 
  | { name: 'notes', alias?: string  } 
  
export interface PostSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PostWhereInput | null
  AND?: PostSubscriptionWhereInput[]
  OR?: PostSubscriptionWhereInput[]
  NOT?: PostSubscriptionWhereInput[]
}
export type PostSubscriptionWhereInputInputObject =
  | Extract<keyof PostSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DeviceSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DeviceWhereInput | null
  AND?: DeviceSubscriptionWhereInput[]
  OR?: DeviceSubscriptionWhereInput[]
  NOT?: DeviceSubscriptionWhereInput[]
}
export type DeviceSubscriptionWhereInputInputObject =
  | Extract<keyof DeviceSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface DTCSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: DTCWhereInput | null
  AND?: DTCSubscriptionWhereInput[]
  OR?: DTCSubscriptionWhereInput[]
  NOT?: DTCSubscriptionWhereInput[]
}
export type DTCSubscriptionWhereInputInputObject =
  | Extract<keyof DTCSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TRSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: TRWhereInput | null
  AND?: TRSubscriptionWhereInput[]
  OR?: TRSubscriptionWhereInput[]
  NOT?: TRSubscriptionWhereInput[]
}
export type TRSubscriptionWhereInputInputObject =
  | Extract<keyof TRSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface LetterEmailSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: LetterEmailWhereInput | null
  AND?: LetterEmailSubscriptionWhereInput[]
  OR?: LetterEmailSubscriptionWhereInput[]
  NOT?: LetterEmailSubscriptionWhereInput[]
}
export type LetterEmailSubscriptionWhereInputInputObject =
  | Extract<keyof LetterEmailSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MyDeviceSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MyDeviceWhereInput | null
  AND?: MyDeviceSubscriptionWhereInput[]
  OR?: MyDeviceSubscriptionWhereInput[]
  NOT?: MyDeviceSubscriptionWhereInput[]
}
export type MyDeviceSubscriptionWhereInputInputObject =
  | Extract<keyof MyDeviceSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TeamSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: TeamWhereInput | null
  AND?: TeamSubscriptionWhereInput[]
  OR?: TeamSubscriptionWhereInput[]
  NOT?: TeamSubscriptionWhereInput[]
}
export type TeamSubscriptionWhereInputInputObject =
  | Extract<keyof TeamSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TeamMembersSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: TeamMembersWhereInput | null
  AND?: TeamMembersSubscriptionWhereInput[]
  OR?: TeamMembersSubscriptionWhereInput[]
  NOT?: TeamMembersSubscriptionWhereInput[]
}
export type TeamMembersSubscriptionWhereInputInputObject =
  | Extract<keyof TeamMembersSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AppointmentsSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: AppointmentsWhereInput | null
  AND?: AppointmentsSubscriptionWhereInput[]
  OR?: AppointmentsSubscriptionWhereInput[]
  NOT?: AppointmentsSubscriptionWhereInput[]
}
export type AppointmentsSubscriptionWhereInputInputObject =
  | Extract<keyof AppointmentsSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type RoleValues =
  | 'ADMIN'
  | 'CUSTOMER'
  | 'TEAM'
  
export type MembersValues =
  | 'MEMBER1'
  | 'MEMBER2'
  | 'MEMBER3'
  | 'MEMBER4'
  | 'MEMBER5'
  
export type PostOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'published_ASC'
  | 'published_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'content_ASC'
  | 'content_DESC'
  
export type MyDeviceOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_device_ASC'
  | 'name_device_DESC'
  | 'brand_device_ASC'
  | 'brand_device_DESC'
  | 'series_device_ASC'
  | 'series_device_DESC'
  | 'kind_device_ASC'
  | 'kind_device_DESC'
  | 'certificate_calibration_ASC'
  | 'certificate_calibration_DESC'
  | 'certificate_verification_ASC'
  | 'certificate_verification_DESC'
  | 'certificate_conformity_ASC'
  | 'certificate_conformity_DESC'
  | 'module_device_ASC'
  | 'module_device_DESC'
  | 'tr_device_ASC'
  | 'tr_device_DESC'
  | 'certificate_assessment_number_ASC'
  | 'certificate_assessment_number_DESC'
  | 'certificate_verification_number_ASC'
  | 'certificate_verification_number_DESC'
  | 'certificate_calibration_number_ASC'
  | 'certificate_calibration_number_DESC'
  | 'department_assessment_center_ASC'
  | 'department_assessment_center_DESC'
  | 'department_verification_center_ASC'
  | 'department_verification_center_DESC'
  | 'department_calibration_center_ASC'
  | 'department_calibration_center_DESC'
  | 'conformity_data_ASC'
  | 'conformity_data_DESC'
  | 'calibration_data_ASC'
  | 'calibration_data_DESC'
  | 'valid_verification_ASC'
  | 'valid_verification_DESC'
  | 'notes_ASC'
  | 'notes_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type AppointmentsOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'start_date_ASC'
  | 'start_date_DESC'
  | 'end_date_ASC'
  | 'end_date_DESC'
  | 'location_ASC'
  | 'location_DESC'
  | 'notes_ASC'
  | 'notes_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type TeamOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'payment_ASC'
  | 'payment_DESC'
  | 'role_ASC'
  | 'role_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type TeamMembersOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'emailMembers_ASC'
  | 'emailMembers_DESC'
  | 'member_ASC'
  | 'member_DESC'
  | 'memberConfirmed_ASC'
  | 'memberConfirmed_DESC'
  | 'memberConfirmToken_ASC'
  | 'memberConfirmToken_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'companyName_ASC'
  | 'companyName_DESC'
  | 'country_ASC'
  | 'country_DESC'
  | 'emailConfirmed_ASC'
  | 'emailConfirmed_DESC'
  | 'emailConfirmToken_ASC'
  | 'emailConfirmToken_DESC'
  | 'role_ASC'
  | 'role_DESC'
  | 'resetToken_ASC'
  | 'resetToken_DESC'
  | 'resetExpires_ASC'
  | 'resetExpires_DESC'
  | 'lastLogin_ASC'
  | 'lastLogin_DESC'
  | 'joinedAt_ASC'
  | 'joinedAt_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DeviceOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'published_ASC'
  | 'published_DESC'
  | 'name_EN_ASC'
  | 'name_EN_DESC'
  | 'name_UA_ASC'
  | 'name_UA_DESC'
  | 'name_RUS_ASC'
  | 'name_RUS_DESC'
  | 'module_ASC'
  | 'module_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type DTCOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_UA_ASC'
  | 'name_UA_DESC'
  | 'name_EN_ASC'
  | 'name_EN_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type TROrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_TR_UA_ASC'
  | 'name_TR_UA_DESC'
  | 'name_TR_EN_ASC'
  | 'name_TR_EN_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type LetterEmailOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'from_ASC'
  | 'from_DESC'
  | 'subject_ASC'
  | 'subject_DESC'
  | 'text_ASC'
  | 'text_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  
// Code generated by Prisma (prisma@1.34.8). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

export const typeDefs = /* GraphQL */ `type AggregateAppointments {
  count: Int!
}

type AggregateDevice {
  count: Int!
}

type AggregateDTC {
  count: Int!
}

type AggregateLetterEmail {
  count: Int!
}

type AggregateMyDevice {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type AggregateTeam {
  count: Int!
}

type AggregateTeamMembers {
  count: Int!
}

type AggregateTR {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Appointments {
  id: ID!
  title: String
  start_date: DateTime
  end_date: DateTime
  location: String
  notes: String
  author: User!
}

type AppointmentsConnection {
  pageInfo: PageInfo!
  edges: [AppointmentsEdge]!
  aggregate: AggregateAppointments!
}

input AppointmentsCreateInput {
  id: ID
  title: String
  start_date: DateTime
  end_date: DateTime
  location: String
  notes: String
  author: UserCreateOneWithoutAppointmentsInput!
}

input AppointmentsCreateManyWithoutAuthorInput {
  create: [AppointmentsCreateWithoutAuthorInput!]
  connect: [AppointmentsWhereUniqueInput!]
}

input AppointmentsCreateWithoutAuthorInput {
  id: ID
  title: String
  start_date: DateTime
  end_date: DateTime
  location: String
  notes: String
}

type AppointmentsEdge {
  node: Appointments!
  cursor: String!
}

enum AppointmentsOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  start_date_ASC
  start_date_DESC
  end_date_ASC
  end_date_DESC
  location_ASC
  location_DESC
  notes_ASC
  notes_DESC
}

type AppointmentsPreviousValues {
  id: ID!
  title: String
  start_date: DateTime
  end_date: DateTime
  location: String
  notes: String
}

input AppointmentsScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  start_date: DateTime
  start_date_not: DateTime
  start_date_in: [DateTime!]
  start_date_not_in: [DateTime!]
  start_date_lt: DateTime
  start_date_lte: DateTime
  start_date_gt: DateTime
  start_date_gte: DateTime
  end_date: DateTime
  end_date_not: DateTime
  end_date_in: [DateTime!]
  end_date_not_in: [DateTime!]
  end_date_lt: DateTime
  end_date_lte: DateTime
  end_date_gt: DateTime
  end_date_gte: DateTime
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  AND: [AppointmentsScalarWhereInput!]
  OR: [AppointmentsScalarWhereInput!]
  NOT: [AppointmentsScalarWhereInput!]
}

type AppointmentsSubscriptionPayload {
  mutation: MutationType!
  node: Appointments
  updatedFields: [String!]
  previousValues: AppointmentsPreviousValues
}

input AppointmentsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AppointmentsWhereInput
  AND: [AppointmentsSubscriptionWhereInput!]
  OR: [AppointmentsSubscriptionWhereInput!]
  NOT: [AppointmentsSubscriptionWhereInput!]
}

input AppointmentsUpdateInput {
  title: String
  start_date: DateTime
  end_date: DateTime
  location: String
  notes: String
  author: UserUpdateOneRequiredWithoutAppointmentsInput
}

input AppointmentsUpdateManyDataInput {
  title: String
  start_date: DateTime
  end_date: DateTime
  location: String
  notes: String
}

input AppointmentsUpdateManyMutationInput {
  title: String
  start_date: DateTime
  end_date: DateTime
  location: String
  notes: String
}

input AppointmentsUpdateManyWithoutAuthorInput {
  create: [AppointmentsCreateWithoutAuthorInput!]
  delete: [AppointmentsWhereUniqueInput!]
  connect: [AppointmentsWhereUniqueInput!]
  set: [AppointmentsWhereUniqueInput!]
  disconnect: [AppointmentsWhereUniqueInput!]
  update: [AppointmentsUpdateWithWhereUniqueWithoutAuthorInput!]
  upsert: [AppointmentsUpsertWithWhereUniqueWithoutAuthorInput!]
  deleteMany: [AppointmentsScalarWhereInput!]
  updateMany: [AppointmentsUpdateManyWithWhereNestedInput!]
}

input AppointmentsUpdateManyWithWhereNestedInput {
  where: AppointmentsScalarWhereInput!
  data: AppointmentsUpdateManyDataInput!
}

input AppointmentsUpdateWithoutAuthorDataInput {
  title: String
  start_date: DateTime
  end_date: DateTime
  location: String
  notes: String
}

input AppointmentsUpdateWithWhereUniqueWithoutAuthorInput {
  where: AppointmentsWhereUniqueInput!
  data: AppointmentsUpdateWithoutAuthorDataInput!
}

input AppointmentsUpsertWithWhereUniqueWithoutAuthorInput {
  where: AppointmentsWhereUniqueInput!
  update: AppointmentsUpdateWithoutAuthorDataInput!
  create: AppointmentsCreateWithoutAuthorInput!
}

input AppointmentsWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  start_date: DateTime
  start_date_not: DateTime
  start_date_in: [DateTime!]
  start_date_not_in: [DateTime!]
  start_date_lt: DateTime
  start_date_lte: DateTime
  start_date_gt: DateTime
  start_date_gte: DateTime
  end_date: DateTime
  end_date_not: DateTime
  end_date_in: [DateTime!]
  end_date_not_in: [DateTime!]
  end_date_lt: DateTime
  end_date_lte: DateTime
  end_date_gt: DateTime
  end_date_gte: DateTime
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  author: UserWhereInput
  AND: [AppointmentsWhereInput!]
  OR: [AppointmentsWhereInput!]
  NOT: [AppointmentsWhereInput!]
}

input AppointmentsWhereUniqueInput {
  id: ID
}

type BatchPayload {
  count: Long!
}

scalar DateTime

type Device {
  id: ID!
  published: Boolean!
  name_EN: String!
  name_UA: String!
  name_RUS: String
  module: String
  tr: TR!
  dtc: DTC!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DeviceConnection {
  pageInfo: PageInfo!
  edges: [DeviceEdge]!
  aggregate: AggregateDevice!
}

input DeviceCreateInput {
  id: ID
  published: Boolean
  name_EN: String!
  name_UA: String!
  name_RUS: String
  module: String
  tr: TRCreateOneWithoutDevice_idInput!
  dtc: DTCCreateOneWithoutDevice_idInput!
}

input DeviceCreateManyWithoutDtcInput {
  create: [DeviceCreateWithoutDtcInput!]
  connect: [DeviceWhereUniqueInput!]
}

input DeviceCreateManyWithoutTrInput {
  create: [DeviceCreateWithoutTrInput!]
  connect: [DeviceWhereUniqueInput!]
}

input DeviceCreateWithoutDtcInput {
  id: ID
  published: Boolean
  name_EN: String!
  name_UA: String!
  name_RUS: String
  module: String
  tr: TRCreateOneWithoutDevice_idInput!
}

input DeviceCreateWithoutTrInput {
  id: ID
  published: Boolean
  name_EN: String!
  name_UA: String!
  name_RUS: String
  module: String
  dtc: DTCCreateOneWithoutDevice_idInput!
}

type DeviceEdge {
  node: Device!
  cursor: String!
}

enum DeviceOrderByInput {
  id_ASC
  id_DESC
  published_ASC
  published_DESC
  name_EN_ASC
  name_EN_DESC
  name_UA_ASC
  name_UA_DESC
  name_RUS_ASC
  name_RUS_DESC
  module_ASC
  module_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DevicePreviousValues {
  id: ID!
  published: Boolean!
  name_EN: String!
  name_UA: String!
  name_RUS: String
  module: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input DeviceScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  published: Boolean
  published_not: Boolean
  name_EN: String
  name_EN_not: String
  name_EN_in: [String!]
  name_EN_not_in: [String!]
  name_EN_lt: String
  name_EN_lte: String
  name_EN_gt: String
  name_EN_gte: String
  name_EN_contains: String
  name_EN_not_contains: String
  name_EN_starts_with: String
  name_EN_not_starts_with: String
  name_EN_ends_with: String
  name_EN_not_ends_with: String
  name_UA: String
  name_UA_not: String
  name_UA_in: [String!]
  name_UA_not_in: [String!]
  name_UA_lt: String
  name_UA_lte: String
  name_UA_gt: String
  name_UA_gte: String
  name_UA_contains: String
  name_UA_not_contains: String
  name_UA_starts_with: String
  name_UA_not_starts_with: String
  name_UA_ends_with: String
  name_UA_not_ends_with: String
  name_RUS: String
  name_RUS_not: String
  name_RUS_in: [String!]
  name_RUS_not_in: [String!]
  name_RUS_lt: String
  name_RUS_lte: String
  name_RUS_gt: String
  name_RUS_gte: String
  name_RUS_contains: String
  name_RUS_not_contains: String
  name_RUS_starts_with: String
  name_RUS_not_starts_with: String
  name_RUS_ends_with: String
  name_RUS_not_ends_with: String
  module: String
  module_not: String
  module_in: [String!]
  module_not_in: [String!]
  module_lt: String
  module_lte: String
  module_gt: String
  module_gte: String
  module_contains: String
  module_not_contains: String
  module_starts_with: String
  module_not_starts_with: String
  module_ends_with: String
  module_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [DeviceScalarWhereInput!]
  OR: [DeviceScalarWhereInput!]
  NOT: [DeviceScalarWhereInput!]
}

type DeviceSubscriptionPayload {
  mutation: MutationType!
  node: Device
  updatedFields: [String!]
  previousValues: DevicePreviousValues
}

input DeviceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DeviceWhereInput
  AND: [DeviceSubscriptionWhereInput!]
  OR: [DeviceSubscriptionWhereInput!]
  NOT: [DeviceSubscriptionWhereInput!]
}

input DeviceUpdateInput {
  published: Boolean
  name_EN: String
  name_UA: String
  name_RUS: String
  module: String
  tr: TRUpdateOneRequiredWithoutDevice_idInput
  dtc: DTCUpdateOneRequiredWithoutDevice_idInput
}

input DeviceUpdateManyDataInput {
  published: Boolean
  name_EN: String
  name_UA: String
  name_RUS: String
  module: String
}

input DeviceUpdateManyMutationInput {
  published: Boolean
  name_EN: String
  name_UA: String
  name_RUS: String
  module: String
}

input DeviceUpdateManyWithoutDtcInput {
  create: [DeviceCreateWithoutDtcInput!]
  delete: [DeviceWhereUniqueInput!]
  connect: [DeviceWhereUniqueInput!]
  set: [DeviceWhereUniqueInput!]
  disconnect: [DeviceWhereUniqueInput!]
  update: [DeviceUpdateWithWhereUniqueWithoutDtcInput!]
  upsert: [DeviceUpsertWithWhereUniqueWithoutDtcInput!]
  deleteMany: [DeviceScalarWhereInput!]
  updateMany: [DeviceUpdateManyWithWhereNestedInput!]
}

input DeviceUpdateManyWithoutTrInput {
  create: [DeviceCreateWithoutTrInput!]
  delete: [DeviceWhereUniqueInput!]
  connect: [DeviceWhereUniqueInput!]
  set: [DeviceWhereUniqueInput!]
  disconnect: [DeviceWhereUniqueInput!]
  update: [DeviceUpdateWithWhereUniqueWithoutTrInput!]
  upsert: [DeviceUpsertWithWhereUniqueWithoutTrInput!]
  deleteMany: [DeviceScalarWhereInput!]
  updateMany: [DeviceUpdateManyWithWhereNestedInput!]
}

input DeviceUpdateManyWithWhereNestedInput {
  where: DeviceScalarWhereInput!
  data: DeviceUpdateManyDataInput!
}

input DeviceUpdateWithoutDtcDataInput {
  published: Boolean
  name_EN: String
  name_UA: String
  name_RUS: String
  module: String
  tr: TRUpdateOneRequiredWithoutDevice_idInput
}

input DeviceUpdateWithoutTrDataInput {
  published: Boolean
  name_EN: String
  name_UA: String
  name_RUS: String
  module: String
  dtc: DTCUpdateOneRequiredWithoutDevice_idInput
}

input DeviceUpdateWithWhereUniqueWithoutDtcInput {
  where: DeviceWhereUniqueInput!
  data: DeviceUpdateWithoutDtcDataInput!
}

input DeviceUpdateWithWhereUniqueWithoutTrInput {
  where: DeviceWhereUniqueInput!
  data: DeviceUpdateWithoutTrDataInput!
}

input DeviceUpsertWithWhereUniqueWithoutDtcInput {
  where: DeviceWhereUniqueInput!
  update: DeviceUpdateWithoutDtcDataInput!
  create: DeviceCreateWithoutDtcInput!
}

input DeviceUpsertWithWhereUniqueWithoutTrInput {
  where: DeviceWhereUniqueInput!
  update: DeviceUpdateWithoutTrDataInput!
  create: DeviceCreateWithoutTrInput!
}

input DeviceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  published: Boolean
  published_not: Boolean
  name_EN: String
  name_EN_not: String
  name_EN_in: [String!]
  name_EN_not_in: [String!]
  name_EN_lt: String
  name_EN_lte: String
  name_EN_gt: String
  name_EN_gte: String
  name_EN_contains: String
  name_EN_not_contains: String
  name_EN_starts_with: String
  name_EN_not_starts_with: String
  name_EN_ends_with: String
  name_EN_not_ends_with: String
  name_UA: String
  name_UA_not: String
  name_UA_in: [String!]
  name_UA_not_in: [String!]
  name_UA_lt: String
  name_UA_lte: String
  name_UA_gt: String
  name_UA_gte: String
  name_UA_contains: String
  name_UA_not_contains: String
  name_UA_starts_with: String
  name_UA_not_starts_with: String
  name_UA_ends_with: String
  name_UA_not_ends_with: String
  name_RUS: String
  name_RUS_not: String
  name_RUS_in: [String!]
  name_RUS_not_in: [String!]
  name_RUS_lt: String
  name_RUS_lte: String
  name_RUS_gt: String
  name_RUS_gte: String
  name_RUS_contains: String
  name_RUS_not_contains: String
  name_RUS_starts_with: String
  name_RUS_not_starts_with: String
  name_RUS_ends_with: String
  name_RUS_not_ends_with: String
  module: String
  module_not: String
  module_in: [String!]
  module_not_in: [String!]
  module_lt: String
  module_lte: String
  module_gt: String
  module_gte: String
  module_contains: String
  module_not_contains: String
  module_starts_with: String
  module_not_starts_with: String
  module_ends_with: String
  module_not_ends_with: String
  tr: TRWhereInput
  dtc: DTCWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [DeviceWhereInput!]
  OR: [DeviceWhereInput!]
  NOT: [DeviceWhereInput!]
}

input DeviceWhereUniqueInput {
  id: ID
}

type DTC {
  id: ID!
  name_UA: String!
  name_EN: String!
  device_id(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DTCConnection {
  pageInfo: PageInfo!
  edges: [DTCEdge]!
  aggregate: AggregateDTC!
}

input DTCCreateInput {
  id: ID
  name_UA: String!
  name_EN: String!
  device_id: DeviceCreateManyWithoutDtcInput
}

input DTCCreateOneWithoutDevice_idInput {
  create: DTCCreateWithoutDevice_idInput
  connect: DTCWhereUniqueInput
}

input DTCCreateWithoutDevice_idInput {
  id: ID
  name_UA: String!
  name_EN: String!
}

type DTCEdge {
  node: DTC!
  cursor: String!
}

enum DTCOrderByInput {
  id_ASC
  id_DESC
  name_UA_ASC
  name_UA_DESC
  name_EN_ASC
  name_EN_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DTCPreviousValues {
  id: ID!
  name_UA: String!
  name_EN: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DTCSubscriptionPayload {
  mutation: MutationType!
  node: DTC
  updatedFields: [String!]
  previousValues: DTCPreviousValues
}

input DTCSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DTCWhereInput
  AND: [DTCSubscriptionWhereInput!]
  OR: [DTCSubscriptionWhereInput!]
  NOT: [DTCSubscriptionWhereInput!]
}

input DTCUpdateInput {
  name_UA: String
  name_EN: String
  device_id: DeviceUpdateManyWithoutDtcInput
}

input DTCUpdateManyMutationInput {
  name_UA: String
  name_EN: String
}

input DTCUpdateOneRequiredWithoutDevice_idInput {
  create: DTCCreateWithoutDevice_idInput
  update: DTCUpdateWithoutDevice_idDataInput
  upsert: DTCUpsertWithoutDevice_idInput
  connect: DTCWhereUniqueInput
}

input DTCUpdateWithoutDevice_idDataInput {
  name_UA: String
  name_EN: String
}

input DTCUpsertWithoutDevice_idInput {
  update: DTCUpdateWithoutDevice_idDataInput!
  create: DTCCreateWithoutDevice_idInput!
}

input DTCWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name_UA: String
  name_UA_not: String
  name_UA_in: [String!]
  name_UA_not_in: [String!]
  name_UA_lt: String
  name_UA_lte: String
  name_UA_gt: String
  name_UA_gte: String
  name_UA_contains: String
  name_UA_not_contains: String
  name_UA_starts_with: String
  name_UA_not_starts_with: String
  name_UA_ends_with: String
  name_UA_not_ends_with: String
  name_EN: String
  name_EN_not: String
  name_EN_in: [String!]
  name_EN_not_in: [String!]
  name_EN_lt: String
  name_EN_lte: String
  name_EN_gt: String
  name_EN_gte: String
  name_EN_contains: String
  name_EN_not_contains: String
  name_EN_starts_with: String
  name_EN_not_starts_with: String
  name_EN_ends_with: String
  name_EN_not_ends_with: String
  device_id_every: DeviceWhereInput
  device_id_some: DeviceWhereInput
  device_id_none: DeviceWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [DTCWhereInput!]
  OR: [DTCWhereInput!]
  NOT: [DTCWhereInput!]
}

input DTCWhereUniqueInput {
  id: ID
}

type LetterEmail {
  id: ID!
  from: String!
  subject: String!
  text: String!
}

type LetterEmailConnection {
  pageInfo: PageInfo!
  edges: [LetterEmailEdge]!
  aggregate: AggregateLetterEmail!
}

input LetterEmailCreateInput {
  id: ID
  from: String!
  subject: String!
  text: String!
}

type LetterEmailEdge {
  node: LetterEmail!
  cursor: String!
}

enum LetterEmailOrderByInput {
  id_ASC
  id_DESC
  from_ASC
  from_DESC
  subject_ASC
  subject_DESC
  text_ASC
  text_DESC
}

type LetterEmailPreviousValues {
  id: ID!
  from: String!
  subject: String!
  text: String!
}

type LetterEmailSubscriptionPayload {
  mutation: MutationType!
  node: LetterEmail
  updatedFields: [String!]
  previousValues: LetterEmailPreviousValues
}

input LetterEmailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: LetterEmailWhereInput
  AND: [LetterEmailSubscriptionWhereInput!]
  OR: [LetterEmailSubscriptionWhereInput!]
  NOT: [LetterEmailSubscriptionWhereInput!]
}

input LetterEmailUpdateInput {
  from: String
  subject: String
  text: String
}

input LetterEmailUpdateManyMutationInput {
  from: String
  subject: String
  text: String
}

input LetterEmailWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  from: String
  from_not: String
  from_in: [String!]
  from_not_in: [String!]
  from_lt: String
  from_lte: String
  from_gt: String
  from_gte: String
  from_contains: String
  from_not_contains: String
  from_starts_with: String
  from_not_starts_with: String
  from_ends_with: String
  from_not_ends_with: String
  subject: String
  subject_not: String
  subject_in: [String!]
  subject_not_in: [String!]
  subject_lt: String
  subject_lte: String
  subject_gt: String
  subject_gte: String
  subject_contains: String
  subject_not_contains: String
  subject_starts_with: String
  subject_not_starts_with: String
  subject_ends_with: String
  subject_not_ends_with: String
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  AND: [LetterEmailWhereInput!]
  OR: [LetterEmailWhereInput!]
  NOT: [LetterEmailWhereInput!]
}

input LetterEmailWhereUniqueInput {
  id: ID
}

scalar Long

enum Members {
  MEMBER1
  MEMBER2
  MEMBER3
  MEMBER4
  MEMBER5
}

type Mutation {
  createAppointments(data: AppointmentsCreateInput!): Appointments!
  updateAppointments(data: AppointmentsUpdateInput!, where: AppointmentsWhereUniqueInput!): Appointments
  updateManyAppointmentses(data: AppointmentsUpdateManyMutationInput!, where: AppointmentsWhereInput): BatchPayload!
  upsertAppointments(where: AppointmentsWhereUniqueInput!, create: AppointmentsCreateInput!, update: AppointmentsUpdateInput!): Appointments!
  deleteAppointments(where: AppointmentsWhereUniqueInput!): Appointments
  deleteManyAppointmentses(where: AppointmentsWhereInput): BatchPayload!
  createDTC(data: DTCCreateInput!): DTC!
  updateDTC(data: DTCUpdateInput!, where: DTCWhereUniqueInput!): DTC
  updateManyDTCs(data: DTCUpdateManyMutationInput!, where: DTCWhereInput): BatchPayload!
  upsertDTC(where: DTCWhereUniqueInput!, create: DTCCreateInput!, update: DTCUpdateInput!): DTC!
  deleteDTC(where: DTCWhereUniqueInput!): DTC
  deleteManyDTCs(where: DTCWhereInput): BatchPayload!
  createDevice(data: DeviceCreateInput!): Device!
  updateDevice(data: DeviceUpdateInput!, where: DeviceWhereUniqueInput!): Device
  updateManyDevices(data: DeviceUpdateManyMutationInput!, where: DeviceWhereInput): BatchPayload!
  upsertDevice(where: DeviceWhereUniqueInput!, create: DeviceCreateInput!, update: DeviceUpdateInput!): Device!
  deleteDevice(where: DeviceWhereUniqueInput!): Device
  deleteManyDevices(where: DeviceWhereInput): BatchPayload!
  createLetterEmail(data: LetterEmailCreateInput!): LetterEmail!
  updateLetterEmail(data: LetterEmailUpdateInput!, where: LetterEmailWhereUniqueInput!): LetterEmail
  updateManyLetterEmails(data: LetterEmailUpdateManyMutationInput!, where: LetterEmailWhereInput): BatchPayload!
  upsertLetterEmail(where: LetterEmailWhereUniqueInput!, create: LetterEmailCreateInput!, update: LetterEmailUpdateInput!): LetterEmail!
  deleteLetterEmail(where: LetterEmailWhereUniqueInput!): LetterEmail
  deleteManyLetterEmails(where: LetterEmailWhereInput): BatchPayload!
  createMyDevice(data: MyDeviceCreateInput!): MyDevice!
  updateMyDevice(data: MyDeviceUpdateInput!, where: MyDeviceWhereUniqueInput!): MyDevice
  updateManyMyDevices(data: MyDeviceUpdateManyMutationInput!, where: MyDeviceWhereInput): BatchPayload!
  upsertMyDevice(where: MyDeviceWhereUniqueInput!, create: MyDeviceCreateInput!, update: MyDeviceUpdateInput!): MyDevice!
  deleteMyDevice(where: MyDeviceWhereUniqueInput!): MyDevice
  deleteManyMyDevices(where: MyDeviceWhereInput): BatchPayload!
  createPost(data: PostCreateInput!): Post!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  deletePost(where: PostWhereUniqueInput!): Post
  deleteManyPosts(where: PostWhereInput): BatchPayload!
  createTR(data: TRCreateInput!): TR!
  updateTR(data: TRUpdateInput!, where: TRWhereUniqueInput!): TR
  updateManyTRs(data: TRUpdateManyMutationInput!, where: TRWhereInput): BatchPayload!
  upsertTR(where: TRWhereUniqueInput!, create: TRCreateInput!, update: TRUpdateInput!): TR!
  deleteTR(where: TRWhereUniqueInput!): TR
  deleteManyTRs(where: TRWhereInput): BatchPayload!
  createTeam(data: TeamCreateInput!): Team!
  updateTeam(data: TeamUpdateInput!, where: TeamWhereUniqueInput!): Team
  updateManyTeams(data: TeamUpdateManyMutationInput!, where: TeamWhereInput): BatchPayload!
  upsertTeam(where: TeamWhereUniqueInput!, create: TeamCreateInput!, update: TeamUpdateInput!): Team!
  deleteTeam(where: TeamWhereUniqueInput!): Team
  deleteManyTeams(where: TeamWhereInput): BatchPayload!
  createTeamMembers(data: TeamMembersCreateInput!): TeamMembers!
  updateTeamMembers(data: TeamMembersUpdateInput!, where: TeamMembersWhereUniqueInput!): TeamMembers
  updateManyTeamMemberses(data: TeamMembersUpdateManyMutationInput!, where: TeamMembersWhereInput): BatchPayload!
  upsertTeamMembers(where: TeamMembersWhereUniqueInput!, create: TeamMembersCreateInput!, update: TeamMembersUpdateInput!): TeamMembers!
  deleteTeamMembers(where: TeamMembersWhereUniqueInput!): TeamMembers
  deleteManyTeamMemberses(where: TeamMembersWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

type MyDevice {
  id: ID!
  name_device: String!
  brand_device: String!
  series_device: String!
  kind_device: String
  certificate_calibration: Boolean
  certificate_verification: Boolean
  certificate_conformity: Boolean
  module_device: String
  tr_device: String
  certificate_assessment_number: String
  certificate_verification_number: String
  certificate_calibration_number: String
  department_assessment_center: String
  department_verification_center: String
  department_calibration_center: String
  conformity_data: DateTime
  calibration_data: DateTime
  valid_verification: DateTime
  notes: String
  author: User!
  createdAt: DateTime!
}

type MyDeviceConnection {
  pageInfo: PageInfo!
  edges: [MyDeviceEdge]!
  aggregate: AggregateMyDevice!
}

input MyDeviceCreateInput {
  id: ID
  name_device: String!
  brand_device: String!
  series_device: String!
  kind_device: String
  certificate_calibration: Boolean
  certificate_verification: Boolean
  certificate_conformity: Boolean
  module_device: String
  tr_device: String
  certificate_assessment_number: String
  certificate_verification_number: String
  certificate_calibration_number: String
  department_assessment_center: String
  department_verification_center: String
  department_calibration_center: String
  conformity_data: DateTime
  calibration_data: DateTime
  valid_verification: DateTime
  notes: String
  author: UserCreateOneWithoutMydevicesInput!
}

input MyDeviceCreateManyWithoutAuthorInput {
  create: [MyDeviceCreateWithoutAuthorInput!]
  connect: [MyDeviceWhereUniqueInput!]
}

input MyDeviceCreateWithoutAuthorInput {
  id: ID
  name_device: String!
  brand_device: String!
  series_device: String!
  kind_device: String
  certificate_calibration: Boolean
  certificate_verification: Boolean
  certificate_conformity: Boolean
  module_device: String
  tr_device: String
  certificate_assessment_number: String
  certificate_verification_number: String
  certificate_calibration_number: String
  department_assessment_center: String
  department_verification_center: String
  department_calibration_center: String
  conformity_data: DateTime
  calibration_data: DateTime
  valid_verification: DateTime
  notes: String
}

type MyDeviceEdge {
  node: MyDevice!
  cursor: String!
}

enum MyDeviceOrderByInput {
  id_ASC
  id_DESC
  name_device_ASC
  name_device_DESC
  brand_device_ASC
  brand_device_DESC
  series_device_ASC
  series_device_DESC
  kind_device_ASC
  kind_device_DESC
  certificate_calibration_ASC
  certificate_calibration_DESC
  certificate_verification_ASC
  certificate_verification_DESC
  certificate_conformity_ASC
  certificate_conformity_DESC
  module_device_ASC
  module_device_DESC
  tr_device_ASC
  tr_device_DESC
  certificate_assessment_number_ASC
  certificate_assessment_number_DESC
  certificate_verification_number_ASC
  certificate_verification_number_DESC
  certificate_calibration_number_ASC
  certificate_calibration_number_DESC
  department_assessment_center_ASC
  department_assessment_center_DESC
  department_verification_center_ASC
  department_verification_center_DESC
  department_calibration_center_ASC
  department_calibration_center_DESC
  conformity_data_ASC
  conformity_data_DESC
  calibration_data_ASC
  calibration_data_DESC
  valid_verification_ASC
  valid_verification_DESC
  notes_ASC
  notes_DESC
  createdAt_ASC
  createdAt_DESC
}

type MyDevicePreviousValues {
  id: ID!
  name_device: String!
  brand_device: String!
  series_device: String!
  kind_device: String
  certificate_calibration: Boolean
  certificate_verification: Boolean
  certificate_conformity: Boolean
  module_device: String
  tr_device: String
  certificate_assessment_number: String
  certificate_verification_number: String
  certificate_calibration_number: String
  department_assessment_center: String
  department_verification_center: String
  department_calibration_center: String
  conformity_data: DateTime
  calibration_data: DateTime
  valid_verification: DateTime
  notes: String
  createdAt: DateTime!
}

input MyDeviceScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name_device: String
  name_device_not: String
  name_device_in: [String!]
  name_device_not_in: [String!]
  name_device_lt: String
  name_device_lte: String
  name_device_gt: String
  name_device_gte: String
  name_device_contains: String
  name_device_not_contains: String
  name_device_starts_with: String
  name_device_not_starts_with: String
  name_device_ends_with: String
  name_device_not_ends_with: String
  brand_device: String
  brand_device_not: String
  brand_device_in: [String!]
  brand_device_not_in: [String!]
  brand_device_lt: String
  brand_device_lte: String
  brand_device_gt: String
  brand_device_gte: String
  brand_device_contains: String
  brand_device_not_contains: String
  brand_device_starts_with: String
  brand_device_not_starts_with: String
  brand_device_ends_with: String
  brand_device_not_ends_with: String
  series_device: String
  series_device_not: String
  series_device_in: [String!]
  series_device_not_in: [String!]
  series_device_lt: String
  series_device_lte: String
  series_device_gt: String
  series_device_gte: String
  series_device_contains: String
  series_device_not_contains: String
  series_device_starts_with: String
  series_device_not_starts_with: String
  series_device_ends_with: String
  series_device_not_ends_with: String
  kind_device: String
  kind_device_not: String
  kind_device_in: [String!]
  kind_device_not_in: [String!]
  kind_device_lt: String
  kind_device_lte: String
  kind_device_gt: String
  kind_device_gte: String
  kind_device_contains: String
  kind_device_not_contains: String
  kind_device_starts_with: String
  kind_device_not_starts_with: String
  kind_device_ends_with: String
  kind_device_not_ends_with: String
  certificate_calibration: Boolean
  certificate_calibration_not: Boolean
  certificate_verification: Boolean
  certificate_verification_not: Boolean
  certificate_conformity: Boolean
  certificate_conformity_not: Boolean
  module_device: String
  module_device_not: String
  module_device_in: [String!]
  module_device_not_in: [String!]
  module_device_lt: String
  module_device_lte: String
  module_device_gt: String
  module_device_gte: String
  module_device_contains: String
  module_device_not_contains: String
  module_device_starts_with: String
  module_device_not_starts_with: String
  module_device_ends_with: String
  module_device_not_ends_with: String
  tr_device: String
  tr_device_not: String
  tr_device_in: [String!]
  tr_device_not_in: [String!]
  tr_device_lt: String
  tr_device_lte: String
  tr_device_gt: String
  tr_device_gte: String
  tr_device_contains: String
  tr_device_not_contains: String
  tr_device_starts_with: String
  tr_device_not_starts_with: String
  tr_device_ends_with: String
  tr_device_not_ends_with: String
  certificate_assessment_number: String
  certificate_assessment_number_not: String
  certificate_assessment_number_in: [String!]
  certificate_assessment_number_not_in: [String!]
  certificate_assessment_number_lt: String
  certificate_assessment_number_lte: String
  certificate_assessment_number_gt: String
  certificate_assessment_number_gte: String
  certificate_assessment_number_contains: String
  certificate_assessment_number_not_contains: String
  certificate_assessment_number_starts_with: String
  certificate_assessment_number_not_starts_with: String
  certificate_assessment_number_ends_with: String
  certificate_assessment_number_not_ends_with: String
  certificate_verification_number: String
  certificate_verification_number_not: String
  certificate_verification_number_in: [String!]
  certificate_verification_number_not_in: [String!]
  certificate_verification_number_lt: String
  certificate_verification_number_lte: String
  certificate_verification_number_gt: String
  certificate_verification_number_gte: String
  certificate_verification_number_contains: String
  certificate_verification_number_not_contains: String
  certificate_verification_number_starts_with: String
  certificate_verification_number_not_starts_with: String
  certificate_verification_number_ends_with: String
  certificate_verification_number_not_ends_with: String
  certificate_calibration_number: String
  certificate_calibration_number_not: String
  certificate_calibration_number_in: [String!]
  certificate_calibration_number_not_in: [String!]
  certificate_calibration_number_lt: String
  certificate_calibration_number_lte: String
  certificate_calibration_number_gt: String
  certificate_calibration_number_gte: String
  certificate_calibration_number_contains: String
  certificate_calibration_number_not_contains: String
  certificate_calibration_number_starts_with: String
  certificate_calibration_number_not_starts_with: String
  certificate_calibration_number_ends_with: String
  certificate_calibration_number_not_ends_with: String
  department_assessment_center: String
  department_assessment_center_not: String
  department_assessment_center_in: [String!]
  department_assessment_center_not_in: [String!]
  department_assessment_center_lt: String
  department_assessment_center_lte: String
  department_assessment_center_gt: String
  department_assessment_center_gte: String
  department_assessment_center_contains: String
  department_assessment_center_not_contains: String
  department_assessment_center_starts_with: String
  department_assessment_center_not_starts_with: String
  department_assessment_center_ends_with: String
  department_assessment_center_not_ends_with: String
  department_verification_center: String
  department_verification_center_not: String
  department_verification_center_in: [String!]
  department_verification_center_not_in: [String!]
  department_verification_center_lt: String
  department_verification_center_lte: String
  department_verification_center_gt: String
  department_verification_center_gte: String
  department_verification_center_contains: String
  department_verification_center_not_contains: String
  department_verification_center_starts_with: String
  department_verification_center_not_starts_with: String
  department_verification_center_ends_with: String
  department_verification_center_not_ends_with: String
  department_calibration_center: String
  department_calibration_center_not: String
  department_calibration_center_in: [String!]
  department_calibration_center_not_in: [String!]
  department_calibration_center_lt: String
  department_calibration_center_lte: String
  department_calibration_center_gt: String
  department_calibration_center_gte: String
  department_calibration_center_contains: String
  department_calibration_center_not_contains: String
  department_calibration_center_starts_with: String
  department_calibration_center_not_starts_with: String
  department_calibration_center_ends_with: String
  department_calibration_center_not_ends_with: String
  conformity_data: DateTime
  conformity_data_not: DateTime
  conformity_data_in: [DateTime!]
  conformity_data_not_in: [DateTime!]
  conformity_data_lt: DateTime
  conformity_data_lte: DateTime
  conformity_data_gt: DateTime
  conformity_data_gte: DateTime
  calibration_data: DateTime
  calibration_data_not: DateTime
  calibration_data_in: [DateTime!]
  calibration_data_not_in: [DateTime!]
  calibration_data_lt: DateTime
  calibration_data_lte: DateTime
  calibration_data_gt: DateTime
  calibration_data_gte: DateTime
  valid_verification: DateTime
  valid_verification_not: DateTime
  valid_verification_in: [DateTime!]
  valid_verification_not_in: [DateTime!]
  valid_verification_lt: DateTime
  valid_verification_lte: DateTime
  valid_verification_gt: DateTime
  valid_verification_gte: DateTime
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [MyDeviceScalarWhereInput!]
  OR: [MyDeviceScalarWhereInput!]
  NOT: [MyDeviceScalarWhereInput!]
}

type MyDeviceSubscriptionPayload {
  mutation: MutationType!
  node: MyDevice
  updatedFields: [String!]
  previousValues: MyDevicePreviousValues
}

input MyDeviceSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: MyDeviceWhereInput
  AND: [MyDeviceSubscriptionWhereInput!]
  OR: [MyDeviceSubscriptionWhereInput!]
  NOT: [MyDeviceSubscriptionWhereInput!]
}

input MyDeviceUpdateInput {
  name_device: String
  brand_device: String
  series_device: String
  kind_device: String
  certificate_calibration: Boolean
  certificate_verification: Boolean
  certificate_conformity: Boolean
  module_device: String
  tr_device: String
  certificate_assessment_number: String
  certificate_verification_number: String
  certificate_calibration_number: String
  department_assessment_center: String
  department_verification_center: String
  department_calibration_center: String
  conformity_data: DateTime
  calibration_data: DateTime
  valid_verification: DateTime
  notes: String
  author: UserUpdateOneRequiredWithoutMydevicesInput
}

input MyDeviceUpdateManyDataInput {
  name_device: String
  brand_device: String
  series_device: String
  kind_device: String
  certificate_calibration: Boolean
  certificate_verification: Boolean
  certificate_conformity: Boolean
  module_device: String
  tr_device: String
  certificate_assessment_number: String
  certificate_verification_number: String
  certificate_calibration_number: String
  department_assessment_center: String
  department_verification_center: String
  department_calibration_center: String
  conformity_data: DateTime
  calibration_data: DateTime
  valid_verification: DateTime
  notes: String
}

input MyDeviceUpdateManyMutationInput {
  name_device: String
  brand_device: String
  series_device: String
  kind_device: String
  certificate_calibration: Boolean
  certificate_verification: Boolean
  certificate_conformity: Boolean
  module_device: String
  tr_device: String
  certificate_assessment_number: String
  certificate_verification_number: String
  certificate_calibration_number: String
  department_assessment_center: String
  department_verification_center: String
  department_calibration_center: String
  conformity_data: DateTime
  calibration_data: DateTime
  valid_verification: DateTime
  notes: String
}

input MyDeviceUpdateManyWithoutAuthorInput {
  create: [MyDeviceCreateWithoutAuthorInput!]
  delete: [MyDeviceWhereUniqueInput!]
  connect: [MyDeviceWhereUniqueInput!]
  set: [MyDeviceWhereUniqueInput!]
  disconnect: [MyDeviceWhereUniqueInput!]
  update: [MyDeviceUpdateWithWhereUniqueWithoutAuthorInput!]
  upsert: [MyDeviceUpsertWithWhereUniqueWithoutAuthorInput!]
  deleteMany: [MyDeviceScalarWhereInput!]
  updateMany: [MyDeviceUpdateManyWithWhereNestedInput!]
}

input MyDeviceUpdateManyWithWhereNestedInput {
  where: MyDeviceScalarWhereInput!
  data: MyDeviceUpdateManyDataInput!
}

input MyDeviceUpdateWithoutAuthorDataInput {
  name_device: String
  brand_device: String
  series_device: String
  kind_device: String
  certificate_calibration: Boolean
  certificate_verification: Boolean
  certificate_conformity: Boolean
  module_device: String
  tr_device: String
  certificate_assessment_number: String
  certificate_verification_number: String
  certificate_calibration_number: String
  department_assessment_center: String
  department_verification_center: String
  department_calibration_center: String
  conformity_data: DateTime
  calibration_data: DateTime
  valid_verification: DateTime
  notes: String
}

input MyDeviceUpdateWithWhereUniqueWithoutAuthorInput {
  where: MyDeviceWhereUniqueInput!
  data: MyDeviceUpdateWithoutAuthorDataInput!
}

input MyDeviceUpsertWithWhereUniqueWithoutAuthorInput {
  where: MyDeviceWhereUniqueInput!
  update: MyDeviceUpdateWithoutAuthorDataInput!
  create: MyDeviceCreateWithoutAuthorInput!
}

input MyDeviceWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name_device: String
  name_device_not: String
  name_device_in: [String!]
  name_device_not_in: [String!]
  name_device_lt: String
  name_device_lte: String
  name_device_gt: String
  name_device_gte: String
  name_device_contains: String
  name_device_not_contains: String
  name_device_starts_with: String
  name_device_not_starts_with: String
  name_device_ends_with: String
  name_device_not_ends_with: String
  brand_device: String
  brand_device_not: String
  brand_device_in: [String!]
  brand_device_not_in: [String!]
  brand_device_lt: String
  brand_device_lte: String
  brand_device_gt: String
  brand_device_gte: String
  brand_device_contains: String
  brand_device_not_contains: String
  brand_device_starts_with: String
  brand_device_not_starts_with: String
  brand_device_ends_with: String
  brand_device_not_ends_with: String
  series_device: String
  series_device_not: String
  series_device_in: [String!]
  series_device_not_in: [String!]
  series_device_lt: String
  series_device_lte: String
  series_device_gt: String
  series_device_gte: String
  series_device_contains: String
  series_device_not_contains: String
  series_device_starts_with: String
  series_device_not_starts_with: String
  series_device_ends_with: String
  series_device_not_ends_with: String
  kind_device: String
  kind_device_not: String
  kind_device_in: [String!]
  kind_device_not_in: [String!]
  kind_device_lt: String
  kind_device_lte: String
  kind_device_gt: String
  kind_device_gte: String
  kind_device_contains: String
  kind_device_not_contains: String
  kind_device_starts_with: String
  kind_device_not_starts_with: String
  kind_device_ends_with: String
  kind_device_not_ends_with: String
  certificate_calibration: Boolean
  certificate_calibration_not: Boolean
  certificate_verification: Boolean
  certificate_verification_not: Boolean
  certificate_conformity: Boolean
  certificate_conformity_not: Boolean
  module_device: String
  module_device_not: String
  module_device_in: [String!]
  module_device_not_in: [String!]
  module_device_lt: String
  module_device_lte: String
  module_device_gt: String
  module_device_gte: String
  module_device_contains: String
  module_device_not_contains: String
  module_device_starts_with: String
  module_device_not_starts_with: String
  module_device_ends_with: String
  module_device_not_ends_with: String
  tr_device: String
  tr_device_not: String
  tr_device_in: [String!]
  tr_device_not_in: [String!]
  tr_device_lt: String
  tr_device_lte: String
  tr_device_gt: String
  tr_device_gte: String
  tr_device_contains: String
  tr_device_not_contains: String
  tr_device_starts_with: String
  tr_device_not_starts_with: String
  tr_device_ends_with: String
  tr_device_not_ends_with: String
  certificate_assessment_number: String
  certificate_assessment_number_not: String
  certificate_assessment_number_in: [String!]
  certificate_assessment_number_not_in: [String!]
  certificate_assessment_number_lt: String
  certificate_assessment_number_lte: String
  certificate_assessment_number_gt: String
  certificate_assessment_number_gte: String
  certificate_assessment_number_contains: String
  certificate_assessment_number_not_contains: String
  certificate_assessment_number_starts_with: String
  certificate_assessment_number_not_starts_with: String
  certificate_assessment_number_ends_with: String
  certificate_assessment_number_not_ends_with: String
  certificate_verification_number: String
  certificate_verification_number_not: String
  certificate_verification_number_in: [String!]
  certificate_verification_number_not_in: [String!]
  certificate_verification_number_lt: String
  certificate_verification_number_lte: String
  certificate_verification_number_gt: String
  certificate_verification_number_gte: String
  certificate_verification_number_contains: String
  certificate_verification_number_not_contains: String
  certificate_verification_number_starts_with: String
  certificate_verification_number_not_starts_with: String
  certificate_verification_number_ends_with: String
  certificate_verification_number_not_ends_with: String
  certificate_calibration_number: String
  certificate_calibration_number_not: String
  certificate_calibration_number_in: [String!]
  certificate_calibration_number_not_in: [String!]
  certificate_calibration_number_lt: String
  certificate_calibration_number_lte: String
  certificate_calibration_number_gt: String
  certificate_calibration_number_gte: String
  certificate_calibration_number_contains: String
  certificate_calibration_number_not_contains: String
  certificate_calibration_number_starts_with: String
  certificate_calibration_number_not_starts_with: String
  certificate_calibration_number_ends_with: String
  certificate_calibration_number_not_ends_with: String
  department_assessment_center: String
  department_assessment_center_not: String
  department_assessment_center_in: [String!]
  department_assessment_center_not_in: [String!]
  department_assessment_center_lt: String
  department_assessment_center_lte: String
  department_assessment_center_gt: String
  department_assessment_center_gte: String
  department_assessment_center_contains: String
  department_assessment_center_not_contains: String
  department_assessment_center_starts_with: String
  department_assessment_center_not_starts_with: String
  department_assessment_center_ends_with: String
  department_assessment_center_not_ends_with: String
  department_verification_center: String
  department_verification_center_not: String
  department_verification_center_in: [String!]
  department_verification_center_not_in: [String!]
  department_verification_center_lt: String
  department_verification_center_lte: String
  department_verification_center_gt: String
  department_verification_center_gte: String
  department_verification_center_contains: String
  department_verification_center_not_contains: String
  department_verification_center_starts_with: String
  department_verification_center_not_starts_with: String
  department_verification_center_ends_with: String
  department_verification_center_not_ends_with: String
  department_calibration_center: String
  department_calibration_center_not: String
  department_calibration_center_in: [String!]
  department_calibration_center_not_in: [String!]
  department_calibration_center_lt: String
  department_calibration_center_lte: String
  department_calibration_center_gt: String
  department_calibration_center_gte: String
  department_calibration_center_contains: String
  department_calibration_center_not_contains: String
  department_calibration_center_starts_with: String
  department_calibration_center_not_starts_with: String
  department_calibration_center_ends_with: String
  department_calibration_center_not_ends_with: String
  conformity_data: DateTime
  conformity_data_not: DateTime
  conformity_data_in: [DateTime!]
  conformity_data_not_in: [DateTime!]
  conformity_data_lt: DateTime
  conformity_data_lte: DateTime
  conformity_data_gt: DateTime
  conformity_data_gte: DateTime
  calibration_data: DateTime
  calibration_data_not: DateTime
  calibration_data_in: [DateTime!]
  calibration_data_not_in: [DateTime!]
  calibration_data_lt: DateTime
  calibration_data_lte: DateTime
  calibration_data_gt: DateTime
  calibration_data_gte: DateTime
  valid_verification: DateTime
  valid_verification_not: DateTime
  valid_verification_in: [DateTime!]
  valid_verification_not_in: [DateTime!]
  valid_verification_lt: DateTime
  valid_verification_lte: DateTime
  valid_verification_gt: DateTime
  valid_verification_gte: DateTime
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  author: UserWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [MyDeviceWhereInput!]
  OR: [MyDeviceWhereInput!]
  NOT: [MyDeviceWhereInput!]
}

input MyDeviceWhereUniqueInput {
  id: ID
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Post {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
  title: String!
  content: String!
  author: User!
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  id: ID
  published: Boolean
  title: String!
  content: String!
  author: UserCreateOneWithoutPostsInput!
}

input PostCreateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connect: [PostWhereUniqueInput!]
}

input PostCreateWithoutAuthorInput {
  id: ID
  published: Boolean
  title: String!
  content: String!
}

type PostEdge {
  node: Post!
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  published_ASC
  published_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
}

type PostPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
  title: String!
  content: String!
}

input PostScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  published: Boolean
  published_not: Boolean
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  AND: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  NOT: [PostScalarWhereInput!]
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PostWhereInput
  AND: [PostSubscriptionWhereInput!]
  OR: [PostSubscriptionWhereInput!]
  NOT: [PostSubscriptionWhereInput!]
}

input PostUpdateInput {
  published: Boolean
  title: String
  content: String
  author: UserUpdateOneRequiredWithoutPostsInput
}

input PostUpdateManyDataInput {
  published: Boolean
  title: String
  content: String
}

input PostUpdateManyMutationInput {
  published: Boolean
  title: String
  content: String
}

input PostUpdateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  delete: [PostWhereUniqueInput!]
  connect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
  deleteMany: [PostScalarWhereInput!]
  updateMany: [PostUpdateManyWithWhereNestedInput!]
}

input PostUpdateManyWithWhereNestedInput {
  where: PostScalarWhereInput!
  data: PostUpdateManyDataInput!
}

input PostUpdateWithoutAuthorDataInput {
  published: Boolean
  title: String
  content: String
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  data: PostUpdateWithoutAuthorDataInput!
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  update: PostUpdateWithoutAuthorDataInput!
  create: PostCreateWithoutAuthorInput!
}

input PostWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  published: Boolean
  published_not: Boolean
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  author: UserWhereInput
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
}

input PostWhereUniqueInput {
  id: ID
}

type Query {
  appointments(where: AppointmentsWhereUniqueInput!): Appointments
  appointmentses(where: AppointmentsWhereInput, orderBy: AppointmentsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Appointments]!
  appointmentsesConnection(where: AppointmentsWhereInput, orderBy: AppointmentsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AppointmentsConnection!
  dTC(where: DTCWhereUniqueInput!): DTC
  dTCs(where: DTCWhereInput, orderBy: DTCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DTC]!
  dTCsConnection(where: DTCWhereInput, orderBy: DTCOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DTCConnection!
  device(where: DeviceWhereUniqueInput!): Device
  devices(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device]!
  devicesConnection(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DeviceConnection!
  letterEmail(where: LetterEmailWhereUniqueInput!): LetterEmail
  letterEmails(where: LetterEmailWhereInput, orderBy: LetterEmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LetterEmail]!
  letterEmailsConnection(where: LetterEmailWhereInput, orderBy: LetterEmailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LetterEmailConnection!
  myDevice(where: MyDeviceWhereUniqueInput!): MyDevice
  myDevices(where: MyDeviceWhereInput, orderBy: MyDeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MyDevice]!
  myDevicesConnection(where: MyDeviceWhereInput, orderBy: MyDeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MyDeviceConnection!
  post(where: PostWhereUniqueInput!): Post
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  tR(where: TRWhereUniqueInput!): TR
  tRs(where: TRWhereInput, orderBy: TROrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TR]!
  tRsConnection(where: TRWhereInput, orderBy: TROrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TRConnection!
  team(where: TeamWhereUniqueInput!): Team
  teams(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Team]!
  teamsConnection(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamConnection!
  teamMembers(where: TeamMembersWhereUniqueInput!): TeamMembers
  teamMemberses(where: TeamMembersWhereInput, orderBy: TeamMembersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMembers]!
  teamMembersesConnection(where: TeamMembersWhereInput, orderBy: TeamMembersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TeamMembersConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

enum Role {
  ADMIN
  CUSTOMER
  TEAM
}

type Subscription {
  appointments(where: AppointmentsSubscriptionWhereInput): AppointmentsSubscriptionPayload
  dTC(where: DTCSubscriptionWhereInput): DTCSubscriptionPayload
  device(where: DeviceSubscriptionWhereInput): DeviceSubscriptionPayload
  letterEmail(where: LetterEmailSubscriptionWhereInput): LetterEmailSubscriptionPayload
  myDevice(where: MyDeviceSubscriptionWhereInput): MyDeviceSubscriptionPayload
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  tR(where: TRSubscriptionWhereInput): TRSubscriptionPayload
  team(where: TeamSubscriptionWhereInput): TeamSubscriptionPayload
  teamMembers(where: TeamMembersSubscriptionWhereInput): TeamMembersSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type Team {
  id: ID!
  name: String!
  author: User
  teamMembers(where: TeamMembersWhereInput, orderBy: TeamMembersOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TeamMembers!]
  payment: Boolean
  role: Role!
}

type TeamConnection {
  pageInfo: PageInfo!
  edges: [TeamEdge]!
  aggregate: AggregateTeam!
}

input TeamCreateInput {
  id: ID
  name: String!
  author: UserCreateOneWithoutTeamsInput
  teamMembers: TeamMembersCreateManyWithoutTeamInput
  payment: Boolean
  role: Role
}

input TeamCreateManyWithoutAuthorInput {
  create: [TeamCreateWithoutAuthorInput!]
  connect: [TeamWhereUniqueInput!]
}

input TeamCreateOneWithoutTeamMembersInput {
  create: TeamCreateWithoutTeamMembersInput
  connect: TeamWhereUniqueInput
}

input TeamCreateWithoutAuthorInput {
  id: ID
  name: String!
  teamMembers: TeamMembersCreateManyWithoutTeamInput
  payment: Boolean
  role: Role
}

input TeamCreateWithoutTeamMembersInput {
  id: ID
  name: String!
  author: UserCreateOneWithoutTeamsInput
  payment: Boolean
  role: Role
}

type TeamEdge {
  node: Team!
  cursor: String!
}

type TeamMembers {
  id: ID!
  emailMembers: String!
  member: Members!
  memberConfirmed: Boolean
  memberConfirmToken: String
  team: Team!
}

type TeamMembersConnection {
  pageInfo: PageInfo!
  edges: [TeamMembersEdge]!
  aggregate: AggregateTeamMembers!
}

input TeamMembersCreateInput {
  id: ID
  emailMembers: String!
  member: Members
  memberConfirmed: Boolean
  memberConfirmToken: String
  team: TeamCreateOneWithoutTeamMembersInput!
}

input TeamMembersCreateManyWithoutTeamInput {
  create: [TeamMembersCreateWithoutTeamInput!]
  connect: [TeamMembersWhereUniqueInput!]
}

input TeamMembersCreateWithoutTeamInput {
  id: ID
  emailMembers: String!
  member: Members
  memberConfirmed: Boolean
  memberConfirmToken: String
}

type TeamMembersEdge {
  node: TeamMembers!
  cursor: String!
}

enum TeamMembersOrderByInput {
  id_ASC
  id_DESC
  emailMembers_ASC
  emailMembers_DESC
  member_ASC
  member_DESC
  memberConfirmed_ASC
  memberConfirmed_DESC
  memberConfirmToken_ASC
  memberConfirmToken_DESC
}

type TeamMembersPreviousValues {
  id: ID!
  emailMembers: String!
  member: Members!
  memberConfirmed: Boolean
  memberConfirmToken: String
}

input TeamMembersScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  emailMembers: String
  emailMembers_not: String
  emailMembers_in: [String!]
  emailMembers_not_in: [String!]
  emailMembers_lt: String
  emailMembers_lte: String
  emailMembers_gt: String
  emailMembers_gte: String
  emailMembers_contains: String
  emailMembers_not_contains: String
  emailMembers_starts_with: String
  emailMembers_not_starts_with: String
  emailMembers_ends_with: String
  emailMembers_not_ends_with: String
  member: Members
  member_not: Members
  member_in: [Members!]
  member_not_in: [Members!]
  memberConfirmed: Boolean
  memberConfirmed_not: Boolean
  memberConfirmToken: String
  memberConfirmToken_not: String
  memberConfirmToken_in: [String!]
  memberConfirmToken_not_in: [String!]
  memberConfirmToken_lt: String
  memberConfirmToken_lte: String
  memberConfirmToken_gt: String
  memberConfirmToken_gte: String
  memberConfirmToken_contains: String
  memberConfirmToken_not_contains: String
  memberConfirmToken_starts_with: String
  memberConfirmToken_not_starts_with: String
  memberConfirmToken_ends_with: String
  memberConfirmToken_not_ends_with: String
  AND: [TeamMembersScalarWhereInput!]
  OR: [TeamMembersScalarWhereInput!]
  NOT: [TeamMembersScalarWhereInput!]
}

type TeamMembersSubscriptionPayload {
  mutation: MutationType!
  node: TeamMembers
  updatedFields: [String!]
  previousValues: TeamMembersPreviousValues
}

input TeamMembersSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TeamMembersWhereInput
  AND: [TeamMembersSubscriptionWhereInput!]
  OR: [TeamMembersSubscriptionWhereInput!]
  NOT: [TeamMembersSubscriptionWhereInput!]
}

input TeamMembersUpdateInput {
  emailMembers: String
  member: Members
  memberConfirmed: Boolean
  memberConfirmToken: String
  team: TeamUpdateOneRequiredWithoutTeamMembersInput
}

input TeamMembersUpdateManyDataInput {
  emailMembers: String
  member: Members
  memberConfirmed: Boolean
  memberConfirmToken: String
}

input TeamMembersUpdateManyMutationInput {
  emailMembers: String
  member: Members
  memberConfirmed: Boolean
  memberConfirmToken: String
}

input TeamMembersUpdateManyWithoutTeamInput {
  create: [TeamMembersCreateWithoutTeamInput!]
  delete: [TeamMembersWhereUniqueInput!]
  connect: [TeamMembersWhereUniqueInput!]
  set: [TeamMembersWhereUniqueInput!]
  disconnect: [TeamMembersWhereUniqueInput!]
  update: [TeamMembersUpdateWithWhereUniqueWithoutTeamInput!]
  upsert: [TeamMembersUpsertWithWhereUniqueWithoutTeamInput!]
  deleteMany: [TeamMembersScalarWhereInput!]
  updateMany: [TeamMembersUpdateManyWithWhereNestedInput!]
}

input TeamMembersUpdateManyWithWhereNestedInput {
  where: TeamMembersScalarWhereInput!
  data: TeamMembersUpdateManyDataInput!
}

input TeamMembersUpdateWithoutTeamDataInput {
  emailMembers: String
  member: Members
  memberConfirmed: Boolean
  memberConfirmToken: String
}

input TeamMembersUpdateWithWhereUniqueWithoutTeamInput {
  where: TeamMembersWhereUniqueInput!
  data: TeamMembersUpdateWithoutTeamDataInput!
}

input TeamMembersUpsertWithWhereUniqueWithoutTeamInput {
  where: TeamMembersWhereUniqueInput!
  update: TeamMembersUpdateWithoutTeamDataInput!
  create: TeamMembersCreateWithoutTeamInput!
}

input TeamMembersWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  emailMembers: String
  emailMembers_not: String
  emailMembers_in: [String!]
  emailMembers_not_in: [String!]
  emailMembers_lt: String
  emailMembers_lte: String
  emailMembers_gt: String
  emailMembers_gte: String
  emailMembers_contains: String
  emailMembers_not_contains: String
  emailMembers_starts_with: String
  emailMembers_not_starts_with: String
  emailMembers_ends_with: String
  emailMembers_not_ends_with: String
  member: Members
  member_not: Members
  member_in: [Members!]
  member_not_in: [Members!]
  memberConfirmed: Boolean
  memberConfirmed_not: Boolean
  memberConfirmToken: String
  memberConfirmToken_not: String
  memberConfirmToken_in: [String!]
  memberConfirmToken_not_in: [String!]
  memberConfirmToken_lt: String
  memberConfirmToken_lte: String
  memberConfirmToken_gt: String
  memberConfirmToken_gte: String
  memberConfirmToken_contains: String
  memberConfirmToken_not_contains: String
  memberConfirmToken_starts_with: String
  memberConfirmToken_not_starts_with: String
  memberConfirmToken_ends_with: String
  memberConfirmToken_not_ends_with: String
  team: TeamWhereInput
  AND: [TeamMembersWhereInput!]
  OR: [TeamMembersWhereInput!]
  NOT: [TeamMembersWhereInput!]
}

input TeamMembersWhereUniqueInput {
  id: ID
  emailMembers: String
}

enum TeamOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  payment_ASC
  payment_DESC
  role_ASC
  role_DESC
}

type TeamPreviousValues {
  id: ID!
  name: String!
  payment: Boolean
  role: Role!
}

input TeamScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  payment: Boolean
  payment_not: Boolean
  role: Role
  role_not: Role
  role_in: [Role!]
  role_not_in: [Role!]
  AND: [TeamScalarWhereInput!]
  OR: [TeamScalarWhereInput!]
  NOT: [TeamScalarWhereInput!]
}

type TeamSubscriptionPayload {
  mutation: MutationType!
  node: Team
  updatedFields: [String!]
  previousValues: TeamPreviousValues
}

input TeamSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TeamWhereInput
  AND: [TeamSubscriptionWhereInput!]
  OR: [TeamSubscriptionWhereInput!]
  NOT: [TeamSubscriptionWhereInput!]
}

input TeamUpdateInput {
  name: String
  author: UserUpdateOneWithoutTeamsInput
  teamMembers: TeamMembersUpdateManyWithoutTeamInput
  payment: Boolean
  role: Role
}

input TeamUpdateManyDataInput {
  name: String
  payment: Boolean
  role: Role
}

input TeamUpdateManyMutationInput {
  name: String
  payment: Boolean
  role: Role
}

input TeamUpdateManyWithoutAuthorInput {
  create: [TeamCreateWithoutAuthorInput!]
  delete: [TeamWhereUniqueInput!]
  connect: [TeamWhereUniqueInput!]
  set: [TeamWhereUniqueInput!]
  disconnect: [TeamWhereUniqueInput!]
  update: [TeamUpdateWithWhereUniqueWithoutAuthorInput!]
  upsert: [TeamUpsertWithWhereUniqueWithoutAuthorInput!]
  deleteMany: [TeamScalarWhereInput!]
  updateMany: [TeamUpdateManyWithWhereNestedInput!]
}

input TeamUpdateManyWithWhereNestedInput {
  where: TeamScalarWhereInput!
  data: TeamUpdateManyDataInput!
}

input TeamUpdateOneRequiredWithoutTeamMembersInput {
  create: TeamCreateWithoutTeamMembersInput
  update: TeamUpdateWithoutTeamMembersDataInput
  upsert: TeamUpsertWithoutTeamMembersInput
  connect: TeamWhereUniqueInput
}

input TeamUpdateWithoutAuthorDataInput {
  name: String
  teamMembers: TeamMembersUpdateManyWithoutTeamInput
  payment: Boolean
  role: Role
}

input TeamUpdateWithoutTeamMembersDataInput {
  name: String
  author: UserUpdateOneWithoutTeamsInput
  payment: Boolean
  role: Role
}

input TeamUpdateWithWhereUniqueWithoutAuthorInput {
  where: TeamWhereUniqueInput!
  data: TeamUpdateWithoutAuthorDataInput!
}

input TeamUpsertWithoutTeamMembersInput {
  update: TeamUpdateWithoutTeamMembersDataInput!
  create: TeamCreateWithoutTeamMembersInput!
}

input TeamUpsertWithWhereUniqueWithoutAuthorInput {
  where: TeamWhereUniqueInput!
  update: TeamUpdateWithoutAuthorDataInput!
  create: TeamCreateWithoutAuthorInput!
}

input TeamWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  author: UserWhereInput
  teamMembers_every: TeamMembersWhereInput
  teamMembers_some: TeamMembersWhereInput
  teamMembers_none: TeamMembersWhereInput
  payment: Boolean
  payment_not: Boolean
  role: Role
  role_not: Role
  role_in: [Role!]
  role_not_in: [Role!]
  AND: [TeamWhereInput!]
  OR: [TeamWhereInput!]
  NOT: [TeamWhereInput!]
}

input TeamWhereUniqueInput {
  id: ID
  name: String
}

type TR {
  id: ID!
  name_TR_UA: String!
  name_TR_EN: String!
  device_id(where: DeviceWhereInput, orderBy: DeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Device!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TRConnection {
  pageInfo: PageInfo!
  edges: [TREdge]!
  aggregate: AggregateTR!
}

input TRCreateInput {
  id: ID
  name_TR_UA: String!
  name_TR_EN: String!
  device_id: DeviceCreateManyWithoutTrInput
}

input TRCreateOneWithoutDevice_idInput {
  create: TRCreateWithoutDevice_idInput
  connect: TRWhereUniqueInput
}

input TRCreateWithoutDevice_idInput {
  id: ID
  name_TR_UA: String!
  name_TR_EN: String!
}

type TREdge {
  node: TR!
  cursor: String!
}

enum TROrderByInput {
  id_ASC
  id_DESC
  name_TR_UA_ASC
  name_TR_UA_DESC
  name_TR_EN_ASC
  name_TR_EN_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TRPreviousValues {
  id: ID!
  name_TR_UA: String!
  name_TR_EN: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TRSubscriptionPayload {
  mutation: MutationType!
  node: TR
  updatedFields: [String!]
  previousValues: TRPreviousValues
}

input TRSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TRWhereInput
  AND: [TRSubscriptionWhereInput!]
  OR: [TRSubscriptionWhereInput!]
  NOT: [TRSubscriptionWhereInput!]
}

input TRUpdateInput {
  name_TR_UA: String
  name_TR_EN: String
  device_id: DeviceUpdateManyWithoutTrInput
}

input TRUpdateManyMutationInput {
  name_TR_UA: String
  name_TR_EN: String
}

input TRUpdateOneRequiredWithoutDevice_idInput {
  create: TRCreateWithoutDevice_idInput
  update: TRUpdateWithoutDevice_idDataInput
  upsert: TRUpsertWithoutDevice_idInput
  connect: TRWhereUniqueInput
}

input TRUpdateWithoutDevice_idDataInput {
  name_TR_UA: String
  name_TR_EN: String
}

input TRUpsertWithoutDevice_idInput {
  update: TRUpdateWithoutDevice_idDataInput!
  create: TRCreateWithoutDevice_idInput!
}

input TRWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name_TR_UA: String
  name_TR_UA_not: String
  name_TR_UA_in: [String!]
  name_TR_UA_not_in: [String!]
  name_TR_UA_lt: String
  name_TR_UA_lte: String
  name_TR_UA_gt: String
  name_TR_UA_gte: String
  name_TR_UA_contains: String
  name_TR_UA_not_contains: String
  name_TR_UA_starts_with: String
  name_TR_UA_not_starts_with: String
  name_TR_UA_ends_with: String
  name_TR_UA_not_ends_with: String
  name_TR_EN: String
  name_TR_EN_not: String
  name_TR_EN_in: [String!]
  name_TR_EN_not_in: [String!]
  name_TR_EN_lt: String
  name_TR_EN_lte: String
  name_TR_EN_gt: String
  name_TR_EN_gte: String
  name_TR_EN_contains: String
  name_TR_EN_not_contains: String
  name_TR_EN_starts_with: String
  name_TR_EN_not_starts_with: String
  name_TR_EN_ends_with: String
  name_TR_EN_not_ends_with: String
  device_id_every: DeviceWhereInput
  device_id_some: DeviceWhereInput
  device_id_none: DeviceWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TRWhereInput!]
  OR: [TRWhereInput!]
  NOT: [TRWhereInput!]
}

input TRWhereUniqueInput {
  id: ID
}

type User {
  id: ID!
  email: String!
  password: String!
  name: String!
  companyName: String
  country: String
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]
  mydevices(where: MyDeviceWhereInput, orderBy: MyDeviceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MyDevice!]
  appointments(where: AppointmentsWhereInput, orderBy: AppointmentsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Appointments!]
  emailConfirmed: Boolean!
  emailConfirmToken: String!
  role: Role!
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  teams(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Team!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  password: String!
  name: String!
  companyName: String
  country: String
  posts: PostCreateManyWithoutAuthorInput
  mydevices: MyDeviceCreateManyWithoutAuthorInput
  appointments: AppointmentsCreateManyWithoutAuthorInput
  emailConfirmed: Boolean!
  emailConfirmToken: String!
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  teams: TeamCreateManyWithoutAuthorInput
}

input UserCreateOneWithoutAppointmentsInput {
  create: UserCreateWithoutAppointmentsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutMydevicesInput {
  create: UserCreateWithoutMydevicesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutPostsInput {
  create: UserCreateWithoutPostsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutTeamsInput {
  create: UserCreateWithoutTeamsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutAppointmentsInput {
  id: ID
  email: String!
  password: String!
  name: String!
  companyName: String
  country: String
  posts: PostCreateManyWithoutAuthorInput
  mydevices: MyDeviceCreateManyWithoutAuthorInput
  emailConfirmed: Boolean!
  emailConfirmToken: String!
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  teams: TeamCreateManyWithoutAuthorInput
}

input UserCreateWithoutMydevicesInput {
  id: ID
  email: String!
  password: String!
  name: String!
  companyName: String
  country: String
  posts: PostCreateManyWithoutAuthorInput
  appointments: AppointmentsCreateManyWithoutAuthorInput
  emailConfirmed: Boolean!
  emailConfirmToken: String!
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  teams: TeamCreateManyWithoutAuthorInput
}

input UserCreateWithoutPostsInput {
  id: ID
  email: String!
  password: String!
  name: String!
  companyName: String
  country: String
  mydevices: MyDeviceCreateManyWithoutAuthorInput
  appointments: AppointmentsCreateManyWithoutAuthorInput
  emailConfirmed: Boolean!
  emailConfirmToken: String!
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  teams: TeamCreateManyWithoutAuthorInput
}

input UserCreateWithoutTeamsInput {
  id: ID
  email: String!
  password: String!
  name: String!
  companyName: String
  country: String
  posts: PostCreateManyWithoutAuthorInput
  mydevices: MyDeviceCreateManyWithoutAuthorInput
  appointments: AppointmentsCreateManyWithoutAuthorInput
  emailConfirmed: Boolean!
  emailConfirmToken: String!
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
  companyName_ASC
  companyName_DESC
  country_ASC
  country_DESC
  emailConfirmed_ASC
  emailConfirmed_DESC
  emailConfirmToken_ASC
  emailConfirmToken_DESC
  role_ASC
  role_DESC
  resetToken_ASC
  resetToken_DESC
  resetExpires_ASC
  resetExpires_DESC
  lastLogin_ASC
  lastLogin_DESC
  joinedAt_ASC
  joinedAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  password: String!
  name: String!
  companyName: String
  country: String
  emailConfirmed: Boolean!
  emailConfirmToken: String!
  role: Role!
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  email: String
  password: String
  name: String
  companyName: String
  country: String
  posts: PostUpdateManyWithoutAuthorInput
  mydevices: MyDeviceUpdateManyWithoutAuthorInput
  appointments: AppointmentsUpdateManyWithoutAuthorInput
  emailConfirmed: Boolean
  emailConfirmToken: String
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime
  teams: TeamUpdateManyWithoutAuthorInput
}

input UserUpdateManyMutationInput {
  email: String
  password: String
  name: String
  companyName: String
  country: String
  emailConfirmed: Boolean
  emailConfirmToken: String
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime
}

input UserUpdateOneRequiredWithoutAppointmentsInput {
  create: UserCreateWithoutAppointmentsInput
  update: UserUpdateWithoutAppointmentsDataInput
  upsert: UserUpsertWithoutAppointmentsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutMydevicesInput {
  create: UserCreateWithoutMydevicesInput
  update: UserUpdateWithoutMydevicesDataInput
  upsert: UserUpsertWithoutMydevicesInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutPostsInput {
  create: UserCreateWithoutPostsInput
  update: UserUpdateWithoutPostsDataInput
  upsert: UserUpsertWithoutPostsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutTeamsInput {
  create: UserCreateWithoutTeamsInput
  update: UserUpdateWithoutTeamsDataInput
  upsert: UserUpsertWithoutTeamsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutAppointmentsDataInput {
  email: String
  password: String
  name: String
  companyName: String
  country: String
  posts: PostUpdateManyWithoutAuthorInput
  mydevices: MyDeviceUpdateManyWithoutAuthorInput
  emailConfirmed: Boolean
  emailConfirmToken: String
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime
  teams: TeamUpdateManyWithoutAuthorInput
}

input UserUpdateWithoutMydevicesDataInput {
  email: String
  password: String
  name: String
  companyName: String
  country: String
  posts: PostUpdateManyWithoutAuthorInput
  appointments: AppointmentsUpdateManyWithoutAuthorInput
  emailConfirmed: Boolean
  emailConfirmToken: String
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime
  teams: TeamUpdateManyWithoutAuthorInput
}

input UserUpdateWithoutPostsDataInput {
  email: String
  password: String
  name: String
  companyName: String
  country: String
  mydevices: MyDeviceUpdateManyWithoutAuthorInput
  appointments: AppointmentsUpdateManyWithoutAuthorInput
  emailConfirmed: Boolean
  emailConfirmToken: String
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime
  teams: TeamUpdateManyWithoutAuthorInput
}

input UserUpdateWithoutTeamsDataInput {
  email: String
  password: String
  name: String
  companyName: String
  country: String
  posts: PostUpdateManyWithoutAuthorInput
  mydevices: MyDeviceUpdateManyWithoutAuthorInput
  appointments: AppointmentsUpdateManyWithoutAuthorInput
  emailConfirmed: Boolean
  emailConfirmToken: String
  role: Role
  resetToken: String
  resetExpires: DateTime
  lastLogin: DateTime
  joinedAt: DateTime
}

input UserUpsertWithoutAppointmentsInput {
  update: UserUpdateWithoutAppointmentsDataInput!
  create: UserCreateWithoutAppointmentsInput!
}

input UserUpsertWithoutMydevicesInput {
  update: UserUpdateWithoutMydevicesDataInput!
  create: UserCreateWithoutMydevicesInput!
}

input UserUpsertWithoutPostsInput {
  update: UserUpdateWithoutPostsDataInput!
  create: UserCreateWithoutPostsInput!
}

input UserUpsertWithoutTeamsInput {
  update: UserUpdateWithoutTeamsDataInput!
  create: UserCreateWithoutTeamsInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  companyName: String
  companyName_not: String
  companyName_in: [String!]
  companyName_not_in: [String!]
  companyName_lt: String
  companyName_lte: String
  companyName_gt: String
  companyName_gte: String
  companyName_contains: String
  companyName_not_contains: String
  companyName_starts_with: String
  companyName_not_starts_with: String
  companyName_ends_with: String
  companyName_not_ends_with: String
  country: String
  country_not: String
  country_in: [String!]
  country_not_in: [String!]
  country_lt: String
  country_lte: String
  country_gt: String
  country_gte: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  posts_every: PostWhereInput
  posts_some: PostWhereInput
  posts_none: PostWhereInput
  mydevices_every: MyDeviceWhereInput
  mydevices_some: MyDeviceWhereInput
  mydevices_none: MyDeviceWhereInput
  appointments_every: AppointmentsWhereInput
  appointments_some: AppointmentsWhereInput
  appointments_none: AppointmentsWhereInput
  emailConfirmed: Boolean
  emailConfirmed_not: Boolean
  emailConfirmToken: String
  emailConfirmToken_not: String
  emailConfirmToken_in: [String!]
  emailConfirmToken_not_in: [String!]
  emailConfirmToken_lt: String
  emailConfirmToken_lte: String
  emailConfirmToken_gt: String
  emailConfirmToken_gte: String
  emailConfirmToken_contains: String
  emailConfirmToken_not_contains: String
  emailConfirmToken_starts_with: String
  emailConfirmToken_not_starts_with: String
  emailConfirmToken_ends_with: String
  emailConfirmToken_not_ends_with: String
  role: Role
  role_not: Role
  role_in: [Role!]
  role_not_in: [Role!]
  resetToken: String
  resetToken_not: String
  resetToken_in: [String!]
  resetToken_not_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_contains: String
  resetToken_not_contains: String
  resetToken_starts_with: String
  resetToken_not_starts_with: String
  resetToken_ends_with: String
  resetToken_not_ends_with: String
  resetExpires: DateTime
  resetExpires_not: DateTime
  resetExpires_in: [DateTime!]
  resetExpires_not_in: [DateTime!]
  resetExpires_lt: DateTime
  resetExpires_lte: DateTime
  resetExpires_gt: DateTime
  resetExpires_gte: DateTime
  lastLogin: DateTime
  lastLogin_not: DateTime
  lastLogin_in: [DateTime!]
  lastLogin_not_in: [DateTime!]
  lastLogin_lt: DateTime
  lastLogin_lte: DateTime
  lastLogin_gt: DateTime
  lastLogin_gte: DateTime
  joinedAt: DateTime
  joinedAt_not: DateTime
  joinedAt_in: [DateTime!]
  joinedAt_not_in: [DateTime!]
  joinedAt_lt: DateTime
  joinedAt_lte: DateTime
  joinedAt_gt: DateTime
  joinedAt_gte: DateTime
  teams_every: TeamWhereInput
  teams_some: TeamWhereInput
  teams_none: TeamWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
`